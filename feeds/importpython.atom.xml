<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>蠎周刊</title><link href="http://weekly.pychina.org/" rel="alternate"></link><link href="http://weekly.pychina.org/feeds/importpython.atom.xml" rel="self"></link><id>http://weekly.pychina.org/</id><updated>2016-11-23T13:31:00+08:00</updated><entry><title>蠎加载 100</title><link href="http://weekly.pychina.org/importpython/importpython-100.html" rel="alternate"></link><published>2016-11-23T13:31:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-11-23:importpython/importpython-100.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/100/"&gt;Import Python Weekly Newsletter - Issue No 100&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/newsletter/quiz/"&gt;蠎加载百期知识竞赛&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;importpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's been 2 years of curating ImportPython and today is the 100th Issue. Wow. What a moment ?. Here is a python quiz competition. Five random() participants who answer all questions correctly win complete bundle of Writing Idiomatic python book by Jeff Knupp. If you take the quiz at the end of it is a link with discount too. This quiz is an our attempt at having fun and saying thanks to all you readers of ImportPython. Do take to twitter with the hashtag #importpython100 happy to hear what you have to say.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
追查了一下, &lt;code&gt;2014-09-25&lt;/code&gt; 开始快译 &lt;a href="http://weekly.pychina.org/importpython/index.html"&gt;蠎加载&lt;/a&gt; 的, 
嗯哼,&lt;code&gt;2012-02-17&lt;/code&gt; 开始翻译 &lt;a href="http://weekly.pychina.org/issue/index.html"&gt;蠎周刊&lt;/a&gt; 的,
当然 蠎周刊 之前有朋友翻译过前20期,俺是从 77 期开始坚持翻译到 200期,引人了新的快译小伙伴,老高,
然后,重心转移到 蠎加载;
风格也从之前正文的翻译,慢慢变成了主要进行 &lt;code&gt;是也乎&lt;/code&gt; 的点评;
不变的是很少有人提交 PR,想来也是因为这种周刊,实在只是个定时 技术新闻点收集,
时效性太强,大家参与进来,并不能获得类似伟大的 &lt;code&gt;字幕组&lt;/code&gt; 那种可以长期流传,洗脑天下的乐趣.
之于俺和小伙伴,最大的收获的确也就是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定期翻译,形成周自学节奏&lt;/li&gt;
&lt;li&gt;了解 Python 领域的主流变化&lt;/li&gt;
&lt;li&gt;积累 Python 技术演化趋势概念&lt;/li&gt;
&lt;li&gt;架构选型时帮助扩大思考范围&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单的说,定期快译一个技术新闻周刊,是种非常好的强迫自学的形式;
并不特别强烈的建议大家都来加入这种自学,毕竟太散了...
但是,的确是一个有效无意识提高领域技术语感的好形式.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rushter/MLAlgorithms"&gt;MLAlgorithms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning, algorithms&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Minimal and clean examples of machine learning algorithms&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@lynzt/install-python-packages-from-github-5866d234c4e4"&gt;用 pip 从 github 安装 Python 模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pip, github&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pip install --upgrade git+git://github.com/user/user_repository.git&lt;/code&gt; and you are done.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;现代语言生态的标志行为:加载 github 
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/the-python-corner/iterators-and-generators-in-python-2c3929a144b?source=rss------python-5"&gt;迭代器和生成器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core-python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple code snippets showing how iterators and generators work in Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.patricksoftwareblog.com/unit-testing-a-flask-application/"&gt;Patrick Kennedy: Flask 应用的单元测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing, flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This blog post provides an introduction to unit testing a Flask application. I’ve been on a big unit testing kick at work recently which is spilling over into updating the unit tests for my personal projects. Therefore, I thought it would be a good time to document the basics of unit testing a Flask application.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是的 Flask 的单元测试生态并没有兴起...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.garysieling.com/blog/tensorflow-python-setup-digitalocean"&gt;DigitalOcean 中 Tensorflow 的 Python 支持&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;tensorflow, digitalocean&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following steps will install TensorFlow1 on a fresh Digital Ocean virtual machine running Ubuntu.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数字海洋是唯一一个 AWS/GCP 之外最有成功相的 &lt;code&gt;*aaS&lt;/code&gt; 厂商了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pbpython.com/amortization-model.html"&gt;用 Pandas 构建财务模型 - By Chris Moffitt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This specific post will discuss how to do financial modeling in pandas instead of Excel. For this example, I will build a simple amortization table in pandas and show how to model various outcomes.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;谁说社科生不玩程序的?! 这在经济领域现在是必须的强项了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.snowboardingcoder.com/django/?p=54"&gt;定义过滤器和有序字典&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week I ran into a minor problem that took a surprising amount of time to resolve. Getting a Django template to produce a dict in sorted order. While there were answers out there, none seemed to match the environment that I am using (python 3, Django 1.10). After some experimentation, I finally came up with what I think is a good solution.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Django 中的模板看起来什么都能作,其实...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dataquest.io/blog/web-scraping-tutorial-python/"&gt;使用 BeautifulSoup 的 Web Scraping 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;beautifulsoup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, we’ll show you how to perform web scraping using Python 3 and the BeautifulSoup library. We’ll be scraping weather forecasts from the National Weather Service, and then analyzing them using the Pandas library.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国家天气局的数据抓取整理后给 美汤 分析.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tabletopwhale.com/2016/11/14/automated-color-palettes.html"&gt;在 Python 中构建动画 GIFs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;gif&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I first wrote a Python script to make a GIF illustration for any 5-unit color scheme.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="GIFs" src="http://tabletopwhale.com/img/colorpalette/29.gif" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.oreilly.com/ideas/how-to-get-superior-text-processing-in-python-with-pynini"&gt;如何通过 Pynini 在 Python 中获得卓越的文本分析能力 ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;regex&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regular expressions are the standard for string processing, but did you know you can often get better text untangling with Pynini's finite-state transducers ?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;利用 Pynini 的有限状态机来替代正则表达式来处理文本.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/python-pandemonium/cpython-memory-management-479e6cd86c9#.fdfvkwki9"&gt;CPython 内存管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;cpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post is high level description of how CPython (just Python below) manages object life cycle.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在冯机框架之内, 执行效率总是得面对内存这一物理结构的额外问题
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learnpythonthehardway.org/book/nopython3.html"&gt;针对 Python 3 的案例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"There is high probability that Python 3 is such a failure it will kill Python" - Zed Shaw. As Curator of a Python Newsletter for 2+ years I can tell you at-least 20-30% of all articles I read of late have code written only for Python 3. Just recently I was at Pycon India and met lot of student who never wrote a single line in 2.x. Startup founders starting with new development choosing Python 3. Lot of people are sleeping on Python 3. A year more and hopefully everyone will be awake.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;全球只有印度沉浸在 Py 3 的世界中..嗯哼,为什么?!&lt;/p&gt;
&lt;p&gt;何况 Py 3 不是图灵完备的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.edx.org/course/using-python-research-harvardx-ph526x"&gt;用 Python 进行研究 - 哈佛大学课程 - edx&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;course, mooc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Take your introductory knowledge of Python programming to the next level and learn how to use Python 3 for your research. You will learn Python 3 programming basics, Python tools (e.g., NumPy and SciPy modules) for research applications, How to apply Python research tools in practical settings.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;介绍学界在 py 3 生态中如何进行研究
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.machinalis.com/blog/watermarking-images-django/"&gt;在 Django 网站上水印图像&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pillow, watermarking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have you ever noticed how stock photography sites add watermarks to the images shown on their catalogs ? They do that to make sure people don’t just take the free samples and use them without proper licensing. Turns out this is pretty easy to do it with Pillow.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vinta.com.br/blog/2016/metaprogramming-and-django-using-decorators/"&gt;元编程和 Django - 使用 Decorators&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, decorators&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The article starts of with an introduction snippet to decorators and then goes on to explore some real world examples in context of Django. Personally one good find in the article was boltons library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goo.gl/NGmw3L"&gt;JIRA 软件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start a free JIRA Software trial and get this shirt.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;收购 bitbucekt.org 的靠谱软件管理开发商.
)&lt;/p&gt;
&lt;h2 id="_2"&gt;好物&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/pipfile"&gt;pipfile&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;1187 Stars, 24 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Pipfile, and its related Pipfile.lock, are a new (and much better!) replacement for pip's requirements.txt files.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个 &lt;code&gt;requirements.txt&lt;/code&gt; 的替代品
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joewalnes/greendots"&gt;greendots&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;56 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Write with those green dots on your GitHub profile. This takes a message, encodes it to a simple bitmap font, and generates a bunch of git commits in the past.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="greendots" src="![Example" title="profile](https://github.com/joewalnes/greendots/blob/master/example.png" /&gt;)
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/juliascript/Algorithms-and-Data-Structures"&gt;Algorithms-and-Data-Structures&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Trie, (also known as a prefix tree) is a special type of tree used to store associative data structures. A trie (pronounced try) gets its name from retrieval?—?its structure makes it a stellar matching algorithm. Repository for the article https://medium.com/algorithms/trie-prefix-tree-algorithm-ee7ab3fe3413#.e5281rxmo&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;前缀树之类的数据结构和算法的折腾
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MartinPyka/financial_life"&gt;financial-life&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;financial_life is an opinionated framework written in Python that allows to simulate monetary flows between different types of accounts. These simulations allow a deeper understanding of financial plans and a better comparison of financial products (in particular loan conditions) for personal circumstances. With financial_life you can&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;financial_life&lt;/code&gt; 是 Python 构建的模拟不同类型帐户货币流动的框架,
用以进行金融产品的设计实验...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/waqasjaved160/flask-djcelery"&gt;flask-djcelery&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example project for configuring Djcelery with Flask application and dynamically changing tasks via REST API and through django admin. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自动打通 Falsk 和 Django 应用的框架.
)&lt;/p&gt;
&lt;h1 id="_3"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ (￣▽￣) 这么快就100期了?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;161123 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161123 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 99</title><link href="http://weekly.pychina.org/importpython/importpython-99.html" rel="alternate"></link><published>2016-11-17T17:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-11-17:importpython/importpython-99.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/99/"&gt;Import Python Weekly Newsletter - Issue No 99&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@jeffknupp/how-python-makes-working-with-data-more-difficult-in-the-long-run-8da7c8e083fe?source=rss------golang-5"&gt;因长期运行而使用困难的数据如何激活在 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core-python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jeff Knupp author of one of my favorite Python books "Writing Idiomatic Python" talks why Python is terrible for writing long-lived programs dealing with complicated data structures. He then goes to compare it with Go Programming languages where the datatype and data modeling has to be done before hand ( we are talking about complex nested data structures ) . Curator's Note - If you are interested in golang do check out http://importgolang.com a weekly go programming newsletter.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然的,和 golang 进行了对比,然后...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goo.gl/5sp3XN"&gt;Email API from SendGrid&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reliably deliver your emails with a quick and simple API or SMTP integration. Try for Free. Curator's Note - Python and Django integration for sendgrid https://github.com/sendgrid/sendgrid-python and https://github.com/RyanBalfanz/django-sendgrid respectively. You can send 12,000 emails per month free.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个实用的服务,值得关注的赞助商...
免费的话, 2K/月, 对小应用足够了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/doqmnt/developing-scalable-apps-in-python-e8eb38cc0f07"&gt;用 Python 开发可扩展应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;scalability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;David Rodriguez attended the Udacity course: Developing Scalable Apps in Python - App Engine course and took these notes on building scalable apps.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可扩展应用本质上是个架构而不是语言问题...
当然,笔记在 docs.google 中,嗯哼.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/the-python-corner/web-test-automation-in-python-a319a0783187?source=rss------python-5"&gt;用 Splinter 在 Python 中自动化 Web 测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing, automation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Splinter is just an abstraction layer on top of Selenium and makes easy to write automation tests for web applications. This is a brief introduction to Splinter.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;测试呢,最终还是得统一为 DSL, 当然,如果这个 DSL 和目标程序使用的相同,是最好的了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ronaldbradford.com/blog/getting-a-clearer-picture-of-http-response-time-breakdown-via-cli-2016-11-10/"&gt;命令行上的 HTTP 响应后端&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;httstat https://github.com/reorx/httpstat provides a HTTP response breakdown on command line. This saves you having to open up a browser and look at a visual network response waterfall.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目测是一个现成的无头浏览器的值守?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://davidfozo.com/blog/command-line-tricks-for-ridiculously-fast-django-development/"&gt;命令行上高速 Django 开发技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;David shares his list of command line alias for Django development. Curator's note - Caution making alias for dot and double dot.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/boppreh/keyboard"&gt;keyboard&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Take full control of your keyboard with this small Python library. Hook global events, register hotkeys, simulate key presses and much more.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PyHook 之后, 又一键盘控制模块,期望是跨平台兼容的...嗯哼,可怜的 M$ 
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://makina-corpus.com/blog/metier/2016/how-to-make-a-python-method"&gt;Monkey-patching 又一 Python 实例方案&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core-python, monkey patching&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dynamically adding or overwriting an instance method in Python is rarely needed, but it's a good excuse to explore interesting aspects of the language that aren't always well known: the descriptor protocol, types.MethodType and partial function applications.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;猴补丁&lt;/code&gt; ~ 方便了程序猿,逼死编译器的好物,令 Py 的加速大业又多一层壁垒
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://samskeller.me/blog/posts/django-model-managers/"&gt;Django Model Managers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, models&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Model Managers (and custom QuerySets) are really useful. If you find yourself doing some complicated queryset logic over and over again, you can put that logic in one place and just refer to it with a simple name.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对于死也只用 SQL 的人来说,不存在哪...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lx5WQjXLlq8"&gt;Django 在 instagram - Carl Meyer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instagram operates at a scale unprecedented and is one of the largest users of Python/Django. In this video Carl talks about Django usage @instagram . What modification they made to Django and Why ?, How Django usage evolved over the years at instagram and more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@erikhallstrm/work-remotely-with-pycharm-tensorflow-and-ssh-c60564be862d"&gt;用 PyCharm 通过 SSH 工作在远程机器上&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article shows us the remote interpreter feature of PyCharm. Useful for those using PyCharm and want to execute scripts on a remove machine where the environment / data resides.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pycharm" src="https://cdn-images-1.medium.com/max/960/1*t4QDc1ilWiCVr_-APAb1qw.png" /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,这样的界面,哪儿有心思写代码哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="_2"&gt;好物&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ardila/paintingReorganize"&gt;paintingReorganize&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;183 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use PCA analysis to reorganize the pixels of a painting into a smooth color palette.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="input" src="https://github.com/ardila/paintingReorganize/raw/master/input.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;变成&lt;/p&gt;
&lt;p&gt;&lt;img alt="output" src="https://github.com/ardila/paintingReorganize/raw/master/output.png" /&gt;&lt;/p&gt;
&lt;p&gt;最近折腾图像的模块越来越多了..因为....&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ankeshanand/neural-cryptography-tensorflow"&gt;ankeshanand/neural-cryptography-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;42 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Neural Networks that invent their own encryption :key.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个 TF 上的神经网络, Python 在所有领域都是一样的节奏,
海量类似模块/框架/功能,然后拼谁坚持到最后,当然,最终还得看 Guido 的脸色收入内建...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ParhamP/altify"&gt;ParhamP/altify&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 23 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Uses deep learning to caption images in an HTML file and fills out its alternative text attributes with the related caption. Altify automizes the task of inserting alternative text attributes for image tags. Altify uses Microsoft Computer Vision API's deep learning algorithms to caption images in an HTML file and returns a new HTML file in which alt attributes are filled out with their corresponding captions.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然的对中文,呵呵的...&lt;/p&gt;
&lt;p&gt;&lt;img alt="altify" src="https://github.com/ParhamP/altify/raw/master/images/gif.gif" /&gt;&lt;/p&gt;
&lt;p&gt;ParhamP 复活了!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Deepomatic/dmake"&gt;Deepomatic/dmake&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DMake is a tool to manage micro-service based applications. It allows to easily build, run, test and deploy an entire application or one of its micro-services.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 Docker 的微服务!? 表示担心哪...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eliasgranderubio/check_docker_image"&gt;check_docker_image&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A tool to perform static analysis of known vulnerabilities in docker images/containers&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;利用 Docker 镜像的非安全性,进行静态检查和修复
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mozilla-services/python-dockerflow"&gt;python-dockerflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Python package to implement tools and helpers for Mozilla Dockerflow&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不明觉厉, Mozilla 刷版本数之外,又开始折腾容器云了!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kleiinnn/slack-to-telegram-bot"&gt;slack-to-telegram-bot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bot for forwarding slack messages to telegram.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;telegram 虽然安全,可惜...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ansrivas/pylogging"&gt;pylogging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A small wrapper around python logging module which can easily format and write logs to file.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;内建日志模块的一个轻包装,协助我们快速格式化
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/albertlai/deep-style-transfer"&gt;albertlai/deep-style-transfer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Tensorflow 上 实现快速前馈神经式传输网络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sidneijp/webblocker"&gt;sidneijp/webblocker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;0 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple website list blocker for time periods based on hosts. &lt;/p&gt;
&lt;h1 id="_3"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ (￣▽￣) 今天开始,俺将永远是 42 岁了...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;161117 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161117 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 98</title><link href="http://weekly.pychina.org/importpython/importpython-98.html" rel="alternate"></link><published>2016-11-10T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-11-10:importpython/importpython-98.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/98/"&gt;Import Python Weekly Newsletter - Issue No 98&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cHATHSB_450&amp;amp;feature=youtu.be"&gt;Airflow 实用介绍&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video, workflow engine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Airflow is a popular pipeline orchestration tool for Python that allows users to configure complex (or simple!) multi-system workflows that are executed in parallel across any number of workers. A single pipeline might contain bash, Python, and SQL operations. With dependencies specified between tasks, Airflow knows which ones it can run in parallel and which ones must run after others. Airflow is written in Python and users can add their own operators with custom functionality, doing anything Python can do.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;今年 PyCon 上出现的仙器,多后端/Pythonic 工作流/管道管理平台
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackernoon.com/timing-tests-in-python-for-fun-and-profit-1663144571#.4nromm7cy"&gt;Python 中时间测试的乐趣和收益&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;debug&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was preparing to push some changes a couple of days ago and as I usually do, I ran the tests. I sat back in my chair as the dots raced across the screen when suddenly I noticed that one of the dots linger. ”OS is probably running some updates in the background or something” I said to myself, and ran the tests again just to be sure. I watched closely as the dots filled the screen and there it was again?—?I have a slow test!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Matrix-样 数据观察形式看来是正确的
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/instamojo-matters/become-a-pdb-power-user-e3fc4e2774b2#.856wmyqbs"&gt;Become a pdb power-user&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pdb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Good Tutorial on using pdb.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;..It is not necessary to use pdb all the time&lt;/code&gt;
嗯哼,作者都说的很明白,其实大家都清楚,动用 pdb 的情景都是不得不作 &lt;code&gt;接盘侠&lt;/code&gt; 时,
面对纠结在一起的代码时,不得不进行的刺探,
因为没有自信自己在看过所有代码,将思想扭曲为当初那位崩溃的程序猿相同状态后,
是否能恢复清明...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/11/tutorial-proposals-are-due-in-two-weeks.html"&gt;教程提案还有三周可以提交&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Talk proposals will be due on 2017 January 3.Poster proposals will be due on 2017 January 3.Tutorial proposals are due on 2017 November 30. Yes, that’s right — tutorial proposals are due in three weeks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timofurrer/awesome-asyncio"&gt;awesome-asyncio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;async-io, curated list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A curated list of awesome Python asyncio frameworks, libraries, software and resources.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是 github 带领中国程序猿重新认识了 awesome 这词儿,&lt;/p&gt;
&lt;p&gt;现在最高效的领域技术搜索技巧就是在 github 中搜索 &lt;code&gt;awesome+&lt;/code&gt; 技术名
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/"&gt;Some thoughts on asynchronous API design in a post-async/await world&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;async-io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've recently been exploring the exciting new world of asynchronous I/O libraries in Python 3 – specifically asyncio and curio. These two libraries make some different design choices. This is an essay that I wrote to try to explain to myself what those differences are and why I think they matter, and distill some principles for designing event loop APIs and asynchronous libraries in Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Py3 中内建的 &lt;code&gt;asyncio&lt;/code&gt; 和 &lt;code&gt;curio&lt;/code&gt; 成为两大焦点都在进行折腾...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elky/django-flat-responsive"&gt;django-flat-responsive&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An extension for Django admin that makes interface mobile friendly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/blog/big-data/2016/11/how-to-do-distributed-processing-of-landsat-data-in-python"&gt;如何在 Python 中启动 Landsat 数据处理?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;google cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloud Dataflow provides a fully-managed, autoscaling, serverless execution environment for data pipelines written in Apache Beam. In this article Lak Lakshmanan and Matt Hancher show us how to create a monthly vegetation index from Landsat images, available as a public dataset.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GCP 中的 Cloud Dataflow 支持 Apache Beam 可以发布无主机数据处理流程...
)&lt;/p&gt;
&lt;h2 id="_2"&gt;好物&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hchasestevens/astpath"&gt;astpath&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持使用 XPath 语法来查询 Python ASTs 的 CLI 工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mseclab/nathan"&gt;nathan&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;108 Stars, 18 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对移动端安全测试的 Android 模拟器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;怎么看也不象能在 M$ 环境中跑的工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/paarthneekhara/byteNet-tensorflow"&gt;byteNet-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;92 Stars, 11 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ByteNet for character-level language modelling&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gutfeeling/word_forms"&gt;word_forms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;47 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Accurately generate all possible forms of an English word e.g "election" --&amp;gt; "elect", "electoral", "electorate" etc.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同根词列举工具&lt;/p&gt;
&lt;p&gt;&lt;img alt="word_forms" src="https://github.com/gutfeeling/word_forms/raw/master/logo.png" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sarahsharp/foss-heartbeat"&gt;foss-heartbeat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;25 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;FOSS 心跳分析,
数据来自社区志愿者
:heartbeat:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Yinzo/reprint"&gt;reprint&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适用于 Python 2/3 的简易变量绑定与多行输出刷新的库&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="horse_race_demo" src="https://raw.githubusercontent.com/yinzo/reprint/master/demo/images/horse_race_demo.gif" /&gt;&lt;/p&gt;
&lt;p&gt;华南理工大学在校学生,国人作品 ;-)&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wolfv/pyjet"&gt;pyjet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JET is a different approach to make numeric python substantially faster&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="jet_logo" src="https://raw.githubusercontent.com/wolfv/pyjet/master/docs/img/jet_logo.png" /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,更快的 numpy,,,随着数据科学的兴起, 作为基础中的基础作品 numpy 在遭受各种优化/加速
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shawon922/Batch-Image-Downloader"&gt;Batch-Image-Downloader&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple Batch Image Downloader using Python and BeautifulSoup.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;美汤!? 弃疗... 孟加拉 的老兄弟...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ipython/ipynb"&gt;ipynb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Package / Module importer for importing code from Jupyter Notebook files (.ipynb)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ipynb 已经开始构建完备的生态了哪...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ocf/slackbridge"&gt;slackbridge&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bridge between IRC and Slack &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;IRC 上古神器, Slack 今墙外仙器..
)&lt;/p&gt;
&lt;h1 id="_3"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 双 11 了,人造节日中可能最费銭的一个,大家都砍了什么?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;161110 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161110 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 97</title><link href="http://weekly.pychina.org/importpython/importpython-97.html" rel="alternate"></link><published>2016-11-05T15:51:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-11-05:importpython/importpython-97.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/97/"&gt;Import Python Weekly Newsletter - Issue No 97&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TaipanRex/pyvisgraph"&gt;Pyvisgraph - Python 可见性图表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;visualization, opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a super cool project build by Christian. Pyvisgraph builds a visibility graph given a set of simple obstacle polygons and find the shortest path between two points. Christian uses it at work for mapping vessel voyages.( Vessel as in ships ). Here are two blog post by him talking about the algorithm behind his code &lt;/p&gt;
&lt;p&gt;https://taipanrex.github.io/2016/09/17/Distance-Tables-Part-1-Defining-the-Problem.html &lt;/p&gt;
&lt;p&gt;and &lt;/p&gt;
&lt;p&gt;https://taipanrex.github.io/2016/10/19/Distanlogce-Tables-Part-2-Lees-Visibility-Graph-Algorithm.html .&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="example" src="https://github.com/TaipanRex/pyvisgraph/raw/master/docs/images/example.png" /&gt;&lt;/p&gt;
&lt;p&gt;可见性,以往用来寻找可以看见灯塔的安全航线的技术,
现在可以自动完成了.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@krishnateja_182/chat-bots-and-how-to-build-one-on-alexa-35772e429631#.hsod1cwhi"&gt;Chat bots 以及如何在 Alexa 上构建&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;chatbots&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Talking to technology has taken a whole new level since Amazon has announced their voice assistant Alexa and opened up their platform for developers to build custom bots just like when Apple announced about app store for developers to create and sell apps. Here I wanted to talk about the ease of building an Alexa skill using python which could be used as information provider to a attendee for a conference.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Amazon 的语音助理 Alexa 平台化后,
当然就可以任性的调教了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ironboundsoftware.com/blog/2016/10/31/6-quick-python-debugging-tips/"&gt;6 个快速调试技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;debugging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nick gives us quick tour of debugging in Python. print statements, logging, pdb, pdb++, Debugging from the REPL and more.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再多的调试技巧,也无法弥补混乱的头脑写出的代码,
所以,亲!最重要的调试技巧就是保持充分的睡眠哪!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lucumr.pocoo.org/2016/10/30/i-dont-understand-asyncio"&gt;俺就是整不明白 Python 的 Asyncio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;async-io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Armin Ronacher's creator of Flask takes at length candidly about How it's difficult for him to grasp Asyncio , it's shortcomings, how David Beazley's live demo hacked up asyncio replacement is twice as fast as it. Curator's Note - Personally I learned Asyncio from the book Fluent Python. However once I went beyond the simple examples and try building something non trivial I ended up switching to golang and getting my job done faster. One key reason is the benchmark showed my asyncio's throughput was an order of magnitude slower, code required a lot of hand holding for a new developer.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创造者分享了为什么人们理解了异步都都去用 golang 了...
这真是一个悲伤的故事.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/rmotr-com/avoiding-being-bitten-by-python-161b063e7da2#.exz387rth"&gt;避免被 Python 咬屎&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Common pitfalls to avoid when writing Python software&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;py coding 时常见的错误
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/groveco/django-sql-explorer"&gt;django-sql-explorer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Easily share data across your company via SQL queries. From Grove Collab.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://masnun.rocks/2016/11/02/deploying-django-channels-using-daphne/"&gt;用 Daphne 部署 Django Channels&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django channels&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Daphne is a HTTP, HTTP2 and WebSocket protocol server for ASGI, and developed to power Django Channels. It supports automatic negotiation of protocols; there’s no need for URL prefixing to determine WebSocket endpoints versus HTTP endpoints. In this blog post Abu Ashraf shows us how to Deploy Django channels using Daphne.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Channels 如此重要,又如此难用,所以,
Django 创建了: ASGI 协议的专用服务器 Daphne
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ccst.io/e/datetime"&gt;每周聊 Python: Dates 和 Times 在 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's chat about working with dates and times in Python! We'll talk about parsing, formatting, timezones, and date arithmetic.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说,就是心塞,每次总感觉厂商有更加简洁的日期/时间处理手段的,,,
然而...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@deniskasyanov/jupyter-notebook-tutorial-9c0ffa5ae9a1#.85l75dx3t"&gt;Jupyter Notebook 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;jupyter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to share some concepts and ideas about using Jupyter Notebook that I would like to know when I started.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;medium 越来越好用了,所以,也早已被 功夫网 认证了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hakibenita/how-to-add-custom-action-buttons-to-django-admin-8d266f5b0d41#.6mo5v8pe1"&gt;如何在 Django 管理中追加自制按钮 - By Haki Benita&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django admin panel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post Haki Benita shows us how he extended Django admin to include two Button which perform action on a record/row. It's a well written step by step article to accomplish the task.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://andreafortuna.org/streaming-media-contents-from-linux-to-chromecast-e938dec695f6#.lphwph8ri"&gt;将媒体内容从 Linux 折腾到 Chromecast&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are you searching for an easy way to stream media files from your LinuxBox to a Chromecast ? You can use Stream2chromecast, a simple Python script that makes the task of streaming media files to a Chromecast device ridiculously easy.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;WIDI 世界中,怎么可以少 Python 脚本?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.datacamp.com/community/tutorials/pandas-tutorial-dataframe-python"&gt;Pandas 教程: Python 中的 DataFrames&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Karlijn has written good article explaning what dataframes is and it's workings. If you don't know about Pandas and want to get a sense of what it's ?, then have a read.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joowani/kq"&gt;用 Kafka 来构建 Python 中的简单 Job Queue&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;kafka, opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KQ (Kafka Queue) is a light-weight Python library which provides a simple API to queue and process jobs asynchronously in the background. It is backed by Apache Kafka and designed primarily for ease of use.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;KQ 一个专用模块,可以 Pythonic 化的使用 Kafka
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ipython-books.github.io/featured-01/"&gt;从 NumPy 榨取更多性能 &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the first featured recipe from the IPython Cookbook, the definitive guide to high-performance scientific computing and data science in Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;来自 &lt;a href="http://ipython-books.github.io/cookbook/"&gt;IPython Cookbook&lt;/a&gt; 的经典技巧
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.famzah.net/2016/09/10/cpp-vs-python-vs-php-vs-java-vs-others-performance-benchmark-2016-q3/"&gt;C++ vs. Python vs. PHP vs. Java vs. Others 性能评测 (2016 Q3)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The benchmarks here do not try to be complete, as they are showing the performance of the languages in one aspect, and mainly: loops, dynamic arrays with numbers, basic math operations.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;看起来 Py3 已经快过 Py2.7 了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pune.pycon.org/"&gt;Pycon Pune 2017&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pycon Pune 2017 is announced. To be held on February 16-19 2017. Visit the website to know more.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又是一月就开始的...总结去年的当然早点开始好,
但是, PyConChian 的筹备节奏,我们只能程序猿节前后才可能折腾
)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llSourcell/predicting_stock_prices"&gt;predicting_stock_prices&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;29 Stars, 14 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the code for the Stock Price Prediction challenge for 'Learn Python for Data Science #3' by @Sirajology on YouTube. The code uses the scikit-learn machine learning library to train a support vector regression on a stock price dataset from Google Finance to predict a future price. In the video, I use scikit-learn to build an ML model, but for the challenge you'll use the Keras library.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 Keras 和 Google 财经的数据,
使用 scikit-learn 来完成预测
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/altair-viz/altair_widgets"&gt;altair_widgets&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;25 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interactive data exploration with Altair. Altair Widgets are a tool to easily allow to interact with Altair graphs in the Jupyter notebook.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对 Altair 图表在 Jupyter 进行交互探索的工具&lt;/p&gt;
&lt;p&gt;&lt;img alt="examples" src="https://github.com/altair-viz/altair_widgets/raw/master/examples/iris-basic.gif" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/afiskon/py-vm"&gt;py-vm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple CLI wrapper for VirtualBox. Could be considered a Vagrant replacement in many cases.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个对 VirtualBox 进行 CLI 包装的工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/koslibpro/django-traffic"&gt;django-traffic&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Django middleware that helps visualize your app's traffic in Kibana. In a nutshell, by using this middleware you need no more effort to stream your app's traffic in your ElasticSearch host(s) and use Kibana for visualizations around it.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个重量级中间件,
可视化 Kibana 的工作流
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thecodershub/algorithms"&gt;algorithms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 46 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Collection of algorithms in multiple programming languages. Including Python. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;算法的对比学习
)&lt;/p&gt;
&lt;h1 id="_3"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;161106 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161106 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 96</title><link href="http://weekly.pychina.org/importpython/importpython-96.html" rel="alternate"></link><published>2016-10-28T11:11:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-10-28:importpython/importpython-96.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/96/"&gt;Import Python Weekly Newsletter - Issue No 96&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/search/"&gt;搜索所有过往文章 Import Python Newsletters. By Tag, Keywords, Issue No.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;importpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hello Subscribers. If you ever want to find an article we curated and don't rememeber the issue ?. Or you want to find all articles based on a tag/topic e.g. admin panel, PEP etc. Head to http://importpython.com/search/ . Please let us know your feedback / Bug if any.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;蠎周刊快速积累到 96 期了,果断官方给出了关键词搜索服务
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@adrian.hintermaier/python-iterators-and-iterables-need-not-be-the-same-5ba280e6514d#.i01eu9u4a"&gt;Python 的 iterators 和 iterables 需要相同嘛?!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;iterator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So what are iterators and iterables, and are they distinct? They are distinct. Iterables are classes that implement the &lt;strong&gt;iter&lt;/strong&gt; method, a method which returns an iterator. Iterators are classes that implement the &lt;strong&gt;next&lt;/strong&gt; method (or next in Python 2), which continuously returns the next element until the end. So this begs the question, does an iterable also have to be an iterator? Or does an iterator also have to be an iterable?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;命名是艺术也是命运,一个再好的功能,名字起错了,
除了给人留下很多的口水仗机会,对开发只能是种心碍,还是人工的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kitsunde/checking-that-django-has-all-migrations-55a1c23c3a59#.jyuaskk5z"&gt;检查 Django 的所有迁移点.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of our project are setup with continuous deployment on CircleCI. An occasional source of errors has been caused by missing model migrations because the migration wasn’t committed. There’s a simple solution by adding a migration check before deploying.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;随着 Django 的高速发展以及快速流传,
不兼容的升级行为也越来越艺术化,
得配合专门技艺...作死
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/Python/comments/59izbt/what_are_your_favorite_python/"&gt;你有哪些不常见的心爱 projects/notebooks/modules ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reddit Discussion where Python developers are sharing their favourite projects/modules. Lot of noise but found python-dependency-injector to be interesting.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;挂出来的日子不长,但是 &lt;a href="https://github.com/ajalt/fuckitpy"&gt;fuckit&lt;/a&gt; 
的确值得体验...当然只是 linux/mac 党可以体验的了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0531/"&gt;PEP 531 -- Existence checking operators&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PEP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inspired by PEP 505 and the related discussions, this PEP proposes the addition of two new logical operators to Python: &lt;/p&gt;
&lt;p&gt;i) Existence-checking fallback: expr1 ?else expr2 &lt;/p&gt;
&lt;p&gt;ii) Existence-checking precondition: expr1 ?and expr2. &lt;/p&gt;
&lt;p&gt;As well as the following abbreviations for common existence checking expressions and statements &lt;/p&gt;
&lt;p&gt;i) Existence-checking attribute access: &lt;code&gt;obj?.attr (for obj ?and obj.attr )&lt;/code&gt;
ii) Existence-checking subscripting: &lt;code&gt;obj?[expr] (for obj ?and obj[expr] )&lt;/code&gt; 
iii) Existence-checking assignment: &lt;code&gt;target ?= expr&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;受到动态的影响,运行时自省不足一定非常难受的,
所以,py 又接受了两种存在检验器
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://repl.it/site/blog/python-import"&gt;所有 Python 包都能预安装的在线 REPL 环境 -- Repl.it&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REPL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At Repl.it, our goal is to make programming more accessible, and as part of this we aim to provide the full power of popular programming environments with no setup time. And no modern programming language is complete without third-party packages. That's why today we're making every Python package ever immediately available on repl.it. Just select the language (Python or Python3) and start importing packages.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将整个儿 PyPi 事先都加载到目录中的在线 REPL,
真心脑洞太大了...&lt;/p&gt;
&lt;p&gt;问题是俺想基于这种零部署的环境,
发布私人应用呢!?&lt;/p&gt;
&lt;p&gt;不过,真心是个好想法...&lt;/p&gt;
&lt;p&gt;而且提供20+种开发语言的 REPL
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/10/26/creating-graphs-with-python-and-goopycharts/"&gt;Mike Driscoll: 用Python和GooPyCharts创建图形&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;charts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I came across an interesting plotting library called GooPyCharts which is a Python wrapper for the Google Charts API. In this article, we will spend a few minutes learning how to use this interesting package.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@balazs.saros/improving-and-extending-the-search-functionality-of-pythons-pip-50d01a4a344f#.g6dmcbzbi"&gt;改进和扩展 pip 的搜索功能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pip&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main reason I’m in love with Python is the elegance and beauty of the design the language holds. Why not improve a bit on pip search to match the aesthetics? That’s why I created yip.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;已成痛点...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vinta.com.br/blog/2016/python-api-clients-with-tapioca/"&gt;Python API 客户端和 Tapioca&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project, API&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tapioca is a Python API client maker. It gathers most of the features API clients implement and puts them in an extensible core. Wrappers will then extend this core implementing only the specifics from each service (such as authentication and pagination) and get all the common API client features for free. Tapioca approach also comes in handy because regardless of the service, clients look the same in the way you interact with them.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Tapioca 是一个致力于彻底改变 API 开发模式的服务商,
具体点,就是想接管所有互联网 API 的发布...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@tryexceptpass/python-introspection-with-the-inspect-module-2c85d5aa5a48#.kekht2lym"&gt;如何编写你自己的 Python 文档生成器?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Originating from the standard library, inspect not only lets you look at lower level python frame and code objects, it also provides a number of methods for examining modules and classes, helping you find the items that may be of interest. It’s what pydoc uses to generate the help files mentioned previously.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;给娇贵的 pydoc 生成可用文档的前置工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@raiderrobert/using-python-mock-in-unusual-ways-7b56fdaab319#.yc16sj4x4"&gt;使用 Python Mock 来折腾你的代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I want to share 2 specific use cases that I recently encountered. &lt;/p&gt;
&lt;p&gt;Case 1: Testing without calling a REST/SOAP API and &lt;/p&gt;
&lt;p&gt;Case 2: Pretend that you have imported a library. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;很有脑洞的案例分享
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~ Upcoming Conference / User Group Meet
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;??? 进入冬歇期了?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marcopaz/is-service-up"&gt;is-service-up&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;84 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IsServiceUp helps you monitor all the cloud services you rely on in a single web page. You can customize it with the services you want to monitor and host it on your own server.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;云服务用的多了也麻烦,这下有个单一页面可以同时监察所有涉及服务的状态了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shagunsodhani/CNN-Sentence-Classifier"&gt;CNN-Sentence-Classifier&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;25 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简化实现 “卷积神经网络的句子分类”论文&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/teknotus/verify-email"&gt;verify-email&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用于检查DKIM的工具 - 在电子表格中签名许多电子邮件和报告结果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/takeflight/wagtailmodelchooser"&gt;wagtailmodelchooser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Model choosers for Wagtail admin. A plugin for Wagtail that provides a ModelChooserPanel and ModelChooserBlock for arbitrary models. &lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;161028 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161028 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 95</title><link href="http://weekly.pychina.org/importpython/importpython-95.html" rel="alternate"></link><published>2016-10-23T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-10-23:importpython/importpython-95.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/95/"&gt;Import Python Weekly Newsletter - Issue No 95&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.sentry.io/2016/10/19/fixing-python-performance-with-rust.html"&gt;用 Rust 修复 Python 性能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Excellent post from Armin Ronacher on tackling a CPython performance bottleneck with a custom Rust extension module.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说就是将 py 伪装成 Rust 来跑 ~ 城会玩儿~.~
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howto.lintel.in/how-to-create-read-only-attributes-and-restrict-setting-attribute-values-on-object-in-python/"&gt;在 Python 中如何创建只读属性和限制性值对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are different way to prevent setting attributes and make attributes read only on object in python. We can use any one of the following way to make attributes readonly. 1) Property Descriptor 2) Using descriptor methods &lt;strong&gt;get&lt;/strong&gt; and &lt;strong&gt;set&lt;/strong&gt; 3) Using slots (only restricts setting arbitary attributes).&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用内置的自省机制来防卫
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/tutorial/2016/10/14/how-to-deploy-to-digital-ocean.html"&gt;如何将 Django 应用部署到 Digital Ocean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial we will be deploying https://github.com/sibtc/urban-train ,a empty Django project I created to illustrate the deployment process.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个 Heroku 一个 Digital Ocean, 文档好到经常被搜索出来独立使用
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gregreda.com/2016/10/16/asynchronous-scraping-with-python/"&gt;用 Python 进行异步抓取&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scraping is often an example of code that is embarrassingly parallel. With some slight changes, our tasks can be done asynchronously, allowing us to process more than one URL at a time. In version 3.2, Python introduced the concurrent.futures module, which is a joy to use for parallelizing tasks like scraping. The rest of this post will show how we can use the module to make our previously synchronous code asynchronous.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 Py3 内置的库折腾
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ccst.io/e/cbv"&gt;每周聊 Python: Class-Based Views in Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most Django programmers use function-based views, but some use class-based views. Why? Special guest Buddy Lindsey will be joining us this week to talk about how class-based views are different.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm/episodes/show/80/tinydb-a-tiny-document-db-written-in-python"&gt;和俺聊 Python : #80 TinyDB: 轻便的文档数据库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm excited to introduce you to Markus Siemens and TinyDb. This is a 100% pure python, embeddable, pip-installable document DB for Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;无论怎么折腾, 目前看还没有一种 NoSQL 数据库可以简单的替代 MySQL 
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eatsomecode.com/handling-statuses-django"&gt;在 Django 处状态&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, finite state machine&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whether you're building up a CMS or a bespoke application, chances are that you will have to handle some states / statuses. Let's discuss your options in Django.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.launchbit.com/taz/11284-6631-111"&gt;JIRA&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IT Help Desk &amp;amp; Ticketing. Start a free trial of JIRA Service Desk and get your free Konami Code shirt.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其它赞助商俺是不知道的, 这个非常赞的
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thosecleverkids.com/thoughts/posts/upgrading-django"&gt;升级 Django - Never Clever&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;General Guidelines when upgrading Django.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;人艰不拆,宁可另外起用个新网站,来替换部分接口,也别...&lt;/p&gt;
&lt;p&gt;啊,多么也痛的领悟...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/getpy/status/788729906406514689"&gt;Yoda on python dependency&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;humor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Check the tweet :)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;程序猿的幽默只有翻越后感知的到
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/khamidou/lptrace"&gt;lptrace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;lptrace is strace for Python programs. It lets you see in real-time what functions a Python program is running. It's particularly useful to debug weird issues on production.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个观察活体 Python 运行时变量情况的调试工具,
不过...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.zulip.org/2016/10/13/static-types-in-python-oh-mypy/"&gt;Python 的静态类型,嚓 my(py)!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mypy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post, I’ll explain how mypy works, the benefits and pain points we’ve seen in using mypy, and share a detailed guide for adopting mypy in a large production codebase (including how to find and fix dozens of issues in a large project in the first few days of using mypy!).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/channelcat/sanic"&gt;sanic&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.5+ web server that's written to go fast &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~ Upcoming Conference / User Group Meet
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/iepyladies/"&gt;Inland Empire Pyladies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meetup.com/meetup-group-JpMXKzbv/"&gt;PyKla Monthly meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fi.pycon.org/2016/"&gt;PyCon Finland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python.ie/pycon-2016/"&gt;PyCon Ireland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2016.pycon.ca/"&gt;PyCon Canada 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dlr.de/sc/pyhpc2016"&gt;PyHPC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonjam.org.jm/conference-2016"&gt;PyCon Jamaica 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/junrushao1994/fast-neural-style.tf"&gt;fast-neural-style.tf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;17 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feed-forward neural network for real-time artistic style transfer. Curator's Note - This is a pretty cool project.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="cubist_style" src="https://github.com/junrushao1994/fast-neural-style.tf/raw/master/examples/outputs/cubist_style.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;又一个实时风格分析/模拟 的库,功能类似正红的 &lt;code&gt;Prisma&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/surmenok/TextSum"&gt;TextSum&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Preparing a dataset for TensorFlow text summarization (TextSum) model.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/occrp/countrynames"&gt;countrynames&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实用库, 将国家名称转换为ISO双字母代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MnogoByte/celery-redundant-scheduler"&gt;celery-redundant-scheduler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Celery beat 调度器提供运行多个celerybeat实例的能力&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AndreiD/SlackUptimeMonitor"&gt;SlackUptimeMonitor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Receive notifications in Slack when your websites/api/services are down&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/siemens/confluence-dumper"&gt;confluence-dumper&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 API 能递归样的将 Confluence 空间和页页都导出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mackeyja92/asyncio-nats-streaming"&gt;asyncio-nats-streaming&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A asyncio library for NATS Streaming.&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;161024 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161023 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 94</title><link href="http://weekly.pychina.org/importpython/importpython-94.html" rel="alternate"></link><published>2016-10-14T17:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-10-14:importpython/importpython-94.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/94/"&gt;Import Python Weekly Newsletter - Issue No 94&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goo.gl/U8RbN5"&gt;介绍 Djaneiro, 专注 Django 开发的 Sublime Text 插件.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, sublime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this review I’ll explain how Djaneiro can make your Django development workflow more productive and I’ll go over the pros and cons of the plugin as I experienced them. After that I’ll take a look at alternatives to Djaneiro in the Sublime Text plugin landscape. At the end I’ll share my final verdict and ratings.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Djaneiro ~ 专门为 subl 用户打造的 django 环境...
由于出色的接口, subl 现在比 eclipes 当年的插件社区还要活跃...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://slott56.github.io/five-kinds-of-python-functions/assets/player/KeynoteDHTMLPlayer.html"&gt;PyData DC 2016 --5种 Python 函式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Talk by Steven F. Lott.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://python-ast-explorer.com/"&gt;Python AST 探险家&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;AST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Write Python code and see how the ast looks like in the browser right now. No installation needed.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在线实时代码编译结构观察服务
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.pythonsheets.com/"&gt;Python 作弊条&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;resource&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This project tries to provide a lot of piece of Python code that makes life easier.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实就是 mini 版本的 Python Cookbook&lt;/p&gt;
&lt;p&gt;使用 virtualenv 发布本地文档网站&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.yhat.com/posts/pandasql-intro.html"&gt;pandasql: 让 Python 讲 SQL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sql&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pandasql, a Python package we (Yhat) wrote that emulates the R package sqldf. It's a small but mighty library comprised of just 358 lines of code. The idea of pandasql is to make Python speak SQL. For those of you who come from a SQL-first background or still "think in SQL", pandasql is a nice way to take advantage of the strengths of both languages.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pandasql" src="http://blog.yhat.com/static/img/meat-and-birth.png" /&gt;&lt;/p&gt;
&lt;p&gt;作为 Rodeo IDE 插件诚意之作;
只有 358 行代码!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joowani/binarytree"&gt;用来学习二叉树的 Python 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;BinaryTree is a minimal Python library which provides you with a simple API to generate, visualize and inspect binary trees so you can skip the tedious work of mocking up test trees, and dive right into practising your algorithms! Heaps and BSTs (binary search trees) are also supported.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jaspervdj/patat"&gt;Patat – 又一个终端上的幻灯工具,基于 Pandoc&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;patat (Presentations And The ANSI Terminal) is a small tool that allows you to show presentations using only an ANSI terminal. It does not require ncurses.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="patat" src="https://github.com/jaspervdj/patat/raw/master/extra/screenshot.png" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://us.pycon.org/2017/"&gt;PyCon 2017 网站已上线&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 2017 ( US ) site is live. Note - Registration starts on Oct 17th. If you are looking to speak/attend reach out dates for talk/tutorial/paper aka Call For Proposals ( CFP ) submission.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://masnun.rocks/2016/10/06/async-python-the-different-forms-of-concurrency/"&gt;异步 Python: 不同机制的并发 - By Abu Ashraf Masnun&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post we shall explore the different ways we can achieve concurrency and the benefits/drawbacks of them. With the advent of Python 3 the way we’re hearing a lot of buzz about “async” and “concurrency”, one might simply assume that Python recently introduced these concepts/capabilities. But that would be quite far from the truth. We have had async and concurrent operations for quite some times now. Also many beginners may think that asyncio is the only/best way to do async/concurrent operations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/activestate/blog/~3/FiDE6pnNy7E/functional-python"&gt;功能性 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Functional programming is a discipline, not a language feature. It is supported by a wide variety of languages, although those languages can make it more or less difficult to practice the discipline. Python has a number of features that support functional programming, including map/reduce functions, partial application, and decorators.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;功能性编程,而不是函式编程,又一门新的编程学科...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/9GFa-FsUNv8/a-whirlwind-tour-of-python"&gt;Python 旋风之旅&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jake VanderPlas explains Python’s essential syntax and semantics, built-in data types and structures, function definitions, control flow statements, and more, using Python 3 syntax.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;针对 Py3 新用户的简介
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/fID79q60JzQ/"&gt;介绍 Python 图像库 / Pillow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pillow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python Imaging Library or PIL allowed you to do image processing in Python. Here is a tutorial.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;瞌睡送枕头,对于图像处理,现在都用 Pillow 了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/10/11/how-to-create-a-diff-of-an-image-in-python"&gt;用 Python 如何构造图像间的差异&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;image processing, pillow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the past couple of years, I’ve been writing automated tests for my employer. One of the many types of tests that I do is comparing how an application draws. Does it draw the same way every single time? If not, then we have a serious problem. An easy way to check that it draws the same each time is to take a screenshot and then compare it to future versions of the same drawing when the application gets updated.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580705-get-names-and-types-of-all-attributes-of-a-python-/"&gt;获得 Python 模块的所有属性名称和类型&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This recipe shows how to get the names and types of all the attributes of a Python module. This can be useful when exploring new modules (either built-in or third-party), because attributes are mostly a) data elements or b) functions or methods, and for either of those, you would like to know the type of the attribute, so that, if it is a data element, you can print it, and if it is a function or method, you can print its docstring to get brief help on its arguments, processsing and outputs or return values, as a way of learning how to use it. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;也只有 Python 这种有足够内省能力的语言,才可以随时拷问出这么丰富的信息来;
代码来自:&lt;/p&gt;
&lt;p&gt;http://jugad2.blogspot.in/2016/10/get-names-and-types-of-python-modules.html
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~ Upcoming Conference / User Group Meet
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pynw.org.uk/"&gt;Python Northwest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.hk/2016"&gt;PyCon HK 2016&lt;/a&gt; &lt;img alt="pyconhk" src="http://pycon.hk/2016/images/pyconhk-logo.jpg" /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://fi.pycon.org/2016/"&gt;PyCon Finland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python.ie/pycon-2016/"&gt;PyCon Ireland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2016.pycon.ca/"&gt;PyCon Canada 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sahilshekhawat/RocketFuelPython"&gt;RocketFuelPython&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RocketFuel 拓扑映射引擎的Python实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TKCERT/testssl.sh-masscan"&gt;testssl.sh-masscan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make TLS/SSL security mass scans with testssl.sh and import results into ElasticSearch. Script collection for generating testssl.sh command lines that can be executed sequentially or in parallel with tools like GNU Parallel and importing the results into a structured document in ElasticSearch for further analysis.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安全测试的各种结果自动导入 ElasticSearch 的 CLI 工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pollow/RacketCallGraph"&gt;RacketCallGraph&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple Python script that generate Call Graph of simple Racket program by generating dot language scripts. It uses naive approach that basically traverse the program and maintain a state machine regardless of context. Currently it only maintain a FSM so advance features of Racket, like lambda-function is not support, will improve if needed in the future.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个程序运行可视化解析工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llSourcell/gender_classification_challenge"&gt;gender_classification_challenge&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gender Classification Challenge for 'Learn Python for Data Science #1'. This is the code for the gender classification challenge for 'Learn Python for Data Science #1' by @Sirajology on YouTube. The code uses the scikit-learn machine learning library to train a decision tree on a small dataset of body metrics (height, width, and shoe size) labeled male or female. Then we can predict the gender of someone given a novel set of body metrics.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;猜性别挑战赛又一实例, 通过对人体数据进行机械学习来判定男女.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chrisalbon/second_2016_presidential_debate_twitter"&gt;second_2016_presidential_debate_twitter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tweets from the the second presidential debate. This repo contains data on roughly 150,000 debate tweets. However, to make the data compliant with Twitter's terms of service, the public data only contains tweet IDs. A short python script to convert that list of tweet IDs into the full twitter data is coming soon.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;米国总统竟选第二次辩论时所有有关 tweets 数据集,
可以用来预测成功率.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/andykamath/TrickleDownML"&gt;TrickleDownML&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start a conversation with Ronald Reagan!. I made a chatbot that mimics Ronald Reagan.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;模仿里根总统语气的聊天儿机器人
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lk-geimfari/flask_church"&gt;flask_church&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An extension for Flask that help you generate fake data. Flask-Church is a small wrapper for Church library.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上周介绍过的专注假数据生成的工具 Church 的 Falsk 配合模块.
)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;161015 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161014 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 93</title><link href="http://weekly.pychina.org/importpython/importpython-93.html" rel="alternate"></link><published>2016-10-08T21:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-10-08:importpython/importpython-93.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/93/"&gt;Import Python Weekly Newsletter - Issue No 93&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dbader.org/products/sublime-python-guide"&gt;为 Python 开发者配置 Sublime Text&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sublime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We have been sharing Daniel's articles and videos from this youtube channel dedicated to Python and Sublime for a while now https://www.youtube.com/channel/UCI0vQvr9aFn27yR6Ej6n5UA . Today Daniel published his book on Sublime Text for Python Developers. Have a look if you use sublime text. Here is a 30% discount for all ImportPython Subscribers.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;价值 $29 的课程
&lt;img alt="book-package" src="https://dbader.org/img/book-package.png" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/implementing-the-soft-delete-pattern-with-flask-and-sqlalchemy"&gt;用 Flask 和 SQLAlchemy 实现 "Soft Delete" 模式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask, SQLAlchemy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find lots of reasons to never delete records from your database. The Soft Delete pattern is one of the available options to implement deletions without actually deleting the data. It does it by adding an extra column to your database table(s) that keeps track of the deleted state of each of its rows. This sounds straightforward to implement, and strictly speaking it is, but the complications that derive from the use of soft deletes are far from trivial. In this article I will discuss some of these issues and how I avoid them in Flask and SQLAlchemy based applications.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说, 手写 SQL 可以轻易作的事儿,在 ORM 世界中,嗯哼...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dansaber.wordpress.com/2016/10/02/a-dramatic-tour-through-pythons-data-visualization-landscape-including-ggplot-and-altair/"&gt;通过 Python 的 Data Visualization Landscape 进行动态游历(包含 ggplot 以及 Altair)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data visualization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comprehensive listing of all data visualization packages with small codesnippets.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vinta.com.br/blog/2016/database-concurrency-in-django-the-right-way/"&gt;在 Django 折腾并发数据的正确姿势&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Guilherme Caminha explores the utility of using on_commit hook available from 1.9 onwards in sequencing part of a time consuming task in django view and rest offloaded to an async process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/ogAkpm2QzzM/thinking-in-coroutines"&gt;思考一下协程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;async-io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lukasz Langa uses asyncio source code to explain the event loop, blocking calls, coroutines, tasks, futures, thread pool executors, and process pool executors.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是 go 的核心竞争力,其实 py 也早已有了对应的机制,只是....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timofurrer/click-man"&gt;自动为 click 应用生成 man 说明&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Click is my go to Python package for creating command line applications. click-man will generate one man page per command of your click CLI application specified in console_scripts in your setup.py.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;http://click.pocoo.org/
对的只出精品的  pocoo 团队的 CLI 工具包
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/F8vkE9fKESU/"&gt;当周PyDev: Bryan Van de Ven&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bryan is a core developer of the Bokeh project, which is a visualization package for Python. He has also helped with the development of Anaconda.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;名字有 van 的, 都是贵族后代,
同时在 Anaconda 和 数据可视化领域都有深入的强人...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mikeroberts3000.github.io/flashlight/"&gt;Flashlight 是分析及解决四旋翼控制问题的轻量级 Python 库.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flashlight enables you to easily solve for minimum snap trajectories that go through a sequence of waypoints, compute the required control forces along trajectories, execute the trajectories in a physics simulator, and visualize the simulation results.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当然,不是 DJI 开源的
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lk-geimfari/church"&gt;Church&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;opensource project&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Church is a library to generate fake data. It's very useful when you need to bootstrap your database.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;专注自动生成徦数据的库,再也不用折腾 SQL 了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://raspberry-python.blogspot.com/2016/09/5-music-things.html"&gt;5 music things and Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raspberry and Python projects/scripts.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="church" src="https://raw.githubusercontent.com/lk-geimfari/church/master/examples/church.png" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/guyskk/validr"&gt;validr&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple,fast,extensible python library for data validation.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单，快速，可拓展的数据校验库;
国人作品, 仅支持 Py 3.3+;
使用 tox 管理 pytest 测试案例...&lt;/p&gt;
&lt;p&gt;私人官网果然也关注了 "新人到底需要什么" 长线讨论: &lt;a href="https://www.kkblog.me/notes/Python%E5%85%A5%E9%97%A8%E6%8C%87%E5%8C%97"&gt;Python入门指北&lt;/a&gt;
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~ Upcoming Conference / User Group Meet
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Santa-Cruz-Python-Meetup/"&gt;Santa Cruz Python Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pythonbrasil.org.br/"&gt;Python Brasil [12]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python.ie/pycon-2016/"&gt;PyCon Ireland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2016.pycon.ca/"&gt;PyCon Canada 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pydata.org/cologne2016/"&gt;PyData Cologne 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2017.geopython.net/"&gt;GeoPython 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karpathy/tf-agent"&gt;tf-agent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;27 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注 OpenAI gym 环境中代理 tensorflow 强化学习请求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llllllllll/become"&gt;become&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make one object become another.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;github ID 好屌, 这个模块的功能也非常屌...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shlee322/python-line-api"&gt;python-line-api&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SDK of the LINE Messaging API for Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个 IM 在 CLI 可用了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dev-labs-bg/football-stats"&gt;football-stats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Football stats is a system which has the purpose of helping football match analyses. The final goal of the project is to have the capability of ball and players' position analysis, creating heatmaps and statistics of different actions or situations.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数据可视化从蓝球进入了 Football,俄国银作品
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/renzon/pytocli"&gt;pytocli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Python lib to generate CLI commands&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/d0u9/xfce4-system-monitor"&gt;xfce4-system-monitor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An xfce panel plugin to display the necessary information of the system.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshoot_1.png（PNG 图像，95x36 像素）" src="https://raw.githubusercontent.com/d0u9/xfce4-system-monitor/master/screenshoot_1.png" /&gt;
)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;161008 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;161008 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 92</title><link href="http://weekly.pychina.org/importpython/importpython-92.html" rel="alternate"></link><published>2016-09-29T22:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-09-29:importpython/importpython-92.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/92/"&gt;Import Python Weekly Newsletter - Issue No 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://notoriousno.blogspot.com/2016/09/python-alias-commands-that-play-nice.html"&gt;Python 别名命令配合 virtualenv 玩的更好&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over the years, I’ve come up with my own Python aliases that play nice with virtual environments. For this post, I tried to stay as generic as possible such that any alias here can be used by every Pythonista.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 bash 中的配置别名也一样
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YPlan/django-perf-rec"&gt;保持 Django 应用性能的详细记录.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Keep detailed records of the performance of your Django code.". django-perf-rec is like Django's assertNumQueries on steroids. It lets you track the individual queries and cache operations that occur in your code. This blog post explains the workings of this project https://tech.yplanapp.com/2016/09/26/introducing-django-perf-rec/ .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ianozsvald.com/2016/09/23/practical-ml-for-engineers-talk-at-pyconuk-last-weekend/"&gt;上周未工程师的实用  ML 分享 #pyconuk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Last weekend I had the pleasure of introducing Machine Learning for Engineers (a practical walk-through, no maths) at PyConUK 2016 ( Video link on page ). My talk covered a practical guide to a 2 class classification challenge (Kaggle’s Titanic) with scikit-learn, backed by a longer Jupyter Notebook (github) and further backed by Ezzeri’s 2 hour tutorial from PyConUK 2014.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/mocks-and-monkeypatching-in-python"&gt;Python 中的 Mocks 和 Monkeypatching &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial will help you understand why mocking is important, and show you how to mock in Python with Mock and Pytest monkeypatch.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://masnun.rocks/2016/09/25/introduction-to-django-channels/"&gt;Abu Ashraf Masnun: 介绍 Django Channels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yet another introduction to Django Channels. This one is a lot more clear and step by step tutorial. If you still don't know what Django channels is / how to get started, read this.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一篇 Django Channels 的介绍, 可想是个多么复杂难言的功能点
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.thedigitalcatonline.com/blog/2016/09/27/python-mocks-a-gentle-introduction-part-2/"&gt;Python Mocks: 温柔的介绍 - 部分1和2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing, mock&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this series of posts I am going to review the Python mock library and exemplify its use. I will not cover everything you may do with mock, obviously, but hopefully I'll give you the information you need to start using this powerful library. Note it's a two part series as of now, here is the second part's url http://blog.thedigitalcatonline.com/blog/2016/09/27/python-mocks-a-gentle-introduction-part-2/#.V-ysf9HhXQo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ccst.io/e/decorators"&gt;Decorators: 函式的功能 - 周末和 Trey Hunner 聊 Python &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;webcast, video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Decorators are one of those features in Python that people like to talk about. Why? Because they're different. Because they're a little weird. Because they're a little mind-bending. Let's talk about decorators: how do you make them and when should you use them?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://moderndata.plot.ly/simple-rest-apis-for-charts-and-datasets/"&gt;简洁的图表和数据集  REST APIs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;charts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Plotly V2 API suite is a simple alternative to the Google Charts API. Make a request to a Plotly URL and get a link to a dataset or D3.js chart. Python code snippet are included on the page.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Plot.ly 如日中天时,高调开源后,依然猛烈...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dbader.org/blog/python-code-review-unplugged-episode-2"&gt;Python 代码复审: Unplugged – 第 2 集 - Daniel Bader&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Daniel is doing a series of code review sessions with Python developers. Have a look at the accompanied video where he gives his opinion on a open source project by Milton.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.paypal-engineering.com/2016/09/22/python-by-the-c-side/"&gt;Python 的 C 面&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;c binding&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CPython, the primary implementation of Python used by millions, is written in C. Python core developers embraced and exposed Python’s strong C roots, taking a traditional tack on portability, contrasting with the “write once, debug everywhere” approach popularized elsewhere. The community followed suit with the core developers, developing several methods for linking to C. This has given us a lot of choices for interfacing with c, let us look at them.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又是 paypal 团队的分享, 看来 Py 在 paypal 家折腾的不轻...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/tips/2016/09/27/django-tip-15-cbv-mixins.html"&gt;Django 技巧 #15 基于 Mixins 使用 Class-Based Views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;General rules to use mixins to compose your own view classes with code examples.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mikesdjangotutorials.co.uk/blog/blog/make-your-command-line-life-easier/"&gt;如何设置 tab completion 来用 django-admin.py 和 manage.py ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this short article Mike shows us how to set auto complete for django-admin.py / manage.py arguments. Specially helpful if you have tons of management commands.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blogs.msdn.microsoft.com/pythonengineering/2016/09/27/microsofts-participation-in-the-2016-python-core-sprint/"&gt;M$ 中的 Python 工程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That’s the opening paragraph from the Python Insider blog post discussing the 2016 Python core sprint that recently took place. In the case of Microsoft’s participation in the sprint, both Steve Dower and I (Brett Cannon) were invited to participate (which meant Microsoft had one of the largest company representations at the sprint). Between the two of us we spent the week completing work on four of our own PEPs for Python 3.6: Adding a file system path protocol (PEP 519), Adding a frame evaluation API to CPython (PEP 523), Change Windows console encoding to UTF-8 (PEP 528), Change Windows filesystem encoding to UTF-8 (PEP 529).&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发明了软件的 M$ ,好象没有哪个领域不掺合的
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/beanbaginc/django"&gt;GitHub - beanbaginc/django: 非官方安全后端 Django: The Web framework for perfectionists with deadlines.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is an unofficial fork of Django, which focuses entirely on backporting official, publicly-announced security fixes to Django 1.6.11. It does not contain any other bug fixes or features, and any branches other than security-backports/1.6.x are unlikely to be up-to-date. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~ Upcoming Conference / User Group Meet
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/communities/111688142997890939713/events"&gt;Reunión Python Valencia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sypy.org/"&gt;Sydney Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.es.pycon.org/es/"&gt;PyConES - Almería&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://edmontonpy.com/"&gt;Edmonton Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/python-182/"&gt;IndyPy Monthly Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pythonbrasil.org.br/"&gt;Python Brasil [12]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/Santa-Cruz-Python-Meetup/"&gt;Santa Cruz Python Meetup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sminez/fmap"&gt;fmap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fmap.py - a single dispatch version of fmap for Python3. While there are multiple Haskellesque 'lets put monads in Python!' style libraries out there, most don't seem to focus on taking the nice bits of Haskell's functional approach and giving them a nice Pythonic interface. fmap.py is a very simple take on fmap that lets you remove some unnecesary boiler plate when you are applying a function to each element of a collection. I hope you like it!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/axbaretto/fbtftp"&gt;fbtftp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fbtftp is Facebook's implementation of a dynamic TFTP server framework. It lets you create custom TFTP servers and wrap your own logic into it in a very simple manner. Facebook currently uses it in production, and it's deployed at global scale across all of our data centers.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;神奇的实用库, 基于 epoll 的纯 py 实现 ftp 服务器,来自 脸书.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/crutchcorn/unfurl"&gt;unfurl&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python utility to move items in a directory tree to the topmost level possible&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自动调节批量嵌套子目录中分散文件到顶层目录
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dhill0n/chalk"&gt;chalk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单易学的又一个 py 解释的开发语言&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pveugen/human-to-geojson"&gt;human-to-geojson&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Convert raw Human exports to geoJSON&lt;/p&gt;
&lt;p&gt;&lt;img alt="human" src="https://raw.githubusercontent.com/pveugen/human-to-geojson/master/mapbox-studio.png" /&gt;&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://octoverse.github.com/"&gt;GitHub Octoverse 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github 年度报吿, 值得关注的是: &lt;a href="https://github.com/rdpeng"&gt;rdpeng (Roger D. Peng)&lt;/a&gt;
这位华人,个人仓库有两个在 top10 名单中!
你猜为毛!?&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160929 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160929 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 91</title><link href="http://weekly.pychina.org/importpython/importpython-91.html" rel="alternate"></link><published>2016-09-22T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-09-22:importpython/importpython-91.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/91/"&gt;Import Python Weekly Newsletter - Issue No 91&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/newsletter/"&gt;俺出席在 新德里的 Pycon India 2016&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;importpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hey guys, this is Ankur. Curator behind ImportPython. Will be attending PyconIndia. Happy to meet you all and discuss all things Python. Get your opinion on the newsletter, How to make it better ?. Ping me on ankur at outlook dot com or just reply to this email. I will respond back. See you there.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ankur 就是 ImportPython 的作者,原来是 印度人...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://engineering.quora.com/Asynchronous-Programming-in-Python"&gt;在 Quora 用 Python 和 asynq 进行异步编程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;async-io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;asynq is a library for asynchronous programming in Python with a focus on batching requests to external services. It also provides seamless interoperability with synchronous code, support for asynchronous context managers, and tools to make writing and testing asynchronous code easier. asynq was developed at Quora and is a core component of Quora's architecture. See the original blog post here.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 又一个没有进入 build-in 的优秀模块&lt;/p&gt;
&lt;p&gt;&lt;img alt="asynq" src="https://camo.githubusercontent.com/d8d52ecb8b1db0ed494020ffc9c15925db01c68c/687474703a2f2f692e696d6775722e636f6d2f6a43504e794f612e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;其实,公司想成名, 将公司名嵌入到著名的开源模块中,一直是非常好的渠道.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.curiousefficiency.org/posts/2016/09/python-packaging-ecosystem.html"&gt;Python 包管理生态 - Nick Coghlan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;packaging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There have been a few recent articles reflecting on the current status of the Python packaging ecosystem from an end user perspective, so it seems worthwhile for me to write-up my perspective as one of the lead architects for that ecosystem on how I characterise the overall problem space of software publication and distribution, where I think we are at the moment, and where I'd like to see us go in the future.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;少见的长篇大论, 追根溯源 Python 包管理的的历史和发展;
这已经不是头一家从根儿上重构 py 包发行机制的尝试了.
当然, 事实也证明, 从一开始不完美的事物,往往能在其后发展出创始人也无法想象的花活儿来.
参考 JavaScript ... 嗯哼, 那个连姓名都故意乱起的语言.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythonsweetness.tumblr.com/post/150466265417"&gt;用 pkgsrc 部署现代 Python 应用到古老的基础设施上&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;infrastructure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This team is responsible for supplying a variety of web apps built on a modern stack (mostly Celery, Django, nginx and Redis), but have almost no control over the infrastructure on which it runs, and boy, is some of that infrastructure old and stinky. We have no root access to these servers, most software configuration requires a ticket with a lead time of 48 hours plus, and the watchful eyes of a crusty old administrator and obtuse change management process. The machines are so old that many are still running on real hardware, and those that are VMs still run some ancient variety of Red Hat Linux, with, if we’re lucky, Python 2.4 installed.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就是上篇文章的另外一个分支, 分享 PayPal 的折腾成果.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.juliusschulz.de/blog/ultimate-ipython-notebook"&gt;创作公众可读的 Python notebooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The notebook functionality of Python provides a really amazing way of analyzing data and writing reports in one place. However in the standard configuration, the pdf export of the Python notebook is somewhat ugly and unpractical. In the following I will present my choices to create almost publication ready reports from within IPython/Jupyter notebook.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;讲真, 每次见到这么细心的一点点解决 LeTaX 和现实世界结合的分享,
就看见了20年前的 王珢 孤独的宣传 Emacs+TeX 的身影
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC51aOZF5nnderbuar5D5ifw"&gt;SF Pybay 大会视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Paul Bailey, "A Guide to Bad Programming", at PyBay2016 was my fav talk amongst all. Check out the youtube channel.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;哈! 其实烂代码指南比好代码手册,要更加有用的.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mzucker.github.io/2016/09/20/noteshrink.html"&gt;压缩和增强手写笔记&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;image processing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wrote a program to clean up scans of handwritten notes while simultaneously reducing file size. Some of my classes don’t have an assigned textbook. For these, I like to appoint weekly “student scribes” to share their lecture notes with the rest of the class, so that there’s some kind written resource for students to double-check their understanding of the material. The notes get posted to a course website as PDFs.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="notesA1_comparison" src="https://mzucker.github.io/images/noteshrink/notesA1_comparison.png" /&gt;&lt;/p&gt;
&lt;p&gt;~ Left: input scan @ 300 DPI, 7.2MB PNG / 790KB JPG. Right: output @ same resolution, 121KB PNG&lt;/p&gt;
&lt;p&gt;简单的说,经过复杂的处理,终于可以免去重新用电脑整理课堂笔记的事儿了!
大体积的扫描件经过处理,就能变成又小又清晰的 pdf 来卖了!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/python/tutorial/image-manipulation-in-python"&gt;Python 中的图像处理 - 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;image processing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial will show you how to transform an image with different filters and techniques to deliver different outputs. These methods are still in use and part of a process known as Computer-To-Plate (CTP), used to create a direct output from an image file to a photographic film or plate (depending on the process). Note - It's a pretty good article that makes uses of Python 3, Pillow and is well written.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;WoW 强烈历史感的科普文, 将出版的图像处理和 python 的结合聊明白了.&lt;/p&gt;
&lt;p&gt;&lt;img alt="semi-opacity property" src="https://cdn.filestackcontent.com/mXHi44pSTl6xAZsNHnRi" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ccst.io/e/learning-django"&gt;每周聊 Python: 学习 Django 的技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a Weekly Python Chat live video chat events. These events are hosted by Trey Hunner. This week Melanie Crutchfield and he are going to chat about things you'll wish you knew earlier when making your first website with Django. Much watch for newbies building websites in Django.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://markusholtermann.eu/2016/09/2-factor-authentication-in-django/"&gt;2 步认证在 Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are looking to implement 2 Factor Authentication as part of your product and don't know where to start read this. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;~ Upcoming Conference / User Group Meet
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.de/"&gt;PyCon DE 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python.ie/pycon-2016/"&gt;PyCon Ireland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dlr.de/sc/pyhpc2016"&gt;PyHPC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pydata.org/cologne2016/"&gt;PyData Cologne 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/streamlink/streamlink"&gt;streamlink&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;59 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CLI for extracting streams from various websites to video player of your choosing&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;永远的命令行工具,从系列服务网站中选择视频批量播放...&lt;/p&gt;
&lt;p&gt;嗯哼,系列小电影观看利器
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dyelax/encore.ai"&gt;encore.ai&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;40 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Generate new lyrics in the style of any artist using LSTMs and TensorFlow&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 LSTMs 和 TensorFlow 自动生成指定目标歌手的新歌词...&lt;/p&gt;
&lt;p&gt;词作家将失业了...
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://octoverse.github.com/"&gt;GitHub Octoverse 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github 年度报吿, 值得关注的是: &lt;a href="https://github.com/rdpeng"&gt;rdpeng (Roger D. Peng)&lt;/a&gt;
这位华人,个人仓库有两个在 top10 名单中!
你猜为毛!?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karpathy/arxiv-sanity-preserver"&gt;karpathy/arxiv-sanity-preserver: Web interface for browsing, search and filtering recent arxiv submissions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Python 开发的基于 NLP 技术, 自动化提取论文仓库核心内容搜索服务,以便大家快速定位对自己有用的论文!&lt;/p&gt;
&lt;p&gt;~ 介绍视频: &lt;a href="https://youtu.be/S2GY3gh6qC8"&gt;introduction video&lt;/a&gt;
作者很神奇...&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160922 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160922 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 90</title><link href="http://weekly.pychina.org/importpython/importpython-90.html" rel="alternate"></link><published>2016-09-15T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-09-15:importpython/importpython-90.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/90/"&gt;Import Python Weekly Newsletter - Issue No 90&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/plecto/motorway"&gt;在 Python 中的实时数据流管道&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;streaming&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Motorway is a real-time data pipeline, much like Apache Storm - but made in Python :-) We use it over at Plecto and we're really happy with it - but we're continously developing it. The reason why we started this project was that we wanted something similar to Storm, but without Zookeeper and the need to take the pipeline down to update the topology.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Motorway" src="https://camo.githubusercontent.com/3b9e2aae3a17c7c625add24c49b552747cb08a3c/68747470733a2f2f7777772e64726f70626f782e636f6d2f732f763631346a747a30753168396872732f53637265656e73686f74253230323031362d30372d323925323031342e32382e32362e706e673f646c3d31" /&gt;&lt;/p&gt;
&lt;p&gt;类似 Apache Storm/Amazon SQS/Kinesis 的有界面数据流构建平台
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dataquest.io/blog/streaming-data-python/"&gt;与数据流一起工作: 使用 Twitter API 捕获 tweets&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;twitter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial tries to teach event driven programming by making use of streaming API offered by twitter.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://howchoo.com/g/otcwnwe2ndb/introduction-to-python-generators"&gt;介绍 Python 生成器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;generators&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this guide we 'll cover generators in depth . We 'll talk about how and why to use them , the difference between generator functions and regular functions , the yield keyword , and provide plenty of examples.This guide assumes you have a basic knowledge of Python ( especially regular functions).Throughout this guide we are going to work towards solving a problem .&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一篇极简说明好文.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/6vXS6z9YHg0/python-360-beta-1-is-now-available.html"&gt;Python 3.6.0 beta 1 发布!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.6.0b1 is the first of four planned beta releases of Python 3.6, the next major release of Python, and marks the end of the feature development phase for 3.6. There are quite many new features have a look.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对于 &lt;code&gt;打死不用 Py3 党&lt;/code&gt; 成员而言, 历史模块库的不兼容, 是一个怎么也绕不过去的门槛.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/sep/09/channels-adopted-official-django-project/"&gt;Channels 进入正式 Django 项目通道&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Django team is pleased to announce that the Channels project is now officially part of the Django project, under our new Official Projects program. Channels is the effort to bring WebSockets, long-poll HTTP, and other non-request-response protocol and business logic handling to Django, as part of our ongoing effort to establish what makes a useful web framework in 2016.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eatsomecode.com/testing-dates-django"&gt;在 Django 中测试日期&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django makes unit &amp;amp; functional testing easy (especially with WebTest). Tests on routing, permissions, database updates and emails are all straightforward to implement but how do you test dates &amp;amp; time? You might for example want to test regular email notifications.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://masnun.com/2016/09/11/a-brief-introduction-to-django-channels.html"&gt;介绍 Django Channels&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The idea behind Channels is quite simple. To understand the concept, let’s first walk through an example scenario, let’s see how Channels would process a request.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-74-python-at-zalando/"&gt;节目 74 - Python 在 Zalando&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast, community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Open source has proven its value in many ways over the years. In many companies that value is purely in terms of consuming available projects and platforms. In this episode Zalando describes their recent move to creating and releasing a number of their internal projects as open source and how that has benefited their business. We also discussed how they are leveraging Python and a couple of the libraries that they have published.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Zalando 是又一个 Python 重度依赖公司,分享他们的折腾历史.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/ejwcvjsXyW4/"&gt;得书: 赢取 "Python 201"&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;books&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To win your copy of this book, all you need to do is come up with a comment below highlighting the reason “why you would like to win this book”. Try your luck guys :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/learning-new-stuff/machine-learning-in-a-year-cdb0b0ebd29c#.pwjo17255"&gt;机器学习一年记&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only people with masters degrees or Ph.D’s work with machine learning professionally isn't true. The truth is you don’t need much maths to get started with machine learning, and you don’t need a degree to use it professionally. Here is Per Harald Borgen journey. Yes he is using Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;传说机器学习得至少硕士以上学历的人才玩的了,
作者证明了,这不是真的...嗯哼.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kentquirk/12-versions-of-the-same-algorithm-in-javascript-python-and-go-2a1e2d4add84#.t4epl27k3"&gt;在 JavaScript, Python, 和 Go 中对同一个算法的 12 个实现版本&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;languages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I recently had to write nearly the same code in Go and Python on the same day, and I realized I had written it many times before in different languages. But it does point up some interesting language differences. This article explores many different ways to write the same code&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说, 算法优化到最后, Python 一行搞店, 其它语言, 嗯哼...
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.jp/2016/"&gt;PyCon JP 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conferences.oreilly.com/oscon/open-source-eu-2016"&gt;OSCON Europe 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.de/"&gt;PyCon DE 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jostmey/NakedTensor"&gt;NakedTensor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;53 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bare bottom 简单实例,
基于 TensorFlow 的机器学习&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llSourcell/tensorflow_image_classifier"&gt;tensorflow_image_classifier&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TensorFlow 图像分类实例 by @Sirajology on Youtube&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llazzaro/packyou"&gt;packyou&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 github 更加简单的导入 Python 模块&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;向 npm/brew 致敬, 只是, packyou 只能先从 pip 中安装;
而且文档不可用, 只能先等待了,
进一步的 老爹 ,可能不同意.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/brthornbury/lambdazen"&gt;lambdazen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于实时代码重写的, 更好的 Python lambda 形式语法&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 &lt;code&gt;a = (x) &amp;gt; x&lt;/code&gt; 替代 &lt;code&gt;a = lambda x: x&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;总之那谁曰过, Lisp 之后所有语言,都是对 Lisp 的不完全模仿,
i greeeeeee...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hhromic/python-twitter-toolbox"&gt;python-twitter-toolbox&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter Toolbox for Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tstringer/pymail"&gt;pymail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:mailbox_with_mail: Command-line email client&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pettarin/export-kobo"&gt;export-kobo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可从 Kobo SQLite 文件中导出注释和高亮行&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://octoverse.github.com/"&gt;GitHub Octoverse 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github 年度报吿, 值得关注的是: &lt;a href="https://github.com/rdpeng"&gt;rdpeng (Roger D. Peng)&lt;/a&gt;
这位华人,个人仓库有两个在 top10 名单中!
你猜为毛!?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karpathy/arxiv-sanity-preserver"&gt;karpathy/arxiv-sanity-preserver: Web interface for browsing, search and filtering recent arxiv submissions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Python 开发的基于 NLP 技术, 自动化提取论文仓库核心内容搜索服务,以便大家快速定位对自己有用的论文!&lt;/p&gt;
&lt;p&gt;~ 介绍视频: &lt;a href="https://youtu.be/S2GY3gh6qC8"&gt;introduction video&lt;/a&gt;
作者很神奇...&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160916 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160915 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 89</title><link href="http://weekly.pychina.org/importpython/importpython-89.html" rel="alternate"></link><published>2016-09-08T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-09-08:importpython/importpython-89.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/89/"&gt;Import Python Weekly Newsletter - Issue No 89&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hirelofty.com/blog/how-build-slack-bot-mimics-your-colleague/"&gt;通过 Python 使用 Markov Chains 来构建 Slack bot 模拟同事.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;bot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Imagine in your company slack team there's this person (we'll call him Jeff). Everything that Jeff says is patently Jeff. Maybe you've even coined a term amongst your group: a Jeffism. What if you could program a Slack bot that randomly generates messages that were undeniably Jeff?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;西乔精确的预测了相同的 bot 在微信中诞生后导致人类灭亡的故事
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/-w79X0YhCYo/ternary-statements-in-python"&gt;Python 中是否有三元计算符?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to use Python’s ternary operator to create powerful “one-liners” and enhance logical constructions of your arguments.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;必须有, 不过,何必?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.aosabook.org/en/500L/a-python-interpreter-written-in-python.html"&gt;500行以内 | 用 Python 完成一个 Python 的解释器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Byterun is a Python interpreter implemented in Python. Through my work on Byterun, I was surprised and delighted to discover that the fundamental structure of the Python interpreter fits easily into the 500-line size restriction. This chapter will walk through the structure of the interpreter and give you enough context to explore it further. The goal is not to explain everything there is to know about interpreters—like so many interesting areas of programming and computer science, you could devote years to developing a deep understanding of the topic.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这几乎就是 PyPy 的诞生机制...&lt;/p&gt;
&lt;p&gt;PS: &lt;code&gt;500行内&lt;/code&gt; 已经成为 github 中包含最多脑洞的可用项目了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-73-alex-martelli/"&gt;第 73 集 - Alex Martelli&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note from curator - I met Alex at Pycon Singapore / Py APAC as it was called then, I found him inspirational. We sat down and talked about Java developer's obsession with design patterns. It was a blast. I wonder if he would remember. Here is a podcast where he is interviewed. Alex Martelli has dedicated a large part of his career to teaching others how to work with software. He has the highest number of Python questions answered on Stack Overflow, he has written and co-written a number of books on Python, and presented innumerable times at conferences in multiple countries. We spoke to him about how he got started in software, his work with Google, and the trends in development and design patterns that are shaping modern software engineering.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alex 是 Stack Overflow 中有关 Python 问题回答最多的人.
采访中分享了很多在 google 以及软件工程上的体验
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.machinalis.com/blog/ocr-with-django/"&gt;Machinalis: OCR 和 Django 以及 Tesseract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, OCR&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Django site that integrates with Tesseract to provide an OCR service.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/tips/2016/09/06/django-tip-14-messages-framework.html"&gt;使用消息框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tutorial on how to use messages framework.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/juanpabloaj/dffc6900f80abcfe8ce121a39cffa743"&gt;分版本统计 pip 的下载总量&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wow 3.x isn't far behind. Couple of years may be. I see more and more companies using 3.x series for newer projects.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基本上差了一个量级... Py3 和 Py2&lt;/p&gt;
&lt;p&gt;&lt;img alt="juanpabloaj" src="https://camo.githubusercontent.com/18f68ea99ec363874853ba87ed1fe29b36d66c88/687474703a2f2f692e696d6775722e636f6d2f6c456c5754755a2e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.continuum.io/blog/developer-blog/introducing-geoviews"&gt;连续分析新闻: 介绍 GeoViews&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GeoViews is a new Python library that makes it easy to explore and visualize geographical, meteorological, oceanographic, weather, climate, and other real-world data. GeoViews was developed by Continuum Analytics, in collaboration with the Met Office. GeoViews is completely open source, available under a BSD license freely for both commercial and non-commercial use, and can be obtained as described at the Github site.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;BSD 许可的 GeoViews 是一个完备的地理数据分析/展示相关的库.
可以轻巧的生成可互动的地理相关可视化图谱!&lt;/p&gt;
&lt;p&gt;&lt;img alt="cell8" src="https://www.continuum.io/sites/all/themes/continuum/posts/geoviews/imgs/cell8.png" /&gt;&lt;/p&gt;
&lt;p&gt;以上这图就是一行代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;url = &amp;#39;https://map1c.vis.earthdata.nasa.gov/wmts-geo/wmts.cgi&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;gv.WMTS(url, layer='VIIRS_CityLights_2012', crs=crs.PlateCarree(), extents=(0, -60, 360, 80))&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/09/05/pydev-of-the-week-reinout-van-rees/"&gt;Mike Driscoll: 当周PyDev: Reinout van Rees&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week we welcome Reinout van Rees (@reinoutvanrees) as our PyDev of the Week! Reinout is the creator / maintainer of zest.releaser. He has a nice website that includes a Python blog that you might want to check out. I would also recommend checking his Github page to see what projects he’s a part of. Note - We have been including Reinout van Rees blogposts for long time now in importpython. Here you can know more about the person behind the blog.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一位 van ;-)
zest.releaser 的作者, 带大家如何分析一位程序猿的网络数据
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pbpython.com/pandas-list-dict.html"&gt;Chris Moffitt: 从列表和字典构建 Pandas DataFrames&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whenever I am doing analysis with pandas my first goal is to get data into a panda’s DataFrame using one of the many available options. For the vast majority of instances, I use &lt;code&gt;read_excel&lt;/code&gt; , &lt;code&gt;read_csv&lt;/code&gt; , or &lt;code&gt;read_sql&lt;/code&gt; . There are multiple methods you can use to take a standard python datastructure and create a panda’s DataFrame. For the purposes of these examples, I’m going to create a DataFrame with 3 months of sales information for 3 fictitious companies.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;享受 Pandas 的便利,第一步就是将数据倒入为 DataFrames ...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.datacamp.com/community/tutorials/18-most-common-python-list-questions-learn-python"&gt;18 个最常见的 Python 列表问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go find how many you can answer&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;发布的网站倒是值得关注: &lt;code&gt;datacamp.com&lt;/code&gt;
在线自学 R/Py 进行数据科学研究...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/1CWjaB3pGlk/"&gt;Python 201 正式发布!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mike Driscoll's second book Python 201: Intermediate Python is out.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python201_cover20160330_sm" src="http://www.blog.pythonlibrary.org/wp-content/uploads/2016/04/Python201_cover20160330_sm-237x300.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="mousecovertitlejpg_sm2" src="http://www.blog.pythonlibrary.org/wp-content/uploads/2014/02/mousecovertitlejpg_sm2-237x300.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,封面很有爱...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.paypal-engineering.com/2016/09/07/python-packaging-at-paypal"&gt;PayPal 中使用 Anaconda 进行 Python Packaging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;packaging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At PayPal, we write and deploy our fair share of Python, and we wanted to devote a couple minutes to our story and give credit where credit is due. For conclusion seekers, without doubt or further ado: Continuum Analytics’ Anaconda Python distribution has made our lives so much easier. For small- and medium-sized teams, no matter the deployment scale, Anaconda has big implications. But let’s talk about how we got here.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;历史原因...
&lt;img alt="snake_esc_sm" src="http://sedimental.org/uploads/snake_esc_sm.png" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/deslum/cssdbpy"&gt;csssdbpy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cssdbpy is a simple SSDB client written on Cython. Faster standart SSDB client.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/dockerizing-a-python-django-web-application"&gt;Semaphore Community: Dockerizing a Python Django Web Application&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get an understanding of how to dockerize your Django application, using the Gunicorn web server, capable of serving thousands of requests in a minute.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;dockerize ~ 又一个新词儿
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jugad2.blogspot.com/2016/09/quick-and-dirty-drive-detector-in.html"&gt;Python (Windows)中快又脏 的驱动器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While using Python's os.path module in a project, I got the idea of using it to do a quick-and-dirty check for what drives exist on a Windows system. Actually, not really the physical drives, but the drive letters, that may in reality be mapped any of the following: physical hard disk drives or logical partitions of them, CD or DVD drives, USB drives, or network-mapped drives.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dyJdLalc7TA&amp;amp;amp;list=PLNmsVeXQZj7q0ao69AIogD94oBgp3E9Zsc"&gt;有用的 python 视频德语教程系列.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note I haven't personally gone through the video series, the no of upvotes and views looks pretty decent. Please make your own judgement. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.jp/2016/"&gt;PyCon JP 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conferences.oreilly.com/oscon/open-source-eu-2016"&gt;OSCON Europe 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.de/"&gt;PyCon DE 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Smerity/keras_snli"&gt;keras_snli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;77 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Stanford Natural Language Inference (SNLI) 
使用神经网络进行计算 和/或&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jh69/commandlinefu_slackbot"&gt;commandlinefu_slackbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个 slack 机器人, 自动从 commandlinefu.com 获得结果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eyaler/word2vec-slim"&gt;word2vec-slim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;word2vec Google News model slimmed down to 260k English words&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/iceboy-sjtu/pyh2o"&gt;pyh2o&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The pyh2o module provides Python binding for the H2O HTTP server. Currently this is a toy project, PRs are welcome to make it useful. Think of high performance, interaction with asyncio, etc.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160909 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160908 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 88</title><link href="http://weekly.pychina.org/importpython/importpython-88.html" rel="alternate"></link><published>2016-09-04T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-09-04:importpython/importpython-88.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/88/"&gt;Import Python Weekly Newsletter - Issue No 88&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.doughellmann.com/~r/DougHellmann/~3/MqzfG-MEpHc/"&gt;doctest — 通过文档测试 — PyMOTW 3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;doctest tests source code by running examples embedded in the documentation and verifying that they produce the expected results. It works by parsing the help text to find examples, running them, then comparing the output text against the expected value. Many developers find doctest easier to use than unittest because, in its simplest form, there is no API to learn before using it.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是进入测试最简单的形式, 但是,对于单元测试而言,并没有什么用,
只有设计精良的可测试代码, 对接口类的测试才 hold 的住...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/getpy"&gt;用 twitter 订阅 getpy &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;twitter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you like this newsletter and you are on twitter you want to follow getpy. Daily get selected ( 4 - 5 ) tweets super relevant to Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似的通过 SNS 进行友好的技术新闻订阅的服务/工具/插件 有很多,
残念的是都在墙外...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://samoylov.tech/2016/08/31/deploying-django-with-gunicorn-and-supervisor/"&gt;Django 用 Gunicorn 部署以及监察&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We deploy all Django applications with Gunicorn and Supervisor. I personally prefer Gunicorn to uWSGI because it has better configuration options and more predictable performance. In this article we will be deploying a typical Django application. We won't be using async workers because we're just serving HTML and there are no heavy-lifting task in background.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-3-patterns-idioms-test.readthedocs.io/en/latest/"&gt;Python 3 模式/技巧/约定&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What you see here is an early version of the book.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nRtp9NgtXiA"&gt;激进的规则: Facebook 中对 Python 文化的改进&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today, services built on Python 3.5 using asyncio are widely used at Facebook. But as recently as May of 2014 it was actually impossible to use Python 3 at Facebook. Come learn how we cut the Gordian Knot of dependencies and social aversion to the point where new services are now being written in Python 3 and existing codebases have plans to move to Python 3.5.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PyCon 上的分享,有关 fb 工程师为了 py3 作出的种种折腾...&lt;/p&gt;
&lt;p&gt;值得嘛?!....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythontesting.net/podcast/21-terminology-part-1/"&gt;Brian Okken: 21: 术语: 测试夹具/皮下测试/端到端测试/系统测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Covered in this episode: Test Fixtures, Subcutaneous Testing, End to End Testing (System Testing) . Curator's note - Of all the podcast out there pythontesting is my fav podcast.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极, 又一个硬核技术的播客....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.lerner.co.il/implementing-zip-list-comprehensions/"&gt;Reuven Lerner: 用列表解析实现 “zip”&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple tutorial with code snippets on zip.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.automatingosint.com/blog/2016/08/dark-web-osint-with-python-part-three-visualization/"&gt;自动化 OSINT: 暗网 OSINT 和 Python 第三部分: 可视化&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Welcome back! In this series of blog posts we are wrapping the awesome OnionScan tool and then analyzing the data that falls out of it. If you haven’t read parts one and two in this series then you should go do that first. In this post we are going to analyze our data in a new light by visualizing how hidden services are linked together as well as how hidden services are linked to clearnet sites. One of the awesome things that OnionScan does is look for links between hidden services and clearnet sites and makes these links available to us in the JSON output. Additionally it looks for IP address leaks or references to IP addresses that could be used for deanonymization.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;网络安全实战系统分享,以分析 Onion 网络为实例讲解...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://cloud.google.com/python/django/container-engine"&gt;在容器引擎中运行 Django | Python | Google Cloud Platform&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How to deploy Django app on Google Cloud&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/"&gt;Conda: 传说和误解&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the four years since its initial release, many words have been spilt introducing conda and espousing its merits, but one thing I have consistently noticed is the number of misconceptions that seem to remain in the (often fervent) discussions surrounding this tool. I hope in this post to do a small part in putting these myths and misconceptions to rest.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Conda 是个传奇的 Python 发行版, 但是,在宣传中形成了很多误解,所以,作者...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.snarky.ca/introducing-which-film"&gt;Brett Cannon: 介绍哪部电影&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's a website to help you choose what movie you and your family/friends should watch together. Here is the code for the software https://github.com/which-film/which-film.info&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;开源了一个为家人自动推荐电影的网站代码..
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://montrealpython.org/2016/08/mp59-cfp/"&gt;Montreal Python 用户组: Montréal-Python 59: 召唤讲师&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community, conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;September is back and it's for the Montreal Python community to gather again and share exciting new technologies and projects. This month, our friends from Ubisoft are welcoming us into their offices and are going to present to us how they are using Python and how they scaling it at large to powered some of their games.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0526/"&gt;PEP-526 复审准备: 语法变量以及属性注释&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although type comments work well enough, the fact that they're expressed through comments has some downsides. The majority of these issues can be alleviated by making the syntax a core part of the language. Read the PEP to know more. I think it is a very exciting PEP.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;为了语言的运行性能修订语言形式本身, 嗯哼....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ccst.io/e/strings"&gt;Python 周聊: 胶合在一起的字符串&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn when and why you'd glue strings together using concatenation, interpolation, or other methods. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.jp/2016/"&gt;PyCon JP 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python.ie/pycon-2016/"&gt;PyCon Ireland 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dlr.de/sc/pyhpc2016"&gt;PyHPC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pydata.org/cologne2016/"&gt;PyData Cologne 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shiyanhui/Young"&gt;Young&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;187 Stars, 20 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;充满了爱心的全功能 Python 制造论坛&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Young" src="https://camo.githubusercontent.com/c7025c1eee7b46b0cdc7cb163be0122c405ca28a/687474703a2f2f692e696d6775722e636f6d2f6a495273735a382e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;简单的说国产 weibo 的 py 再制品;
基于 mongodb/NodeJS/Elasticsearch/Ejabberd ...嗯哼...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/david-gpu/srez"&gt;srez&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;133 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Image super-resolution through deep learning. This project uses deep learning to upscale 16x16 images by a 4x factor. The resulting 64x64 images display sharp features that are plausible based on the dataset that was used to train the neural net.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="srez_sample_output" src="https://github.com/david-gpu/srez/raw/master/srez_sample_output.png" /&gt;&lt;/p&gt;
&lt;p&gt;基于神经网络的深度学习,完成从 16x16pix 的微型图片中还原出大图片...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reorx/httpstat"&gt;httpstat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;48 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;curl 状态可视化工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="httpstat" src="https://github.com/reorx/httpstat/raw/master/screenshot.png" /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 在宽屏电脑上, CLI 的能力永远在底估...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thunlp/NSC"&gt;NSC&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;36 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Neural Sentiment Classification&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;神经网络来分析情感倾向...当然也可以训练为分析理论的左右倾向
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ahmetkotan/yapi"&gt;yapi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python Youtube Data API v3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mjs/imapclient"&gt;imapclient&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;易用的, Pythonic 的完全的 IMAP 客户端库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robolyst/google"&gt;google&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;登录后可方便的访问 google 后台的各种数据&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;别的不说, 这种项目名简直了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheery/json-algorithm"&gt;json-algorithm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now even your pet rock can parse JSON.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个可以玩 JSON 的模块
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oeegor/django-explain"&gt;django-explain&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A helper to get EXPLAIN or EXPLAIN ANALYZE OUTPUT for django queryset.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thundergolfer/interview-with-python"&gt;interview-with-python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The ultimate in python interview preparation and coding practice.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用以面试准备的终极代码集, 嗯哼
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160905 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160904 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 85</title><link href="http://weekly.pychina.org/importpython/importpython-85.html" rel="alternate"></link><published>2016-08-29T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-08-29:importpython/importpython-85.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/85/"&gt;Import Python Weekly Newsletter - Issue No 85&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dbader.org/blog/sublime-text-for-python-development-2016-review"&gt;Daniel Bader: Sublime Text 为 Python 开发 — 回顾2016&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sublime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you ask for editor recommendations as a Python developer one of the top choices you’ll hear about is Sublime Text. In this post I’ll review the status of Python development with Sublime Text as of 2016.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;subl 从一开始就和 py 纠缠在一起...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-69-pycon-canada-with-francis-deslauriers-and-peter-mccormick/"&gt;69集 - PyCon Canada 和 Francis Deslauriers 以及 Peter McCormick&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week we interviewed Peter McCormick and Francis Deslauriers about their work organizing PyCon Canada to provide a venue for Canadians to talk about how they are using the language. If you happen to be near Toronto in November then you should get a ticket and help contribute to their success.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://magic.io/blog/asyncpg-1m-rows-from-postgres-to-python"&gt;1M rows/s 从 Postgres 到 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;asyncpg is a new fully-featured open-source Python client library for PostgreSQL. It is built specifically for asyncio and Python 3.5 async / await. asyncpg is the fastest driver among common Python, NodeJS and Go implementations.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pg 输出全新的 py 客户端库,包含了最新的 py/node/go 的支持
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/packages/2016/08/05/flake8.html"&gt;Package of the Week: Flake8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flake8 is a Python library that wraps PyFlakes, pycodestyle and Ned Batchelder’s McCabe script. It is a great toolkit for checking your code base against coding style (PEP8), programming errors (like “library imported but unused” and “Undefined name”) and to check cyclomatic complexity.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;包含圈复杂度检测的代码风格工期
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.snarky.ca/network-protocols-sans-i-o"&gt;Brett Cannon: 网络协议, sans I/O&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Hopefully) the future of network protocols in Python. I think it's important to promote this approach to implementing network protocols, to the point that I have created a page at https://sans-io.readthedocs.io/ to act as a reference of libraries that have followed the approach I've outlined here. Basically what this means is that network protocol libraries will need to be rewritten so that they can be used by both synchronous and asynchronous I/O .&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;为了异步网络, 又一个协议包在冲进!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/GoDjango/~3/HTZnuKgxemY/"&gt;用 django-admin-honeypot 建立蜜罐&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Security is something we often ignore until it is too late. However, there are some things you can do right now that are easy to increase your security. Using django-admin-honeypot is one of those things you can do. It is super easy and provides you with the means of tracking who is trying to access your site.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Django 越来越全能了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@hakibenita/things-you-must-know-about-django-admin-as-your-app-gets-bigger-6be0b0ee9614#.gsi99mdu8"&gt;你应该知道的 Django Admin 作为应用更 Bigger&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django admin panel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Django admin is a very powerful tool. We use it for day to day operations, browsing data and support. As we grew some of our projects from zero to 100K+ users we started experiencing some of Django’s admin pain points?—?long response times and heavy load on the database.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实, 很久以前 Django Admin 当现成的 app 来使用就已经不是黑科技了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IMKweOTFjXw"&gt;介绍用 Python 进行自然语言处理 - Asyncjs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this talk, Jess Bowden introduces the area of NLP (Natural Language Processing) and a basic introduction of its principles. She uses Python and some of its fundamental NLP packages, such as NLTK, to illustrate examples and topics, demonstrating how to get started with processing and analysing Natural Languages. She also looks at what NLP can be used for, a broad overview of the sub-topics, and how to get yourself started with a demo project.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对的, 也是很久之前, Py 就是自然处理的重要参与力量了,
毕竟对于非程序猿的科学家, 用 py 的阻力小很多...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aboutsimon.com/blog/2016/08/04/datetime-vs-Arrow-vs-Pendulum-vs-Delorean-vs-udatetime.html"&gt;Simon: datetime vs Arrow vs Pendulum vs Delorean vs udatetime&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;datetime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I setup a benchmark, which can be found here to compare Python datetime, Arrow, Pendulum, Delorean and udatetime on a performance level. I picked 4 typical performance critical operations to measure the speed of those libraries. Decode a date-time string, Encode (serialize) a date-time string, Instantiate object with current time in UTC, Instantiate object with current time in local timezone, Instantiate object from timestamp in UTC, Instantiate object from timestamp in local timezone.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 日期处理是又常用又头痛的一件事儿...这么多年过去了,
依然没有什么完美的形式来打动 guido 收入标准库...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyPyStatusBlog/~3/uTWeNBbKaCw/pypy-gets-funding-from-mozilla-for.html"&gt;PyPy 获得 Mozilla 的资助用以支持 Python 3.5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mozilla recently decided to award $200,000 to Baroque Software to work on PyPy as part of its Mozilla Open Source Support (MOSS) initiative. This money will be used to implement the Python 3.5 features in PyPy. Within the next year, we plan to use the money to pay four core PyPy developers half-time to work on the missing features and on some of the big performance and cpyext issues.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;銭虽然不多, 但是可以看出 Mozilla 对 rust 并不放心, 还在继续确保其它可能性
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/148639163968"&gt;你的 Django 故事: 遇见 Katerina Kampardi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;djangogirls&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Katerina Kampardi is a Web Applications Developer from Greece who works as a freelancer. Like many aspiring developers, Katerina is self-taught and got her start with online tutorials. She later attended a Python Specialization. Today, she works on various Django projects as an independent developer.&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pyunconf.de/"&gt;Python Unconference 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.de/"&gt;PyCon DE 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pavelgonchar/colornet"&gt;colornet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1885 Stars, 67 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Neural Network 
来进行灰度图像上色&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tflearn/tflearn"&gt;tflearn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1313 Stars, 50 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;深度学习库,
作为 TensorFlow 的一个高级接口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/graphific/DeepDreamVideo"&gt;DeepDreamVideo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;773 Stars, 94 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;implementing deep dream on video&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bamos/dcgan-completion.tensorflow"&gt;dcgan-completion.tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;54 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 TensorFlow 的深度学习能力来图像修复&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pyk/fastText.py"&gt;fastText.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;44 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Facebook fastText 的 py 接口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linouk23/NBA-Player-Movements"&gt;NBA-Player-Movements&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;37 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 SportVU 日志数据, 可视化 NBA 比赛&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="spurs" src="https://github.com/linouk23/NBA-Player-Movements/raw/master/examples/spurs.gif" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/winterfeel/pic2text"&gt;pic2text&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个将图像转化为文字的工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/moushuai/NaiveBayesClassifier"&gt;NaiveBayesClassifier&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Naive bayes classifier implement with Python 2.7&lt;/p&gt;
&lt;p&gt;Python 2.7 实现的 朴素贝叶斯分类器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Naive bayes 原理很简单, 困难的是在现实情景中合理识别先验条件
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160829 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160829 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 86</title><link href="http://weekly.pychina.org/importpython/importpython-86.html" rel="alternate"></link><published>2016-08-29T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-08-29:importpython/importpython-86.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/86/"&gt;Import Python Weekly Newsletter - Issue No 86&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://glyph.twistedmatrix.com/2016/08/python-packaging.html"&gt;Python 打包现在不错了&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python packaging is not bad any more. If you’re a developer, and you’re trying to create or consume Python libraries, it can be a tractable, even pleasant experience. A historical perspective of how it's evolved and where it stands today.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼?!谁说的?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/ukG8L0FEq2Q/python-360-alpha-4-preview-release-is.html"&gt;Python 3.6.0 alpha 4 预览版释放&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.6.0a4 has been released. 3.6.0a4 is the last of four planned alpha pre-releases of Python 3.6, the next major release of Python. During the alpha phase, Python 3.6 remains under heavy development: additional features will be added and existing features may be modified or deleted. Please keep in mind that this is a preview release and its use is not recommended for production environments. Python 3.6.0 is planned to be released by the end of 2016. The first beta pre-release, 3.6.0b1, is planned for 2016-09-12.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,今年 PyCon16China 大会口号还有人提议: &lt;code&gt;就不用 Py3&lt;/code&gt;
老爹太囧了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://glyph.twistedmatrix.com/2016/08/attrs.html"&gt;每个人都要的 Python Library&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you write programs in Python? You should be using attrs.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Limodou 就写过类似模块;-)
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/tips/2016/08/16/django-tip-11-custom-manager-with-chainable-querysets.html"&gt;Django 技巧 #11 用 Chainable QuerySets 自定管理器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a Django model, the Manager is the interface that interacts with the database. By default the manager is available through the Model.objects property. The default manager every Django model gets out of the box is the django.db.models.Manager. It is very straightforward to extend it and change the default manager.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.doughellmann.com/~r/DougHellmann/~3/5Xo7JUh8bNw/"&gt;dis — Python 字节码反编译器 — PyMOTW 3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The dis module includes functions for working with Python bytecode by “disassembling” it into a more human-readable form. Reviewing the bytecodes being executed by the interpreter is a good way to hand-tune tight loops and perform other kinds of optimizations. It is also useful for finding race conditions in multi-threaded applications, since it can be used to estimate the point in the code where thread control may switch.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;推荐用来估计代码中线程可切换点
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/6pAlNacLd5g/the-python-software-foundation-is.html"&gt;Python 基金会寻求一位 blogger !&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Are you the one ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.johnwittenauer.net/machine-learning-exercises-in-python-part-1/"&gt;Andrew Ng 的机器学习练习在 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the pivotal moments in my professional development this year came when I discovered Coursera. I'd heard of the "MOOC" phenomenon but had not had the time to dive in and take a class. Earlier this year I finally pulled the trigger and signed up for Andrew Ng's Machine Learning class. I completed the whole thing from start to finish, including all of the programming exercises. The experience opened my eyes to the power of this type of education platform, and I've been hooked ever since.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/python/tutorial/how-to-make-a-sandwich-using-python-context-manager"&gt;Codementor: 如何使用 Python 上下文管理器制作 Sandwich&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Explains Context Manager using "Making a sandwich" as an example.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="eEglAfJnT72Iw5chw0IT" src="https://www.filepicker.io/api/file/eEglAfJnT72Iw5chw0IT" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://garybake.com/wemos-oled-shield.html"&gt;Micropython 以及如何在老屏幕上使用 esp8266.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;embedded systems&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wemos D1 mini is a 64x48 oled screen that can be mounted on the d1 really easily. The screen has an I2C interface and driven by a SSD1306 chip which is thankfully supported by micropython. Full details, code snippets, schematics can be found on this article.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又见 I2C ...&lt;/p&gt;
&lt;p&gt;&lt;img alt="upy_logo" src="http://garybake.com/images/oled/upy_logo.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/brandon_rhodes/status/764265053147148288"&gt;pyvideo is back&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Brandon Rhodes on Twitter: “Welcome to the new http://pyvideo.org !” Thanks to the original maintainers, the new, &amp;amp; the PSF for this site!&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pyunconf.de/"&gt;Python Unconference 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.de/"&gt;PyCon DE 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tnlin/PokemonGo-TSP"&gt;PokemonGo-TSP&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;65 Stars, 11 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solving TSP with Simulated Annealing&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oeegor/curlify"&gt;curlify&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 Python requests 的请求对象变成 curl 命令的库.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;win 用户受到 13206 点伤害
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/orhanobut/buildreport"&gt;buildreport&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 android 的构建 github pr 生成总结报告&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/seemethere/retry.it"&gt;retry.it&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;retry.it, 简单重试库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OmarShehata/atom-tracer"&gt;atom-tracer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语言无关的 atom 包, 用以跟踪内联变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/asdfMaciej/pokemon-csv-to-map"&gt;pokemon-csv-to-map&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A tool useful for Pokemon Go maps, such as pogom or PokemonGo-Map.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jkbrzt/geotagger"&gt;geotagger&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过智能手机的 GPS 记录为你的照片标记地理点&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160829 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160829 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 87</title><link href="http://weekly.pychina.org/importpython/importpython-87.html" rel="alternate"></link><published>2016-08-29T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-08-29:importpython/importpython-87.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/87/"&gt;Import Python Weekly Newsletter - Issue No 87&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DanielBader0xC0FFEE"&gt;Daniel Bader 为Py开发者的 Youtube 频道&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Useful Youtube channel with short screencast/videos for Python developers to subscribe to. I learned on couple of sublime + Python tricks from here.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细心为 Pythonista 收集整理的油管频道,
包含了 subl+py 的技巧演示...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dockerfiles/django-uwsgi-nginx"&gt;dockerfiles/django-uwsgi-nginx:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This Dockerfile shows you how to build a Docker container with a fairly standard and speedy setup for Django with uWSGI and Nginx.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pythontips.com/2016/08/19/interesting-python-tutorials/"&gt;有趣的 Python 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;curated list&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have read some interesting Python tutorials lately. I would love to share them with you.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SunDwarf/Kyoukai"&gt;Kyoukai - 完全异步灵感源自 Flask 的Py3.5+ web 框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kyoukai is a fast asynchronous Python server-side web framework. It is built upon asyncio and the Asphalt framework for an extremely fast web server.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Kyōkai (境界)&lt;/code&gt; 嗯哼,因为日语有完全可发音的罗马形式,所以,总是被选为工程名嘛?!&lt;/p&gt;
&lt;p&gt;也使用了 Blueprintslink 进行扩展,基本上就是 flask 的异步简化版本.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tech.yplanapp.com/2016/08/24/upgrading-to-python-3-with-zero-downtime/"&gt;0停机的升级到 Python 3 with Zero Downtime · YPlan Tech Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We recently upgraded our 160,000 lines of backend Python code from Python 2 to Python 3. We did with zero downtime and no major errors! Here’s how we did it, hopefully it will help anyone else still stuck on Python 2!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;终于有人成功尝试了, 一次性将 16万行 py2 代码升级为 py3 的...&lt;/p&gt;
&lt;p&gt;&lt;img alt="green-tree-python" src="https://tech.yplanapp.com/public/img/2016-08-24-upgrading-to-python-3/green-tree-python.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;你信嘛?!反正俺相信了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bangalore.python.org.in/blog/2016/08/20/august-talks/"&gt;BangPypers: 有关自动化的讨论 - 2016 August Meetup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;automation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bangalore user group meet with Python Automation as the theme&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;看人家的 meetup 在讨论什么...
看人家的环境比我们也没有高哪儿去哪
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/08/22/ann-the-wxpython-cookbook-kickstarter/"&gt;Mike Driscoll: ANN: The wxPython Cookbook Kickstarter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kickstarter Campaign for wxPython Cookbook.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;现在什么都能众筹了哪...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm/episodes/show/72/fashion-driven-open-source-software-at-zalando"&gt;和俺说 Python: #72 时尚驱动的开源软件在 Zalando&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What happens when you take a tech-driven online fashion company that is experiencing explosive growth and infuse it with a deep open-source mission? You'll find out on this episode of Talk Python To Me. We'll meet Lauri Apple and Rafael Caricio from Zalando where developers there have published almost 200 open source projects on Github.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以下载 mp3 的播客, 有关 Fashion-driven&lt;/p&gt;
&lt;p&gt;&lt;img alt="lauri-apple" src="https://talkpython.fm/static/bio_shots/zalando/lauri-apple.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;来自 &lt;a href="https://www.zalando.co.uk/women-home/"&gt;Womens Shoes &amp;amp; Fashion | ZALANDO.CO.UK&lt;/a&gt; 团队&lt;/p&gt;
&lt;p&gt;关键是这种播客坚持了很长时间...如何?为何?谁在听?&lt;/p&gt;
&lt;p&gt;&lt;img alt="Xoobn3zf_400x400" src="https://pbs.twimg.com/profile_images/700233189193883649/Xoobn3zf_400x400.png" /&gt;
推荐 &lt;a href="https://talkpython.fm/episodes/show/73/machine-learning-at-the-new-microsoft"&gt;Machine learning at the new Microsoft&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以及专属 rap &lt;a href="https://soundcloud.com/smixx/smixx-developers-feat-steve"&gt;Developers, Developers, Developers&lt;/a&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.vinta.com.br/blog/2016/controlling-access-a-django-permission-apps-comparison/"&gt;访问控制: 一个 Django 许可的应用比较&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are many ways to handle permissions in a project. For instance we may have model level permissions, object level permissions, fine grained user permission or role based. Either way we don't need to be writing any of those from scratch, Django ecosystem has a vast amount of permission handling apps that will help us with the task. In this post we will compare how some popular permission apps work so you know which one suits your project needs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.machinalis.com/blog/searching-for-aliens/"&gt;Machinalis: 搜索外星人&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;image processing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Do you know what they are? If you are thinking of irrigation circles, you are wrong. Do not believe the lies of the conspirators. Those are, undoubtedly, proofs of extraterrestrial visitors on earth. As I want to be ready for the first contact I need to know where these guys are working. It should be easy with so many satellite images at hand. So I asked the machine learning experts around here to lend me a hand. Surprisingly, they refused. Mumbling I don’t know what about irrigation circles. Very suspicious. But something else they mentioned is that a better initial approach would be to use some computer-vision detection technique. Note - Code is here https://github.com/machinalis/satimg/blob/master/Searching%20for%20aliens.ipynb&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;标题党...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://iluxonchik.github.io/why-you-should-learn-python/"&gt;为何要学习 Python ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hopefully this post gave you some insight into why you should consider giving Python a go. This post is coming from someone who feels “guilty” for talking not so good about Python in the past and is now all over the hype train. In my defense, it was just a “personal preference thing”, when people asked me about which language they should learn first, for instance, I usually suggested Python. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 一切鳮汤都抵不上一个确切的职位...
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.jp/2016/"&gt;PyCon JP 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conferences.oreilly.com/oscon/open-source-eu-2016"&gt;OSCON Europe 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.de/"&gt;PyCon DE 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cz.pycon.org/2016/"&gt;PyCon CZ 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shellphish/fuzzer"&gt;fuzzer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;82 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Python interface to AFL, allowing for easy injection of testcases and other functionality.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;AFL 又一个模糊测试框架的又一个接口
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/platomav/MEAnalyzer"&gt;MEAnalyzer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;31 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Intel Engine Firmware Analysis Tool&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hiway/pybble"&gt;pybble&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;24 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python on Pebble&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llSourcell/tensorflow_demo"&gt;tensorflow_demo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tensorflow Demo for my TF in 5 Min Video on Youtube&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fiatjaf/washer"&gt;washer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A whoosh-based CLI indexer and searcher for your files.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160831 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160829 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 84</title><link href="http://weekly.pychina.org/importpython/importpython-84.html" rel="alternate"></link><published>2016-08-04T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-08-04:importpython/importpython-84.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/84/"&gt;Import Python Weekly Newsletter - Issue No 84&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangoweekly.com/books/"&gt;Django 图书全集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;books&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Djangoweekly has a listing of all published Django books on one page. Note check publication date and which version of Django the book is using.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://eev.ee/blog/2016/07/31/python-faq-why-should-i-use-python-3"&gt;为毛应该用 Python 3?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The short answer is: because it’s the actively-developed version of the language, and you should use it for the same reason you’d use 2.7 instead of 2.6. If you’re here, I’m guessing that’s not enough. You need something to sweeten the deal. Well, friend, I have got a whole mess of sugar cubes just for you.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;何时没有这种文章发布了, 才说明 Py3 真正获得用户肯定了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal"&gt;和 Josh Gordon 学习机械学习&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning, video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Series of Python Videos by Josh Gordon of Google teaching Machine learning basics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/gxcXOFutozs/fluent-python-new"&gt;流利的 Python: 特殊方法的威能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pythonic&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pythonistas praise a good API by calling it “Pythonic.” That quality has much to do with proper use of the special methods used in the Python Data model, which define the essential behaviors that we expect in objects. Perhaps you’ve used Python for years. Do you really know it? This tutorial is intended for a Python programmer who has working/practical knowledge of the language plus an understanding of object-oriented programming, who now needs to learn how to write idiomatic APIs&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;正确用好内置数据结构是一组稳固 API 的基础.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://simpleisbetterthancomplex.com/tutorial/2016/07/28/how-to-create-django-signals.html"&gt;如何构建 Django 信号&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Django Signals is a strategy to allow decoupled applications to get notified when certain events occur. Let’s say you want to invalidate a cached page everytime a given model instance is updated, but there are several places in your code base that this model can be updated. You can do that using signals, hooking some pieces of code to be executed everytime this specific model’s save method is trigged. In this tutorial I will present you the built-in signals and give you some general advices about the best practices.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,将 GUI 的信号/槽 机制用在 web 中.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://semaphoreci.com/community/tutorials/getting-started-with-behavior-testing-in-python-with-behave"&gt;Semaphore 社区: 用 Behave 进行 Python 应用行为测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to write behavioral tests for your next Python application using the Behave library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/aug/01/django-110-released/"&gt;Django 1.10 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full text search for PostgreSQL. New-style middleware to solve the lack of strict request/response layering of the old-style of middleware. Official support for Unicode usernames. Check release notes for more info.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.automatingosint.com/blog/2016/07/dark-web-osint-with-python-and-onionscan-part-one/"&gt;自动化 OSINT: 暗网 OSINT 使用 Python 和 OnionScan: 第一节&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You may have heard of this awesome tool called OnionScan that is used to scan hidden services in the dark web looking for potential data leaks. Recently the project released some cool visualizations and a high level description of what their scanning results looked like. What they didn’t provide is how to actually go about scanning as much of the dark web as possible, and then how to produce those very cool visualizations that they show.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;类似 Zoomeye 服务,从 dark web 中为用户进行数据泄漏检验,
也是数据科学的一种, 所以, 必然的 Python 可以
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/8OEAOmeX_NQ/avoiding-curse-of-knowledge-ned-batchelder.html"&gt;"避免知识的诅咒": 社区服务奖获得者 Ned Batchelder 曰&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python Software Foundation recognized Batchelder with a Community Service Award for his tireless work helping run the Boston Python user group, being a regular speaker at conferences, maintaining coverage.py, and being a friendly face for the community on IRC and elsewhere&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;coverage.py 的创造者
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/pF_P0Zp45-M/"&gt;Python 201: multiprocessing 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;multiprocessing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The multiprocessing module was added to Python in version 2.6. It was originally defined in PEP 371 by Jesse Noller and Richard Oudkerk. The multiprocessing module allows you to spawn processes in much that same manner than you can spawn threads with the threading module. The idea here is that because you are now spawning processes, you can avoid the Global Interpreter Lock (GIL) and take full advantages of multiple processors on a machine.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Py2.6 就加入内置模块了, 但是,用起来的不多
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vincenttide.com/blog/1/django-channels-and-celery-example/"&gt;Django Channels 和 Celery 样例 - Vincent Zhang&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, celery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, I will go over how to setup a Django Channels project to work with Celery and have instant notification when task starts and completes. Django Channels uses WebSockets to enable two-way communication between the server and browser client. It is assumed that the reader is comfortable with how to setup a normal Django project and we will only cover the parts relating to Channels and Celery.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;华人,当然外国的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/v4JMuiflIAk/getting-started-with-deep-learning-using-keras-and-python-new"&gt;用 Keras 和 Python 开始深度学习&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;deep learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Despite all the recent buzz about deep learning, the design and testing of a neural network pipeline may become a task for developers who aren't machine learning specialists. This tutorial is intended for a software developer who has intermediate experience in Python, plus some hands-on experience developing data pipelines and working with machine learning use cases, who now needs to learn how to build high-performance classifiers based on deep learning.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aboutsimon.com/blog/2016/08/02/udatetime-pypy-support-ultra-fast.html"&gt;udatetime 已经支持 PyPy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pypy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I just finished the performance optimized pure Python implementation of my RFC3339 date-time library udatetime for PyPy and Python 3.5. The benchmark say PyPy is now officially the fastest with udatetime. Again it’s astonishing how good PyPy performs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.continuum.io/blog/developer-blog/dask-and-scikit-learn-3-part-tutorial"&gt;连续分析新闻: Dask 和 scikit-learn: 教程三部曲&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;scikit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dask core contributor Jim Crist has put together a series of posts discussing some recent experiments combining Dask and scikit-learn on his blog, Marginally Stable. The tutorial spans three posts, which covers model parallelism, data parallelism and combining the two with a real-life dataset.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;主要分享 涵盖模型的并行，数据并行和两个与现实生活相结合的数据集
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tech.blog.aknin.name/category/my-projects/pythons-innards/"&gt;Python 内脏: Hello, ceval.c!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The “Python’s Innards” series owes its existence, at least in part, to hearing one of the Python-Fu masters in my previous workplace say something about a switch statement so large that it was needed to break it up just so some compilers won’t choke on it. I remember thinking then: “Choke the compiler with a switch? Hrmf, let me see that code.” Turns out that this switch can be found in ./Python/ceval.c. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;追查 switch 到源代码
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.my/"&gt;PyCon MY 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pyunconf.de/"&gt;Python Unconference 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pycon.jp/2016/"&gt;PyCon JP 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fchollet/deep-learning-models"&gt;deep-learning-models&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;110 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keras 代码和权重文件 的深度学习模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/encode32/PokeVisionFinder"&gt;PokeVisionFinder&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PokeVision 搜索器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ayush1997/visualize_ML"&gt;visualize_ML&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可视化机械学习相关过程的 Py 包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gabdube/python-vulkan-triangle"&gt;python-vulkan-triangle&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Standalone python program that draws a triangle using vulkan on Windows and Linux&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="vulkan-triangle" src="https://github.com/gabdube/python-vulkan-triangle/raw/master/images/ubuntu.png" /&gt;&lt;/p&gt;
&lt;p&gt;这货的生成
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/traversc/getPokeStats"&gt;getPokeStats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get exact IVs for Pokemon Go&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sashaperigo/Trump-Tweets"&gt;Trump-Tweets&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Donald Trump's entire Twitter feed and the script used to scrape it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yantisj/minigraphdb"&gt;minigraphdb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 3 实现的内存极简向量图数据库&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="sample-graph" src="https://github.com/yantisj/minigraphdb/raw/master/sample-graph.png" /&gt;&lt;/p&gt;
&lt;p&gt;手绘原理图最赛高!!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160805 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160804 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 83</title><link href="http://weekly.pychina.org/importpython/importpython-83.html" rel="alternate"></link><published>2016-07-29T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-07-29:importpython/importpython-83.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/83/"&gt;Import Python Weekly Newsletter - Issue No 83&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Bv25Dwe84g0"&gt;Raymond Hettinger - 并发的思考 (Pycon RU 2016)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Walk through two examples of threading and multiprocessing to illustrate rules and best practices for taking advantage of concurrency. Documentation and code from the presentation is here - https://dl.dropboxusercontent.com/u/3967849/pyru/_build/html/index.html&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;俄国PyCon!&lt;/p&gt;
&lt;p&gt;&lt;img alt="thistall" src="https://dl.dropboxusercontent.com/u/3967849/pyru/_build/html/_images/thistall.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://slott-softwarearchitect.blogspot.com/2016/07/another-python-to-rescue-story-creating.html"&gt;又一个 Python 来搞掂的故事 ~ 用类定义构建 DSL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We didn’t invent a new DSL, we merely adapted Python’s existing syntax to our needs. A simple class structure and a metaclass definition gave us everything we needed to build the configuration parameter files we needed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dataquest.io/blog/apartment-finding-slackbot"&gt;用 Python 构建 slackbot 从而帮助自己找到 SF 的公寓&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;bot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scrapes listings from Craigslist. Filter out listings that don’t match our criteria. Post the listings to Slack, a team chat tool, so we can discuss and rate them. Wrap the whole process into a persistent loop and deploy it to a server (so it would run continuously). Built by Vik Paruchuri - https://twitter.com/vikparuchuri&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实还是对 Craigslist 进行搜索,只是控制界面变成了 Slack;&lt;/p&gt;
&lt;p&gt;嗯哼?! 为了上班不被人发现在刷房源?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.machinalis.com/blog/a-day-with-mypy-part-1/"&gt;每天 mypy. 第三部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mypy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Earlier this year PEP-484 was accepted, the typing module was added to Python 3.5, and mypy moved into the umbrella of official python projects. Since it was a visible topic at the last Pycon.us, I decided to get some experience with it and see how it feels to use it. I decided I’d take a working, mature, open-source project that wasn’t written by me and “convert” it to mypy. Note this is a 3 part series with a follow up. Have a look at the latest post here - http://www.machinalis.com/blog/writing-type-stubs-for-numpy/&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极, PEP-484 已被接受?!
意思是 py3 为了性能,已经放弃动态语言这一特性了!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangounderthehood.com/"&gt;登记开始:  Django Under the Hood 2016 !&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Based on the videos I have watched this is a must Go ( if you can that's ) Django Conference.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://emptysqua.re/blog/talk-python-episode-on-writing/"&gt;A. Jesse Jiryu Davis 对话 "撰写一个优秀的编程 Blog"&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Michael Kennedy ( guy behind the TalkPython Podcast ) and I talked about writing about programming. What kind of writing is most valuable, how do you choose a topic, improve your writing, find an audience, and find the time to write? Listen to the podcast on the Talk Python To Me site.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://worthwhile.com/blog/2016/07/11/django-page-load-speed/"&gt;Django 页面加速速度&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django and Python tips and tricks on how to improve website page load times by optimizing images.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.yhat.com/posts/words2map.html"&gt;words2map: 用 word2vec, t-SNE 以及 HDBSCAN 构建的推荐框架来加强 overlap.ai&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At overlap.ai we’re building artificial intelligence to unite people through their overlapping passions, and here we introduce a framework we call words2map for considering what our users love, like these personal passions of ours. Github repo - https://github.com/overlap-ai/words2map&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个推荐服务的框架
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://goo.gl/m3HS3g"&gt;用 Python 进行 Pizza 计数&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm a full time nerd, even when I'm ordering pizza online I can't stop myself from investigating how the websites I'm ordering from work. My latest investigation was Dominoes where I found a neat way to count the number of orders that they process throughout the day. This post is supposed to highlight potential dangers when exposing integer ID's, and how they can allow someone motivated (or sad) enough to track data you might not want to share. Simple Python Code to find it out has been shared.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对电商的又一个私人研究实践...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.dreisbach.us/blog/building-dashboards-with-django-and-d3/"&gt;用 Django 和 D3 构建仪表盘 — dreisbach.us&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, Django Rest Framework, d3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My workplace recently collaborated with several police departments to build a dashboard showing 911 (also known as Call for Service) data, allowing users to drill down into that data. When I started on the project, there was a prototype written in dc.js, a JavaScript framework for building dynamic dashboards with all the data on the frontend, built around records from Tampa, FL. I needed to take this and make it capable of handling much more data -- millions of records. I took on the task of building this using Django and D3. Along the way, I found a set of tools that worked for me.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/6r5nR2o7lIg/"&gt;当周 PyDev 之星 : Nicholas Tollervey&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week we welcome Nicholas Tollervey (@ntoll) as our PyDev of the Week. He is the author of the Python in Education booklet and the co-author of Learning jQuery Deferreds: Taming Callback Hell with Deferreds and Promises. He was one of the co-founders of the London Python Code Dojo. You should check out his website to see what he’s up to. Let’s spend some time learning more about our fellow Pythonista!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;伦敦 Python Code Dojo, 代码道场!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.djangocurrent.com/2016/07/uwsgi-basic-django-setup_74.html"&gt;基本 Django 的 uWSGI 配置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are two basic examples of almost the same uWSGI configuration to run a Django project; one is configured via an ini configuration file and the other is configured via a command line argument. This does not represent a production-ready example, but can be used as a starting point for the configuration. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.pycon.kr/2016apac/"&gt;PyCon APAC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.my/"&gt;PyCon MY 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pyunconf.de/"&gt;Python Unconference 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pycon.jp/2016/"&gt;PyCon JP 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pl.pycon.org/2016/"&gt;PyCon PL 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conferences.oreilly.com/oscon/open-source-eu-2016"&gt;OSCON Europe 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/python/devguide"&gt;devguide&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;51 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发 Python 指南,
针对 CPython 的核心进入,
是以 &lt;code&gt;the devguide&lt;/code&gt; 为标志的知名 核心开发人员 制作的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/asyncio-doc/asyncio-doc"&gt;asyncio-doc&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Asyncio 官方文档. 
教授 py3.5 的 async 和 await, 
来替代以往的 @asyncio.coroutine 以及 yield .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/trishume/LastSecondSlides"&gt;LastSecondSlides&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用谷歌语音到文本API
生成演示幻灯片为你代言！&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;外文不好的同学的福音了,
意味着可以用中文幻灯到全球任何一个国家用当地语言自动演讲了?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/loics2/sorta"&gt;sorta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;帮助你对文件进行排序&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160731 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160731 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 82</title><link href="http://weekly.pychina.org/importpython/importpython-82.html" rel="alternate"></link><published>2016-07-22T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-07-22:importpython/importpython-82.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/82/"&gt;Import Python Weekly Newsletter - Issue No 82&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.monkeylearn.com/machine-learning-1m-hotel-reviews-finds-interesting-insights/"&gt;对100万酒店进行机械学习后有趣的发现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On this tutorial we learned how to scrape millions of reviews, analyze them with pre-trained classifiers within MonkeyLearn, indexed the results with Elasticsearch and visualize them using Kibana. Machine learning makes sense when you want to analyze big volumes of data in a cost effective way. The code repository is here - https://github.com/monkeylearn/hotel-review-analysis&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以 tripadvisor 为数据源! 也就是说这世界上部分信息早已经开放了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/07/19/python-201-an-intro-to-mock/"&gt;Mike Driscoll: Python 进阶: 介绍 mock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The unittest module now includes a mock submodule as of Python 3.3. It will allow you to replace portions of the system that you are testing with mock objects as well as make assertions about how they were used. A mock object is used for simulating system resources that aren’t available in your test environment. In other words, you will find times when you want to test some part of your code in isolation from the rest of it or you will need to test some code in isolation from outside services.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;除非实在难以架构, 否则尽可能使用真实测试对象吧
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ellisonbg/altair"&gt;Altair: 声明式 Python 统计可视化库, 基于 Vega-Lite&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pep8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Altair is a declarative statistical visualization library for Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 Pandas 的数据表
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.allaboutweb.biz/best-practices-in-django-development/"&gt;又7个 Django Web 开发应知应会&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Set up Persistent Database Connections, Turn Cached Loading on, Store the Sessions in Cache, Keep the Application and Libraries Separate, Store All Templates in One Place, Install HTML5 Boilerplate, Monitor and Control Processes using Supervisor.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;随着 Django 的高速发展, 这类最佳实践将是永无止境的
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/jul/19/dsf-code-conduct-committee-releases-transparent-do/"&gt;DSF 发布开发行为守则&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today we're proud to open source the documentation that describes how the Django Code of Conduct committee enforces our Code of Conduct. This documentation covers the structure of Code of Conduct committee membership, the process of handling Code of Conduct violations, our decision making process, record keeping, and transparency.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4stbtb/why_are_some_functions_in_python_spelled_with/"&gt;为毛 Python 中有些行为函式就是不用下刬线? 比如: setdefault, makedirs, isinstance?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;discussion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I always wondered that. Here is a reddit discussion on the same.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为作者当初睡着了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.benjamintd.com/blog/spynet/"&gt;如何用Python 写一个能写 Python 的 AI&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;AI&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post is about creating a machine that writes its own code. More or less. Introducing GlaDoS Skynet Spynet. More specifically, we are going to train a character level Long Short Term Memory neural network to write code itself by feeding it Python source code. The training will run on a GPU instance on EC2, using Theano and Lasagne. If some of the words here sound obscure to you, I will do my best to explain what is happening.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说, 这就是 西乔 的 beta cat 的构建方法
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.restsecured.xyz/writing-an-api-with-flask-restful-part-1-61b0e26e0e5b#.1kmhfmkeo"&gt;用 Flask-RESTful 写个 API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article will go over the details of how to create a RESTful API with Flask and Flask-RESTful. In Part 1 we will go over the API basics and how to implement a simple API. In Part 2 we will expand into advanced use cases powered by Flask-RESTful. All code that will be show is readily available on this repository.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;虽然 Flask 比 Django 轻便很多倍,但是,依然...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLGB9meziqbzpRP7mVyihOihNzm_J2Kx9I&amp;amp;app=desktop"&gt;SciPy 2016 视频已经放&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Running Python Apps in the Browser by Almar Klein was a pretty interesting talk for me. See what interest you. Youtube channel.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如何在 浏览器 中运行  Py 应用!?这个视频值得关注.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://goo.gl/RlFfvx"&gt;如何构建自制 Django Middleware&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In a nutshell, a Middleware is a regular Python class that hooks into Django’s request/response life cycle. Those classes holds pieces of code that are processed upon every request/response your Django application handles.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/07/20/an-intro-to-coverage-py/"&gt;Mike Driscoll: 介绍 coverage.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;coverage&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coverage.py is a 3rd party tool for Python that is used for measuring your code coverage. It was originally created by Ned Batchelder. The term “coverage” in programming circles is typically used to describe the effectiveness of your tests and how much of your code is actually covered by tests. You can use coverage.py with Python 2.6 up to the current version of Python 3 as well as with PyPy.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;虽然没收入官方内建库, 但 coverage.py 已经是事实上最常用的覆盖测试模块
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/drk4/website_example"&gt;Django 的 Ajax 网站教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial we'll see a trivial example of how to do a ajax website with django. Good for students looking to learn the basics of Django/Ajax and see how it works.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@gitter/best-gitter-channels-python-django-41a0a0b1aee6#.9r2hh96vn"&gt;订阅 Gitter 上 Python &amp;amp; Django 频道吧.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gitter is like slack for developers. They have active Python, Django channels. Have a look.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.quantinsti.com/blog/introduction-zipline-python/"&gt;介绍 Zipline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python has emerged as one of the most popular language for programmers in financial trading, due to its ease of availability, user-friendliness and presence of sufficient scientific libraries like Pandas, NumPy, PyAlgoTrade, Pybacktest and more. Zipline is a Python library for trading applications that powers the Quantopian service mentioned above. It is an event-driven system that supports both backtesting and live-trading. In this article we will learn how to install Zipline and then how to implement Moving Average Crossover strategy and calculate P&amp;amp;L, Portfolio value etc.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可能是最好的股票交易管理平台
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pycon.kr/2016apac/"&gt;PyCon APAC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.euroscipy.org/2016"&gt;EuroScipy 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.my/"&gt;PyCon MY 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pyunconf.de/"&gt;Python Unconference 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mchristopher/PokemonGo-DesktopMap"&gt;PokemonGo-DesktopMap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;204 Stars, 36 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Electron App around PokemonGo-Map&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AHAAAAAAA/PokemonGo-Map"&gt;PokemonGo-Map&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;128 Stars, 55 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Live visualization of all the pokemon in your area&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MagicStack/asyncpg"&gt;asyncpg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;69 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python/asyncio 完成, 很快的 PostgreSQL Database 客户端库 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CENSUS/choronzon"&gt;choronzon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;46 Stars, 16 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An evolutionary knowledge-based fuzzer&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没看明白是作什么的, 但是,看起来很高级, 
又一个 AI 相关的开发库.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/duduainankai/zhihu-terminal"&gt;zhihu-terminal&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;42 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;zhihu-terminal using python2.7.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;'''...更重要的是以后在实验开着命令行就不会被老板和同学发现我是在刷知乎了哦。。'''
无法同意更多!&lt;/p&gt;
&lt;p&gt;&lt;img alt="TimeLine" src="https://github.com/duduainankai/zhihu-terminal/raw/master/img/TimeLine.png" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/springload/awesome-wagtail"&gt;awesome-wagtail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A curated list of awesome packages, articles, and other cool resources from the Wagtail community.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Wagtail 就是 Django 实现的 wordpress...不过, 生态还早...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nagracks/reddit_get_top_images"&gt;reddit_get_top_images&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get top images from any subreddit&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aio-libs/aiosmtpd"&gt;aiosmtpd&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;asyncio 基础上对标准库 smtpd.py 的替代&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rhiever/delft"&gt;delft&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用遗传程序自动优化深度学习管道&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160722 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160722 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 81</title><link href="http://weekly.pychina.org/importpython/importpython-81.html" rel="alternate"></link><published>2016-07-15T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-07-15:importpython/importpython-81.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/81/"&gt;Import Python Weekly Newsletter - Issue No 81&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/blogs/developer/preview-the-python-serverless-microframework-for-aws/"&gt;AWS 无服务微框架 Python 版本预览&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Serverless computing is one of the most talked-about subjects among AWS customers. The AWS serverless offerings, AWS Lambda and Amazon API Gateway, make it possible for developers to create and run API applications with built-in, virtually unlimited scalability without managing any servers. Today the AWS Developer Tools team is excited to announce the preview of the Python Serverless Microframework for AWS. You can read Martin Fowler talking about the benefits of Serverless architecture http://martinfowler.com/articles/serverless.html#benefits&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Google 推出了 firebase, AWS 当然要加强 Lambda 的概念.
果断给出了更加易用的 &lt;code&gt;无服务微框架&lt;/code&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyPyStatusBlog/~3/hEARFKZvdTQ/reverse-debugging-for-python.html"&gt;Python 的逆向调试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pypy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The PyPy team is pleased to give you "RevPDB", a reverse-debugger similar to rr but for Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PyPy 团队赛高
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codeexperiments.quora.com/Facebook-chat-bot-aka-joke-bot-with-django-tutorial"&gt;Facebook 笑话机械人的 django 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;chatbots&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have decided to try to develop a chat bot which does only one thing. Send a random joke like the below one without an image irrespective of what the user types&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2016/07/book-review-two-scoops-of-django-best.html"&gt;书评: “探挖两勺 Django: Django 1.8 的最佳实践”&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The book can be used as a reference of best practices and a cover-to-cover guide to best practices. I’ve done both and found it to be enjoyable, accessible, and educational when read cover-to-cover and a valuable reference when setting up a new Django project or doing general Django development. It covers a huge range of material.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/blog/post/spectrum-standalone-logging-server-python-product-review"&gt;再推 Spectrum - 独立日志服务器. Review&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spectrum is a standalone logging server plus log viewer with filtering capabilities. It scales to multiple logging streams with endpoint being a file residing on filesystem, REST API endpoint, Syslog, UDPStream, WebSocketStream.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scotch.io/tutorials/build-your-first-python-and-django-application"&gt;构建第一个 Django 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Decent tutorial to get people started with Python and Django.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5968"&gt;用 Docker 构建异步 Py3 无服务应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;serverless&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will show you a simple way to build a “serverless” application and test it via Docker. When I refer to “serverless” I’m referring to the idea that the application is a short lived app, does its job, stops – just like AWS Lambda. I will create two applications each in their own project folders: serverless-app and serverless-web The serverless-app piece is the actual “serverless” piece of this, the web app will run as long as we want. I just gave them similar names to make it easier to keep the projects named closely but different enough to know what does what.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;AWS 配套软文, 好在入华了, 可用,只是北京节点不一定有.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/djangobot/djangobot"&gt;djangobot: 通过 Channels 桥接 Slack 和 Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;bot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Djangobot is a bridge between Slack and a Channels-enabled Django app. Specifically, it is a protocol server that produces and consumes messages for channels-based apps. It is built atop autobahn and twisted.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kozikow.com/2016/07/10/visualizing-relationships-between-python-packages-2/"&gt;可视化 Python 包间关系&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pypi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I extracted co-occurence of top 3500 python packages in github repos using the the github data on BigQuery. I implemented the visualization force layout in d3 via the velocity verlet integration. I also clustered the graph using algorithms from python-igraph and updated it to http://graphistry.com/.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Why not 类型小工程,将 github 中能抓到的 3500 个 Py 包的关系绘制了出来!&lt;/p&gt;
&lt;p&gt;&lt;img alt="graphistry1" src="https://kozikow.files.wordpress.com/2016/07/graphistry1.png?w=1140" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.brian.jp/python/png/2016/07/07/file-fun-with-pyhon.html"&gt;用 Py 在 PNG 文件中当众隐藏有效数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;How could I store files online, in plain sight, for free. Because who doesn’t like a good ‘ol game of hide and seek. But with files. On the internet. Hide files in plain sight. Allow them to be distributed via free public channels. E.g Twitter, Reddit, imgur. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;公开的图床一样可以走秘密数据;&lt;/p&gt;
&lt;p&gt;代码在: &lt;a href="https://gist.github.com/briandeheus/9df32136c756227df4bfbff580a1aadd"&gt;Don't be a punk, punk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;居然能不影响 MD5 !
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://2016.pygotham.org/"&gt;PyGotham 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pycon.kr/2016apac/"&gt;PyCon APAC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.euroscipy.org/2016"&gt;EuroScipy 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.my/"&gt;PyCon MY 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lebinh/aq"&gt;aq&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;34 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Query AWS resources with SQL. aq allows you to query your AWS resources (EC2 instances, S3 buckets, etc.) with plain SQL.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 SQL 来查询 AWS 的自有资源
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alex/csv-sql"&gt;csv-sql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Query your CSV files with SQL&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 SQL 来查询 CSV 的数据...&lt;/p&gt;
&lt;p&gt;嗯嗯嗯,世界上真的有 SQL 依赖人群,的确, 当年只有SQL 是普通人也在用的开发语言了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cjeon/sokChoGo"&gt;sokChoGo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Travel the pokemon world in your comfy bed, with your keyboards, not on your legs.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;足不出户用 CLI 来探索口袋世界,而不是脚,&lt;/p&gt;
&lt;p&gt;宅御族必须品.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joshua-d-miller/macOSLAPS"&gt;macOSLAPS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A python script that will change a local adminsitrator password to a random generated password. Similar behavior to LAPS for Windows&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 LDAP 管理和生成随机口令, 从 win 迁移来,
对 1Password 的本地仿制?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Mila432/Pokemon_Go_API"&gt;Pokemon_Go_API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pokémon GO API in Python&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用蠎来抓老鼠 &lt;code&gt;天经地义&lt;/code&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thcipriani/stdgif"&gt;stdgif&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Standard output for gifs. Dumps gifs to stdout or creates shell scripts that can be sourced from a .bashrc or other shell initialization file.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个 CLI 上的 gif 放映工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wooparadog/pstack"&gt;pstack&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tool to dump python thread and greenlet stacks. pstack is to python as jstack is to java! It's a debug tool to print python threads or greenlet stacks.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 py 的线程导出给 JAVA 来分析.
借用用其它语言生态链又一实例
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Yinzo/PostMail"&gt;PostMail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple mail server which can let you send a email only sending a POST request&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将邮发形式统一为 HTTP 的 POST
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;~ 无责任推荐&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160715 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160715 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 80</title><link href="http://weekly.pychina.org/importpython/importpython-80.html" rel="alternate"></link><published>2016-07-08T23:23:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-07-08:importpython/importpython-80.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/80/"&gt;Import Python Weekly Newsletter - Issue No 80&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://goo.gl/EsgvEK"&gt;Spectrum 使用 - Python 构建的独立日志服务. Review on Import Python Blog.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;importpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Spectrum is to logging what sqlite3 is to databases. It’s a standalone logging server plus log viewer with filtering capabilities. It scales to multiple logging streams with endpoint being a file residing on filesystem, REST API endpoint, Syslog, UDPStream, WebSocketStream. This blogpost shows how to use spectrum and wraps up with pros and cons. Have a read.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;能接入当前所有主要日志后端的独立服务,
内置过滤器.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangoweekly.com/newsletter/"&gt;Django 开发者快讯 - Djangoweekly.com Launched.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Djangoweekly.com is a weekly newsletter dedicated to Django. The first issue is already out. Have a look.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.kevmod.com/2016/07/why-is-python-slow/"&gt;Python 为毛慢 ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you missed it, Marius recently wrote a post on the Pyston blog about our baseline JIT tier. Our baseline JIT sits between our interpreter tier and our LLVM JIT tier, providing better speed than the interpreter tier but lower startup overhead than the LLVM tier. There's been some discussion over on Hacker News, and the discussion turned to a commonly mentioned question: if LuaJIT can have a fast interpreter, why can't we use their ideas and make Python fast? This is related to a number of other questions, such as "why can't Python be as fast as JavaScript or Lua", or "why don't you just run Python on a preexisting VM such as the JVM or the CLR". Since these questions are pretty common I thought I'd try to write a blog post about it.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一篇从 JIT 环境角度来分析的文章.
问题是, 明白了, 并不能改变 Py 平台的现状,,,
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://hackercollider.com/articles/2016/07/05/create-your-own-shell-in-python-part-1/"&gt;在 Py 中构建自己的 Shell&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m curious to know how a shell (like bash, csh, etc.) works internally. So, I implemented one called yosh (Your Own SHell) in Python to answer my own curiosity. The concept I explain in this article can be applied to other languages as well. Note from curator - After graduating from college I interviewed with Yahoo and they had asked me to create one during interview. It's a good exercise for any computer science student/professional.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;yosh 作者的心灵自述, 推荐所有计算机专业的学生都来造一把好轮子.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mongoframes.com/getting-started"&gt;MongoFrames - 轻快而不招摇的 MongoDB ODM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A five minute walk-through of MongoFrames' key features and how to start using them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.datadependence.com/2016/05/scientific-python-pandas/"&gt;科学 Python 介绍– Pandas&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pandas allows us to deal with data in a way that us humans can understand it; with labelled columns and indexes. It allows us to effortlessly import data from files such as csvs, allows us to quickly apply complex transformations and filters to our data and much more. It’s absolutely brilliant. This is the third post in this series on scientific Python and take a look at Pandas. Don’t forget to check out the other posts if you haven’t yet!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数据科学领域 Python 是一重镇, Pandas 则是其中无法忽视的不将
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5923"&gt;教程: 用 Docker Swarm 复用部署 Py3 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today, I want to show you how to use Docker Swarm and then deploy a simple Python Falcon REST app. Although I won’t be using dockerrun or the serverless capabilities I think you might be surprised how easy it is to deploy (replicated) Python applications (actually any sort of application: Java, Go, etc.) with Docker Swarm.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个具体的 Falcon REST 应用, 通过 Docker 如何快速部署运行,
其实相同的操作可以用以部署 JAVA/Go/... 等等任何语言应用系统
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TpgiFIGXcT4"&gt;Allen Downey - 让 贝叶斯 统计更加简单 - PyCon 2016&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;statistics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An introduction to Bayesian statistics using Python. Bayesian statistics are usually presented mathematically, but many of the ideas are easier to understand computationally. People who know Python can get started quickly and use Bayesian analysis to solve real problems. This tutorial is based on material and case studies from Think Bayes (O’Reilly Media).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joshnewlan/say_what"&gt;Say What ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;api&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This script listens to meetings I'm supposed to be paying attention to and pings me on hipchat when my name is mentioned. It sends me a transcript of what was said in the minute before my name was mentioned and some time after. It also plays an audio file out loud 15 seconds after my name was mentioned which is a recording of me saying, "Sorry, I didn't realize my mic was on mute there." Uses IBM's Speech to Text Watson API for the audio-to-text.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 IBM Watson 的接口,完成的 hipchat 插件,
可以监听所有关于自己的语音事件. 
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pendulum.eustace.io/"&gt;Pendulum - Python datetimes made easy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Handle datetimes, timedeltas and timezones in a more natural fashion. Pendulum provides a cleaner and more easy to use API while still relying on the standard library. So it's still datetime but better.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个人性化的时间/日期处理模块
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.europython.eu/post/147035184592"&gt;EuroPython 2016: 最后一天可以获得定款门票了&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will be switching to the on-desk rates for tickets tomorrow, so today is your last chance to get tickets at the regular rate, which is about 30% less than the on-desk rate.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/146887124043"&gt;The Python/Django 社区超赞! ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Experience with the Djangogirls community. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://edmontonpy.com/"&gt;Edmonton Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2016.pygotham.org/"&gt;PyGotham 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pycon.kr/2016apac/"&gt;PyCon APAC 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.euroscipy.org/2016"&gt;EuroScipy 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/daleroberts/tv"&gt;tv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quickly view (satellite) imagery directly in your terminal&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个 why not 的作品&lt;/p&gt;
&lt;p&gt;&lt;img alt="tv" src="https://github.com/daleroberts/tv/raw/master/docs/anim.gif" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JeeveshN/Face-Extractor"&gt;Face-Extractor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从任意图片中提取面孔的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Extractor" src="https://github.com/JeeveshN/Face-Extractor/raw/master/extras/1.png?raw=True" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/supasate/yosh"&gt;yosh&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;yosh - Your Own Shell in Python. Repository of the article shared in Worthy Read section.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nihit/TensorFlow101"&gt;TensorFlow101&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;介绍 TensorFlow. 
作者在 Stanford 学习 cs224d 过程中的总结.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thekindlyone/calvinball_pythonanywhere"&gt;CalvinBall&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;calvin and hobbes 专用搜索引擎,
给文字, 找到对应的漫画.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bfirsh/django-docker-cloud-template"&gt;django-docker-cloud-template&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a template for Django applications that can be run with Docker Compose locally and Docker Cloud in production.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个 Docker 部署模板, 针对 Django 的.
)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160711 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160708 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 79</title><link href="http://weekly.pychina.org/importpython/importpython-79.html" rel="alternate"></link><published>2016-07-02T23:23:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-07-02:importpython/importpython-79.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/79/"&gt;Import Python Weekly Newsletter - Issue No 79&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@raiderrobert/top-10-new-django-projects-started-in-2016-f87ef043c8bb#.cpy33qnyi"&gt;2016 年启动的10大最美 Django 项目&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the cornerstones of Django is that there’s a solid core that others can extend and share their extensions. So it’s good to celebrate the best of those. Here’s my list derived from this query on Github for projects started this year. Not sure about top but useful projects that one can use in personal or work projects/products. Have a look.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;各种轮子,,,
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/nixcraft/status/747426735524765696"&gt;Python 编程幽默&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;humour&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conversation with Tech Support.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;关乎技术支持
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/eshares-engineering/supercharging-django-productivity-at-eshares-8dbf9042825e#.hgd932ie5"&gt;Django 生产力增压&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These design patterns also solidified a mentality within our team that there is an internal standard of handling models and views. We can extend our base classes to tackle any business requirement. Our codebase is constantly evolving, both in new features and how we model the world. Django has proven to be a valuable tool that lets us aim big and iterate often. Some might call this an anti-pattern nevertheless a novel approach.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;模式与反模式
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://tests4geeks.com/tutorials/distribute-tasks-python-celery-rabbitmq/"&gt;结合 Python Celery + RabbitMQ 分发任务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, we are going to have an introduction to basic concepts of Celery with RabbitMQ and then set up Celery for a small demo project. At the end of this tutorial, you will be able to setup a Celery web console monitoring your tasks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/gG7TKc85zjo/"&gt;Python 为孩纸的项目 - 书评&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it :) ... Go read the review.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;亮点都在评论树中了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/1zUlkKxW27U/python-2712-released.html"&gt;Python 2.7.12 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python 2.7.x series has a new bugfix release, Python 2.7.12, available for download.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2016/06/30/djangorecipe-test-coverage.html"&gt;Djangorecipe: 简单的测试覆盖率报告&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code coverage reports help you see which parts of your code are still untested. Yes, it doesn’t say anything about the quality of your tests, but at the least it tells you which parts of your code have absolute the worst kind of tests: those that are absent :-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/146535801439"&gt;你的 Django 故事: 遇见 Anna Makarudze&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anna Makarudze lives in Harare, Zimbabwe, and was born and raised in Masvingo. She is an an ICT consultant as well as a Python/Django developer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/anymail/django-anymail"&gt;anymail/django-anymail: Django的邮件后端以及 webhooks 接入 Mailgun, Postmark, SendGrid, SparkPost 等等&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anymail integrates several transactional email service providers (ESPs) into Django, with a consistent API that lets you use ESP-added features without locking your code to a particular ESP. It currently fully supports Mailgun, Postmark, SendGrid, and SparkPost, and has limited support for Mandrill.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marcobonzanini.com/2015/03/02/mining-twitter-data-with-python-part-1/"&gt;专注挖掘Twitter数据的七大系列文章&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;twitter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note these articles were published a year back, currently trending on social media. Curating it because it's pretty interesting and fun.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://savvastjortjoglou.com/nfl-draft.html"&gt;用 Python 探索 NFL Draft&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sport analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After reading a couple of posts by Michael Lopez about the NFL draft, I decided to recreate some of his analysis using Python (instead of R). Post being - https://statsbylopez.com/2016/05/02/the-nfl-draft-where-we-stand-in-2016/&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;没用 R ;-)
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.rinatussenov.com/text-analysis-markov-chains-and-bible-quotes-generator-fd0fa09ced20#.n4au9mwdi"&gt;文本分析，马尔可夫链和圣经引用生成器.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Text analysis and patterns are very interesting topics for me. I think every author has their own unique, distinctive pattern. The way they build sentences and phrases, not only in terms of tone, but the subconscious choices of word pairings and sequences. How their sentences begin and end, and what they put in the middle; they leave their cerebral fingerprints on paper, blog posts or even FaceBook status updates. I think it is a very achievable, having enough base data, to identify the author Note - It's a trivial example but a good starting point for someone looking to learn/explore Markov chains.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="1*FdfCyedcjQ50qu9yurIIoQ.gif（GIF 图像，556x242 像素）" src="https://d262ilb51hltx0.cloudfront.net/max/800/1*FdfCyedcjQ50qu9yurIIoQ.gif" /&gt;
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://foxpython.tumblr.com/"&gt;Fox Valley Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/STL-Python/"&gt;STL Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyddf.de/"&gt;Python Meeting Düsseldorf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sypy.org/"&gt;Sydney Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2016.pygotham.org/"&gt;PyGotham 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AmadeusITGroup/GraphDash"&gt;GraphDash&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;95 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A web-based dashboard built on graphs and their metadata.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="example" src="https://github.com/AmadeusITGroup/GraphDash/raw/master/docs/example.gif" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ssimunic/Daily-Reddit-Wallpaper"&gt;Daily-Reddit-Wallpaper&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;77 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Change your wallpaper to most upvoted image of the day on /r/wallpapers or from any other subreddit (on startup).&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将壁纸变成信息中心, 
可惜, 桌面几乎全天不见天儿的哪!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/revsys/pipup"&gt;pipup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个 pip 的 requirements.txt 转生器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/baranbartu/pyscheduler"&gt;pyscheduler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create scheduled tasks at runtime easily (Django, Flask, Bottle etc.)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以修饰器的形式, 在任意行为上追加日程控制
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/halilkaya/markovy"&gt;markovy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python module for Markov Chain algorithm&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/papaya-mobile/kiwi"&gt;kiwi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple DynamoDB ORM for python, based on boto2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nagracks/git_log_viewer"&gt;git_log_viewer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git log viewer&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;16070? &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160702 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 78</title><link href="http://weekly.pychina.org/importpython/importpython-78.html" rel="alternate"></link><published>2016-06-24T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-06-24:importpython/importpython-78.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/78/"&gt;Import Python Weekly Newsletter - Issue No 78&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://engineering.instagram.com/web-service-efficiency-at-instagram-with-python-4976d078e366#.fezx5eyeu"&gt;Instagram 的 Python 服务效能提高&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Instagram currently features the world’s largest deployment of the Django web framework, which is written entirely in Python. We initially chose to use Python because of its reputation for simplicity and practicality, which aligns well with our philosophy of “do the simple thing first.” But simplicity can come with a tradeoff: efficiency. Instagram has doubled in size over the last two years and recently crossed 500 million users&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instagram 已经是世界上最大的 Django 功能集群,
用户应该也是最多 5亿了..
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cosmologicon/pywat"&gt;Python wats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A "wat" is what I call a snippet of code that demonstrates a counterintuitive edge case of a programming language. (The name comes from this excellent talk by Gary Bernhardt.) If you're not familiar with the language, you might conclude that it's poorly designed when you see a wat. Often, more context about the language design will make the wat seem reasonable, or at least justified.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;通过一段反直觉的代码, 来展示 Py 的伟大
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://coconut-lang.org/"&gt;Coconut - 简单,优雅的 Pythonic 函式编程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coconut is a simple, elegant, Pythonic functional programming language that compiles to Python. Since all valid Python is valid Coconut, joining the over 30,000 people already using Coconut will only extend and enhance what you're already capable of in Python.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自从世界从了 冯氏 体系后,
函式派从来就没有停止过也怀念.
又一个在 Py 身体上进行的 Lisp 还魂术...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5892"&gt;在 Statsd 和 Consul 支持下从  Docker 中运行 Py3 的 REST 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today, I’m going to go over setting up a very simple way to spin up a Python Falcon REST service that reports to Statsd as well as registering as a service with Consul along with setting up health checks. I’ve borrowed some ideas/code from several places and changed as needed.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 Falcon 的 Docker 运行时镜像的建立实战
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Damnever/pigar"&gt;Pigar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;梦幻般的工具,
可以用来生成你的 Python 项目, 以及其它.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;终于出现 pip 的二级工具了,
配合 pyenv 应该真正笑醒...
等等! 还是国人作品, 点赞!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/jun/21/django-110-beta-1-released/"&gt;Django 1.10 beta 1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As part of the Django 1.10 release process, today we've released Django 1.10 beta 1, a preview/testing package that represents the second stage in the 1.10 release cycle and an opportunity for you to try out the changes coming in Django 1.10.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4oh4vr/i_missed_pycon_what_is_your_favorite_talk_that/"&gt;错过了 pycon, 最应该看什么来补 ? - Reddit Discussion&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Discussion on Reddit on Pycon talk recommendations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2016/06/22/high-availability-django-cheap.html"&gt;最合算的高可用 Django 部署 - Roland van Laar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Roland build an educational website that needed to be high available on a tight budget. Nice write up on how to achieve it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.python.org/moin/BeginnersGuide/NonProgrammers"&gt;BeginnersGuide/NonProgrammers - Python Wiki&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;resource&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you've never programmed before, the tutorials on this page are recommended for you; they don't assume that you have previous experience. If you have programming experience, also check out the BeginnersGuide/Programmers page. This section is hosted on the Python website and is well curated and maintained.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bafflednerd.com/learn-python-online"&gt;80 Python 课程的 策划名单&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;resource&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn Python online – A curated list of courses on Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-apache-and-mod_wsgi-on-ubuntu-16-04"&gt;如何在 Ubuntu 16.04 的 Apache 用 mod_wsgi 发布 Django 服务? - DigitalOcean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;installation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this guide, we will demonstrate how to install and configure Django in a Python virtual environment. We'll then set up Apache in front of our application so that it can handle client requests directly before passing requests that require application logic to the Django app. We will do this using the mod_wsgi Apache module that can communicate with Django over the WSGI interface specification.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;虽然 OC 的文档一向非常的有爱,
但是, mod_wsgi 上古神器,还有必要用嘛!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/qoNKxbAWJXQ/an-interview-with-pythonista-katharine-jarmul"&gt;行者访问 Katharine Jarmul&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This interview with Pythonista Katharine Jarmul focuses on data work. A couple of events provide context. Katharine is presenting a talk titled "How Machine Learning Changed Sentiment Analysis, or I Hate You, Computer ????" at this year's Sentiment Analysis Symposium, July 12, 2016 in New York, following which she's offering a class, Learn Big Data Wrangling with Python, July 13-14, also in New York.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是时候通过 Py 的大数据分析来自行评估家庭爱情残余量了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/luke14free/144239699da237588291497dd547654e"&gt;Python 中的简单类型检验&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Code snippet to check types. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/pydelhi/"&gt;PyDelhi Meetup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.meetup.com/iepyladies/"&gt;Inland Empire Pyladies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://groups.google.com/group/python-sheffield"&gt;Monthly Python user group in Sheffield, United&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pystada.github.io/"&gt;PyStaDa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://foxpython.tumblr.com/"&gt;Fox Valley Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyddf.de/"&gt;Python Meeting Düsseldorf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sypy.org/"&gt;Sydney Python User Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Chillee/coursera-dl-all"&gt;coursera-dl-all&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;111 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extend the Coursera Downloader by downloading quizzes and assignments (and hopefully forum posts soon!). Uses coursera-dl in the process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gautamkrishnar/socli"&gt;socli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;86 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是的我们爱 桟溢, 也爱 CLI,所以结合了两者是必须的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xoreaxeaxeax/reductio"&gt;reductio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;80 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;r.a.a. reduces all C programs to identical instruction streams; that is, the instructions executed by the processor become the same for every program. The demonstration uses C and x86, but is not unique to either of these - the concept is easily adapted to most languages and architectures.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个用 Py 来对 C 代码进行动手的工具
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wookayin/TensorflowKR-2016-talk-debugging"&gt;TensorflowKR-2016-talk-debugging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;55 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slides and supplementary codes for my talk 'Debugging Tips on Tensorflow' (2016) https://wookayin.github.io/TensorflowKR-2016-talk-debugging&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;每次分享后,发布幻灯以及配套的代码最性感了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sunary/ank"&gt;ank&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的微服务, 
针对 队列/流媒体/REST-API, 以及计划任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PacktPublishing/Effective-Python-Penetration-Testing"&gt;Effective-Python-Penetration-Testing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is the code repository for [Effective Python Penetration Testing], published by Packt Publishing. It contains all the required files to run the code. This book is ideal for those who are comfortable with Python or a similar language and need no help with basic programming concepts but want to understand the basics of penetration testing and the problems pentesters face.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;渗透测试图书的配套代码库.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/owocki/emojibot"&gt;emojibot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a bot that adds custom emojis your slack team; &lt;em&gt;inline in Slack&lt;/em&gt;. No more putzing around in your web browser.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/csu/gh-streak"&gt;gh-streak&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Python library, CLI, and API for fetching GitHub contribution streaks.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dilippuri/PAN-Card-OCR"&gt;PAN-Card-OCR&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专门从  PAN Card 图片获得信息的模块,
对印度开发者应该非常有用&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.v2ex.com/t/225127"&gt;一个 Python requirements 工具 -- pigar - V2EX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;就是这期的 pigar 国产的 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/pycon2016"&gt;Pycon US 2016 视频和演讲幻灯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;必须首先复习: &lt;a href="https://www.youtube.com/watch?v=YgtL4S7Hrwo"&gt;Guido van Rossum - Python Language - PyCon 2016&lt;/a&gt; 明确 Py2 何时正式放弃...&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160701 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 重新部署 pyenv 本地环境发布&lt;/li&gt;
&lt;li&gt;160629 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160624 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 77</title><link href="http://weekly.pychina.org/importpython/importpython-77.html" rel="alternate"></link><published>2016-06-16T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-06-16:importpython/importpython-77.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/77/"&gt;Import Python Weekly Newsletter - Issue No 77&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://softwaremaking.quora.com/Get-Django-Ready"&gt;让 Django 准备好&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This Blog is meant for the learners who wish to get an understanding of the framework "Django" and familiarize with web development concepts . Good entry level tutorial for Django.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从理解 Django 框架开始的最好的入门教程...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/pub/e/3712"&gt;Webcast: 和 Python 一起作数学题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;webcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Join Amit Saha, author of Doing Math with Python, in this hands-on webcast, and learn how to use Python to solve calculus problems, make sense of numbers with graphs and statistics, do symbolic math with SymPy, and perform basic machine-learning tasks.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Doing Math with Python&lt;/code&gt; 是新书,
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
介绍了一系列数学相关的库,最后也引向了机器学习的命题.
=======
介绍了一系列数学相关的库,最后也引向了机械学习的命题.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;05621f3c407be189efd9a1a68f20a4d5923eea9d
)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://godjango.com/122-custom-python-social-auth-pipeline/"&gt;用户 python-social-auth Pipeline&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes when you authenticate with a social service you need to do custom "stuff" in your code base beyond creating a user object. Learn how to get started simply adding a custom function do the python-social-auth pipeline.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如何在现有代码之外,立即引入 SNS 认证?
当然,基于 Django 的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/FlsYRyysTBg/"&gt;Python: 如何构建异常记录装饰符&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The other day, I decided I wanted to create a decorator to catch exceptions and log them. I found a rather complex example on Github that I used for some ideas on how to approach this task and came up with the following.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个源自真实生产实践的折腾成果.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pybay.com/"&gt;PyBay - 旧金山 mini-PyCon 将在八月下旬举行&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyBay is an intimate version of the highly successful PyCon conference. It's a weekend gathering for the Bay Area's Python community to learn, share, and hack together while having fun and taking care of our minds and bodies.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PyCon 形式也开始衍生了! 迷你蠎会, 比大会要轻松自在的技术交流形式,
这个可以有...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/sDMmUdw_7RU/python-352rc1-and-python-345rc1-are-now.html"&gt;Python 3.5.2rc1 和 Python 3.4.5rc1 已发布&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.5.2rc1 and Python 3.4.5rc1 are now available for download.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.blindspotsecurity.com/2016/06/advisory-http-header-injection-in.html"&gt;Python 咨询: 用 urllib 进行 HTTP 头注射&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python's built-in URL library ("urllib2" in 2.x and "urllib" in 3.x) is vulnerable to protocol stream injection attacks (a.k.a. "smuggling" attacks) via the http scheme. If an attacker could convince a Python application using this library to fetch an arbitrary URL, or fetch a resource from a malicious web server, then these injections could allow for a great deal of access to certain internal services.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;头部注射攻击的分析,白帽蠎客 的必备知识点.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/145866509118"&gt;你的 Django 故事: 遇见 Kelsey Gilmore-Innis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kelsey Gilmore-Innis is the CTO of Sexual Health Innovations, and a transplanted San Franciscan living in Portland. Somehow, despite growing up in San Francisco during the thick of the first tech boom and bust, I never was exposed to code until adulthood. I took a programming for non-majors course a few years into college on a bit of a whim and, besides enjoying the subject matter, saw a path to a career. It took a little more time, but I ended up graduating with a CS degree.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2016/06/14/pycon-2016-recap/"&gt;PyCon 2016 回顾&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pyconus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon, beyond being the best community event for Python developers, is also an event that we happily began thinking about eleven months ago. Almost as soon as PyCon 2015 ended, we had the good fortune of planning the look and feel of PyCon 2016 with organizer extraordinaires Ewa Jodlowska, Diana Clark, and new this year, Brandon Rhodes. Our team has loved working with the organizers on the PyCon websites for the past three years now. They’re great people who always prioritize the needs of PyCon attendees, whether that’s babysitting services or a smooth PyCon web experience.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PyCon 每年的准备期越来越长,对组织者的要求也越来越高.
这是组织对 PyCon16US 的组织者复盘...反正各种秀恩爱了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/06/pyconjp-2016-call-for-proposals.html"&gt;PyCon JP 2016 议题召集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon JP is a conference where Python users, or people interested in Python, gather to learn from each other and meet other members of the community. We will hold PyCon Japan on September 20-24 this year in Tokyo and are looking for talk proposals.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/p-XiPlUWyxQ/psf-success.html"&gt;PSF 的成功增长&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In honor of the 2016-2017 board of director's first board meeting today, I wanted to share the PSF's growing success with the public! &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PSF 的年度报告,年中?!
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.sg/"&gt;PyCon Singapore 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.euroscipy.org/2016"&gt;EuroScipy 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nbrochu/requests-respectful"&gt;requests-respectful&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;172 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;极简的请求包装器,
可并行,并能限定在任意速率.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/carpedm20/deep-rl-tensorflow"&gt;deep-rl-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;144 Stars, 18 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 TensorFlow 实现的深度学习&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karandesai-96/yolog"&gt;yolog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;97 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;美化你的 Git Logs !&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="yolog" src="https://raw.githubusercontent.com/karandesai-96/yolog/master/docs/yolog-powered.png" /&gt;&lt;/p&gt;
&lt;p&gt;简直让小屏程序猿无法活哪...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/protream/tickets"&gt;tickets&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;92 Stars, 27 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 CLI 进行票务操作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/a1studmuffin/SpaceshipGenerator"&gt;SpaceshipGenerator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;89 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Blender 中运行的脚本,能生成 3D 宇宙飞船&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/drcursor/flickrup"&gt;flickrup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;69 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flickr 自动上传.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/humangeo/preflyt"&gt;preflyt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轻量应用环境查验器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pydanny/contributors"&gt;contributors&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令行工具,用来获得一个或是更多 github 仓库的贡献者.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为 github 的开放分支机制,
导致一个项目的贡献分散在各个仓库中...
DVCS 的连带伤害...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prachi1210/starbot"&gt;starbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;给任何仓库生成 N 个星标&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;github 刷榜器!?
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/pycon2016"&gt;Pycon US 2016 视频和演讲幻灯&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;必须首先复习: &lt;a href="https://www.youtube.com/watch?v=YgtL4S7Hrwo"&gt;Guido van Rossum - Python Language - PyCon 2016&lt;/a&gt; 明确 Py2 何时正式放弃...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CtripCloud/docker-make"&gt;CtripCloud/docker-make: a tool for managing docker image builds &amp;amp; push from a git repo.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动生成 yaml 配置文档, 来人性化解决 docker 镜像生成时的 tag 以及编译顺序依赖等问题
一个刚刚发布的实用工具.国货,但文档是 E文的,为这儿先点个赞!&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160616 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160616 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 76</title><link href="http://weekly.pychina.org/importpython/importpython-76.html" rel="alternate"></link><published>2016-06-10T16:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-06-10:importpython/importpython-76.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/76/"&gt;Import Python Weekly Newsletter - Issue No 76&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.infoworld.com/article/3078633/application-development/qa-guido-van-rossum-on-pythons-next-steps.html"&gt;Q&amp;amp;A: Guido van Rossum 有关 Python 未来策划&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 创始者/仁义的暴君 Guido 老爹的采访&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老爹每年的公开分享, 都是 Python 的宏观规划,必须理解,在理解中理解...&lt;/p&gt;
&lt;p&gt;简单的说:加紧 mobile 和 browser 的浸入,只是当前没有明确的好招;
PyPy 很可用了, 但是 Py3 的目标也包含性能的;Py 的整体生态的是好的,没问题的.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/8tGh175aO6E/"&gt;Python: 正则表达式介绍&lt;/a&gt;  &lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regular expressions are basically a tiny language all their own that you can use inside of Python and many other programming languages. You will often hear regular expressions referred to as “regex”, “regexp” or just “RE”. Some languages, such as Perl and Ruby, actually support regular expression syntax directly in the language itself. Python only supports them via a library that you need to import. The primary use for regular expressions is matching strings. You create the string matching rules using a regular expression and then you apply it to a string to see if there are any matches.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;正则表达式几乎是一种独立语言了, 在 Py 中当然也能简洁的用起来.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blogs.msdn.microsoft.com/pythonengineering/2016/06/07/lambda-exp-unleashed/"&gt;Python lambda 表达式的爆发&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;functional programming&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lambda expressions provide a way to pass functionality into a function. Sadly, Python puts two annoying restrictions on lambda expressions. First, lambdas can only contain an expression, not statements. Second, lambdas can’t be serialized to disk. This blog shows how we can work around these restrictions and unleash the full power of lambdas.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如何在 Py 中真正引爆 Lambada 的能量?
用 dill 来替代 pickle!
ANACONDA 内置实用序列化模块...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://moderndata.plot.ly/point-clustering-in-python/"&gt;在 Python 折腾点集群&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By definition, clustering is a task of grouping a set of objects in a way that objects in a particular group are more similar to each other rather than the objects in the other groups. It has multiple applications in almost every field. You can even segment your customers into different groups based on their purchase patterns. This is a Python script demonstrating the basic clustering algorithm, “k-means”. Also, it will plot the clusters using Plotly API. It uses sample data points for now, but you can easily feed in your dataset.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;正热门的数据科学又一实例,"k-means" 完成聚类, 用 Plotly 接口进行可视化
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tdIIJuPh3SI"&gt;Flask 规模化&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are a flask user. You would greatly benefit by this pretty exhaustive (information wise) talk. Do you think that because Flask is a micro-framework, it must only be good for small, toy-like web applications? Well, not at all! In this tutorial I am going to show you a few patterns and best practices that can take your Flask application to the next level.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;作为微型框架 flask 也可以提供大规模服务!&lt;/p&gt;
&lt;p&gt;PS: 同理 Bottle 也是可以的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/heroku/~3/2kbyblVkDlA/see_python_see_python_go_go_python_go"&gt;见 Python, 遇 Python Go, Go Python Go&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today we're going to make a Python library that is actually the Go webserver, for which we can write handlers in Python. It makes Python servers really fast, and—more importantly—it’s a bit fun and experimental. Andrey Petrov is the author of urllib3. If you have coded in Go you would realize this is pretty cool idea.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;人生苦短, Python 当歌
!-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mattscodecave.com/posts/simple-python-framework-from-scratch.html"&gt;从头创建 Python 框架 - Code walkthrough&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web framework
You're curious how web frameworks work because you want to become a better web developer. This post aims to describe what I learned by writing a small server and framework by explaining the design and implementation process step by step, function by function.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;源发自 &lt;img alt="the-clean-architecture" src="https://blog.8thlight.com/assets/posts/2012-08-13-the-clean-architecture/CleanArchitecture-81565aba46f035911a5018e77a0f2d4e.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;的框架实例...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@raiderrobert/5-django-packages-that-get-too-little-love-d55232c28640#.dcmzfkann"&gt;5个值得爱上的 Django 包 — Medium&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lots of packages get a lot of love like django-rest-framework and wagtail, and rightfully so, they’re awesome! But I wanted to give some less well know ones some love.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://in.pycon.org/cfp/2016/proposals/"&gt;Pycon India CFP 来也&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon India, the premier conference in India on using and developing the Python programming language is conducted annually by the Python developer community. It attracts the best Python programmers across the country and abroad. Submit your proposal here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tohyongcheng.github.io/python/2016/06/07/persisting-a-cache-in-python-to-disk.html"&gt;用装饰器维护 Python 硬盘缓存&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Caches are important in helping to solve time complexity issues, and ensure that we don’t run a time-consuming program twice. You never know when your scripts can just stop abruptly, and then you lose all the information in your cache, and you have you run everything all over again.In order to counter this, saving your cache to a disk is something that can be very helpful in that it allows state to be saved to disk, and be retrieved from it anytime as long as its there.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;保卫我们的运行时数据,用 修饰符, 随时导出到硬盘!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/"&gt;用 Python 从头实现神经网络&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this post we will implement a simple 3-layer neural network from scratch. We won’t derive all the math that’s required, but I will try to give an intuitive explanation of what we are doing. I will also point to resources for you read up on the details. Here I’m assuming that you are familiar with basic Calculus and Machine Learning concepts, e.g. you know what classification and regularization is. But even if you’re not familiar with any of the above this post could still turn out to be interesting ;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://williamedwardscoder.tumblr.com/post/145304200648"&gt;用纸和 Python 实现的 Enigma 机&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;crytography&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It turns out my kids have been sending each other secret messages, enciphered with a substitution cipher of their own invention! They only let me see the secret key when I agreed to help them mix up a very complicated recipe for invisible ink.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;二战中最强大的德军密码机,现在用纸+脚本就可以完美复刻.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-resources.pythonblogs.com/304_python_resources/archive/1548_python_class_attributes.html"&gt;Python 类属性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I had a programming interview recently, a phone-screen in which we used a collaborative text editor. I was asked to implement a certain API, and chose to do so in Python. Abstracting away the problem statement, let’s say I needed a class whose instances stored some data and some other_data. As it turns out, we were both wrong. The real answer lay in understanding the distinction between class and instance attributes. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;是的,虽然是 Python 的基础功能,但是,很少人用对味儿.
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.geopython.net/"&gt;GeoPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pycon.sg/"&gt;PyCon Singapore 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.euroscipy.org/2016"&gt;EuroScipy 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pyunconf.de/"&gt;Python Unconference 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://kiwi.pycon.org/"&gt;Kiwi PyCon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://za.pycon.org/"&gt;PyCon ZA 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/saiprashanths/dl-docker"&gt;dl-docker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;403 Stars, 33 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一键安装 &lt;code&gt;深度学习&lt;/code&gt; 相关的所有东西,
用 Docker.
(含 TensorFlow, Theano, Torch, Caffe, etc.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xeneta/LeadQualifier"&gt;LeadQualifier&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;114 Stars, 21 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Xeneta 销售数据进行机械学习分析的相关脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gooli/affirm"&gt;affirm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;24 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对断言的增强, 
每当运行出错时, 当然希望能输出更多参考信息.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;希望能进入内建模块的又一个人性化实用模块
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sloria/flask-konch"&gt;flask-konch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Flask CLI 的增强&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bharadwaj-raju/TextSuggest"&gt;TextSuggest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;17 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 GUI 上自动完成单词的简单工具, Linux 的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kingname/MarkdownPicPicker"&gt;MarkdownPicPicker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持 md 写作时的图片发布工具 ,
自动从剪贴板中提取图像上传云端,
并组织成 md 图片字串复制回 剪贴板.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jianxunio/yascrapy"&gt;yascrapy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 golang 和 Python 联合完成的高性能分布式 爬虫.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;名字叫 &lt;code&gt;又一个XXX&lt;/code&gt; 的很容易成功, 
嘦解决初代模块的痛点问题.&lt;/p&gt;
&lt;p&gt;Fuubo 团队作品!
是的, 为一个 HR 服务提供后台数据用.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karan/libfib"&gt;libfib&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尝试直接从 Py 运行 go 代码.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再次检验了 CPython 的 C 语言接口能力而已
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kbrgl/scroller"&gt;scroller&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能在终端绘制动画文字效果的工具.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="scroller" src="https://github.com/kbrgl/scroller/raw/master/scroller.gif" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/buckyroberts/Python-Design-Patterns"&gt;Python-Design-Patterns&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python Design Patterns. Here is an overview of several different design patterns and concepts in Python.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;贡献一个刚刚好的python仓库吧：https://github.com/shell909090/webserver&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;从头开始写一个 web服务器，python代码刚刚好1046行
由著名的 7牛 CSO 分享
引发自 &lt;a href="https://book.douban.com/subject/26807339/"&gt;爱上Python&lt;/a&gt;&lt;code&gt;~送书换头像&lt;/code&gt; 活动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160613 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160610 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 75</title><link href="http://weekly.pychina.org/importpython/importpython-75.html" rel="alternate"></link><published>2016-06-04T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-06-04:importpython/importpython-75.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/75/"&gt;Import Python Weekly Newsletter - Issue No 75&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, &lt;strong&gt;来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCwTD5zJbsQGJN75MwbykYNw/videos"&gt;Pycon US 2016 视频和演讲幻灯&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon, video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon is the largest annual gathering for the community using and developing the open-source Python programming language. PyCon is organised by the Python community for the community. Currently underway in Portland and will conclude on 5th June. The talks from the conference are getting uploaded as we speak. You should glance the videos by title and see which one you like. Speaker's slides will be published here soon https://speakerdeck.com/pycon2016&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PyCon15US 的相关兴趣议题的视频30+G 在硬盘中还没有看过一遍,
又来一大波...虽然发布在不存在的网站中...感觉世界总是在持续的碾压着自己...&lt;/p&gt;
&lt;p&gt;必须首先复习: &lt;a href="https://www.youtube.com/watch?v=YgtL4S7Hrwo"&gt;Guido van Rossum - Python Language - PyCon 2016&lt;/a&gt; 明确 Py2 何时正式放弃...&lt;/p&gt;
&lt;p&gt;应该去大学, 碾压一下当下心态良好的小白们了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nedbatchelder.com/text/machete.html"&gt;PyCon 2016: Machete-mode 调试 来自 Ned Batchelder - coverage.py 创造者&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon, debugging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python is simpler and more fluid than other languages. Sometimes you want this fluidity, but usually you don't. Dynamic typing means that names may have values you don't expect. Where other languages offer access control over the internals of objects, Python lets you examine and change anything. All of your program's data is on the heap, and can be used throughout your program. All of this flexibility can be a powerful tool, but sometimes, things go wrong. The flexibility comes back to bite us, and causes problems that we have to debug.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Python 是如此简洁又灵活,以致有时爱到不行,有时又恨到不行,
特别是在调试时...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%23pycon2016"&gt;关注 Pycon 议题在 twitter #pycon2016&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pyconus, twitter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Takes you to the top tweets on pycon.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nerd.kelseyinnis.com/blog/2016/05/30/python-django-security-on-a-shoestring-resources/"&gt;Python &amp;amp; Django 安全在 Shoestring: 资源&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, security&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Callisto is an online reporting system. It's written in Django and provides a more empowering, transparent, and confidential reporting experience for survivors. It's absolutely essential that we keep our users' data secure Thankfully, although the infosec community can sometimes be intimidating, any one of us can learn how to build secure sites using Python. This talk covers the essential concepts behind securing your users' data and offer examples of how we applied them to Callisto.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;大圣们曰过:"计算机系统无非两种结局,简单的看不出明显的错误,复杂的没有明显的错误;-("
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DsUxuz_Rt8g"&gt;Oneliner-izer:约束编码练习 by Chelsea Voss&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pyconus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Curator's note - In every office you have that one guy who tries to accomplish a whole lot of things on one line. This is a talk that you want to show them. Ideas and implementation behind Oneliner-izer, a ""compiler"" which can convert most Python 2 programs into one line of code. As we discuss how to construct each language feature within this unorthodox constraint, we'll explore the boundaries of what Python permits and encounter some gems of functional programming – lambda calculus, continuations, and the Y combinator.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;又一基础轮子的再造练习,涉及一些函式语言的精华:
演算/连续/Y组合...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PyCQA/pycodestyle"&gt;pep8 再次重命名为 "pycodestyle"&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code quality&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple Python style checker in one Python file. Good bye PEP8 :)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;名字起的好,项目活的了,
创始胡子长,项目久的了....&lt;/p&gt;
&lt;p&gt;对于 &lt;code&gt;EPE8&lt;/code&gt; 这么经典的名称的放弃,也是老拥趸弃疗的开始...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/AvJLWvHLnvM/"&gt;Python 201: importlib 简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 将 importlib 作为内建模块包含在发行版本中,
目的就是提供导入语句 (函式 &lt;code&gt;__import__()&lt;/code&gt;).
从而赋予程序猿在导入过程中使用自定对象的能力,
(类似  importer)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;米国大学课程编号,&lt;code&gt;101&lt;/code&gt;一般都是入门课,&lt;code&gt;201&lt;/code&gt;就是中级课了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580667-json-formatted-logging/"&gt;JSON 格式日志 (Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have created a package that outputs JSON formatted lines to a log file. It can make use of the standard logging parameters and/or take custom input. The use of JSON in the log file allows for easy filtering and processing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-59-pillow-with-alex-clark/"&gt;Episode 59 - Pillow 和 Alex Clark&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you need to work with images the Pillow is the library to use. The Python Image Libary (PIL) has long been the gold standard for resizing, analyzing, and processing pictures in Python. Pillow is the modern fork that is bringing the PIL into the future so that we can all continue to use it moving forward. This week I spoke with Alex Clark about what first led him to fork the project and his experience maintaining it, including the migration to Python 3.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对 PIL 的历史接替人: &lt;code&gt;Pillow&lt;/code&gt; 的创造者的访谈..
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/DougHellmann/~3/BhbFMmVgHNk/"&gt;"通过实例学习 Python 2 标准库" #PyCon2016 期间超5折优惠!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Python Standard Library by Example (for Python 2) is the eBook deal of the day during PyCon 2016. Visit theinformit.com/deals to order your DRM-free copy (PDF, ePub, andMobi) for $19.99 today! *Offer ends 11:59 PST June 1, 2016&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/community/jobs/"&gt;Django Community Jobs Section | Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;job market&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In case you weren't aware, django website has a job section.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fund.django-rest-framework.org/topics/funding/"&gt;Django REST 框架已经接受追加基金&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you use REST framework commercially we strongly encourage you to invest in its continued development by signing up for a paid plan. Tom Christie the creator of DRF is looking to raise funds and work on it full time. Support him.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jessicamckellar/status/737299461563502595"&gt;Jessica mckellar 为 PyCon 带来更多的程序媛.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pyconus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As many of you know we have been featuring interview of django girls from a long time now. It's very important to encourage and aid women participation. Python and Django community is at the forefront. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所谓&lt;code&gt;一妞扺十汉&lt;/code&gt; 海外技术社区也异常认同,
特别是 DjangoGirls 如此成功,以至 老爹也主动开始站台推荐了...
)&lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.geopython.net/"&gt;GeoPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pycon.sg/"&gt;PyCon Singapore 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.euroscipy.org/2016"&gt;EuroScipy 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fiunchinho/dockerize-me"&gt;dockerize-me&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;104 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼, 对 Dockerize 的 Dockerfile 自动已经优化的工具,
即, Dockerfile 也同 SQL/C++ 类似,
已经高速积累起来了很多固化的优化模式...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eset/ipyida"&gt;ipyida&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;85 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IPython console integration for IDA Pro&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/buckyroberts/Parsley"&gt;Parsley&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;55 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理 HTML 为 JSON.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼?! 目测浏览器应该可以内置 JSON-&amp;gt;HTML 的渲染器了吧...
这样 &lt;code&gt;SEOP&lt;/code&gt; ~ 面向搜索引擎的页面,应该可以有了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/johannestaas/cursed"&gt;cursed&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;49 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simplified curses interface with concurrency, for quick and sane curses apps. Allows easy creation of windows and menus. Code for each window runs concurrently.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;CLI 应用难以消亡...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tristandeleu/ntm-one-shot"&gt;ntm-one-shot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;37 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One-shot Learning with Memory-Augmented Neural Networks&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fluentpython/notebooks"&gt;notebooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jupyter Notebooks with Fluent Python examples.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ohjuny/monopoly_simulator"&gt;monopoly_simulator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A few days ago, I was playing Monopoly with my friends and found myself often asking the question, "What are the odds of me going there?". So I decided to find out.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用数据科学的思路来玩 &lt;code&gt;大富豪&lt;/code&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YPlan/ansible-python-lambda"&gt;ansible-python-lambda&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example deployment of AWS Lambda functions with Ansible&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;希望不是 AWS 的软文,去年使用 lambda 时,那叫个酸爽...
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.pyston.org/2016/05/25/pyston-0-5-released/"&gt;Pyston 0.5 released | The Pyston Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎订阅 &lt;a href="https://groups.google.com/forum/#!forum/python-cn"&gt;python-cn(华蟒用户组,CPyUG 邮件列表) - Google 网上论坛&lt;/a&gt; 和 Pyston 开发者直接沟通,嗯哼 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://t.cn/RUieq1O"&gt;混乱的 Python Tyrant's Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://t.cn/RGxdl9n"&gt;Python 模块在全局作用域里应避免任何产生副作用的语句 Tyrant's Technology&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;~ 嗯哼, 继续来自自荐的 &lt;a href="http://acgtyrant.com/"&gt;御宅暴君&lt;/a&gt; 同学 ;-)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160604 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160604 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 74</title><link href="http://weekly.pychina.org/importpython/importpython-74.html" rel="alternate"></link><published>2016-05-28T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-05-28:importpython/importpython-74.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/74/"&gt;Import Python Weekly Newsletter - Issue No 74&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, 来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/pycharm/python-developers-survey-2016/"&gt;Python 程序猿 2016年调查: 结果&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们想知道当今 Python 程序猿的真实生存状态,
在调查了 1000+ Python 程序猿后,得到一些有趣的结论,
在此分享大家;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说:独自折腾的少,作为主语言和 JS 总是基在一起,
今年 Py 2 和 3 将战平,
框架中的 IPython/Falsk/numpy等科学计算框架, 在高速追上 Django;
Debug 工具依然没有性能评估工具来的认同多,,,,&lt;/p&gt;
&lt;p&gt;嗯哼,当然调查是 JETBRAINS 发起的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SykoTheKiD/DockerDjangoRest"&gt;GitHub - SykoTheKiD/DockerDjangoRest: 有Travis CI 支持的 Django REST 接口 Docker镜像&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Docker setup for a Django REST API with Travis CI support. Includes Python 2.X and Python 3.X, PostgreSQL, Unicorn ,Nginx, Travis CI Integration.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-serve-django-applications-with-uwsgi-and-nginx-on-ubuntu-16-04"&gt;如何在 Ubuntu 16.04 上用 uWSGI+NGINX 发布 Django 应用服务? | DigitalOcean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this guide, we will demonstrate how to install and configure some components on Ubuntu 16.04 to support and serve Django applications. We will configure the uWSGI application container server to interface with our applications. We will then set up Nginx to reverse proxy to uWSGI, giving us access to its security and performance features to serve our apps.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;所有 VIP 厂商中 DigitalOcean 的文章总是清晰又专注,
而且可以直接使用.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://albertoconnor.ca/blog/2016/May/18/django-channels-background-tasks"&gt;Django Channels 作为后台任务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This little tutorial is what you need to add a background task processor to Django using channels. Our task for this example will just be outputting "Hello, Channels!", but you could image running a subprocess on some data or sending an email.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/_d96V9TaUXE/"&gt;Python 101: 基准代码简介&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main idea behind benchmarking or profiling is to figure out how fast your code executes and where the bottlenecks are. The main reason to do this sort of thing is for optimization. You will run into situations where you need your code to run faster because your business needs have changed. When this happens, you will need to figure out what parts of your code are slowing it down. This article will cover how to profile your code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/zUML26iWcHM/jxmlease-python-xml-conversion-data-structures"&gt;用 jxmlease 在 XML 和自然 Python 数据结构间转换&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python, xml&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One of the important realizations we made was that Python objects also have metadata. So, we can represent the XML data as normal Python objects, but store the XML metadata as metadata in the resulting Python objects. Using jxmlease, you can easily convert XML data to Python data structures. Here, the 'xml' variable contains the XML document shown in Example 2 (below). You convert it to Python data objects and print it.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼?! XML,现在还有什么场景一定要 XML 的!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5858"&gt;Python 插件管理器: Stevedore 和 Pike&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果折腾过 OpenStack, 那么一定不得不折腾插件管理器: stevedore;
现在介绍另一个值得折腾的: pike&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pyfound.blogspot.com/2016/05/brett-cannon-wins-frank-willison-award.html"&gt;Python 软件基金会新闻: Brett Cannon 赢得 Frank Willison Award&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This morning at OSCON, O'Reilly Media gave Brett Cannon the Frank Willison Memorial Award. The award recognises Cannon's contributions to CPython as a core developer and project manager for over a decade.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.kelproject.com/"&gt;Kel — 用Python 和 Go 构建的基于 Kubernetes 的开源 PaaS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kel™ is an open-source Platform as a Service (PaaS) from Eldarion® that makes it easy to manage web application deployment and hosting through the entire software lifecycle. Kel helps DevOps professionals manage their application infrastructure through a layer of tools and components that make Kubernetes accessible and easier to use. Kel builds on Eldarion's 7+ years experience running Gondor, one of the leading Python / Django PaaS solutions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.yhat.com/posts/traffic-fatalities-in-us.html"&gt;探索美国交通事故数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At a ChiPy event, Nick Bennett gave an excellent talk on traffic fatalities and how he attempts to visualize the publicly available data. The accompanying GitHub repo shows how he accessed and manipulated some of that data with Python tools and then used a couple of different web mapping services to visualize it. The talk prompted some informative comments from the audience and inspired me to further analyze the data myself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyMOTW/~3/knL3DA02yVI/"&gt;bisect — 用 Orderr 保持列表排序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The bisect module implements an algorithm for inserting elements into a list while maintaining the list in sorted order. &lt;/p&gt;
&lt;h2 id="_2"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.sg/"&gt;PyCon Singapore 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.geopython.net/"&gt;GeoPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://2016.pycon-au.org/"&gt;PyCon Australia 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pyohio.org/"&gt;PyOhio 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ep2016.europython.eu/"&gt;EuroPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Netflix/bless"&gt;bless&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;400 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能以 AWS Lambda 函式运行的 SSH 证书颁发服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joelgrus/fizz-buzz-tensorflow"&gt;fizz-buzz-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;285 Stars, 16 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fizz buzz in tensorflow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EricsonWillians/Open-Browser"&gt;Open-Browser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;89 Stars, 22 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开放/精简/高速的浏览器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="EricsonWillians" src="https://camo.githubusercontent.com/af1c6e66c88ab19b96ed6b76b2106b512d0c1011/687474703a2f2f7333332e706f7374696d672e6f72672f706838337931326f762f6f70656e62726f777365722e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;PyQt 作品...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thombashi/pytablewriter"&gt;pytablewriter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;37 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注生成各种格式表格的库,支持:
CSV/HTML/JavaScript/JSON/Markdown/Excel/Pandas/Python/reStructuredText&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;啊! 表格! 有多少项目因你而崩溃!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/amjd/HN-Saved-Links-Export"&gt;HN-Saved-Links-Export&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;36 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 &lt;a href="https://news.ycombinator.com/news"&gt;Hacker News&lt;/a&gt; 的链接储存为 JSON/CSV 格式数据&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.pyston.org/2016/05/25/pyston-0-5-released/"&gt;Pyston 0.5 released | The Pyston Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎订阅 &lt;a href="https://groups.google.com/forum/#!forum/python-cn"&gt;python-cn(华蟒用户组,CPyUG 邮件列表) - Google 网上论坛&lt;/a&gt; 和 Pyston 开发者直接沟通,嗯哼 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://t.cn/RUieq1O"&gt;混乱的 Python Tyrant's Technology&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://t.cn/RGxdl9n"&gt;Python 模块在全局作用域里应避免任何产生副作用的语句 Tyrant's Technology&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;~ 嗯哼, 继续来自自荐的 &lt;a href="http://acgtyrant.com/"&gt;御宅暴君&lt;/a&gt; 同学 ;-)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160529 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160528 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 73</title><link href="http://weekly.pychina.org/importpython/importpython-73.html" rel="alternate"></link><published>2016-05-19T22:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-05-19:importpython/importpython-73.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/73/"&gt;Import Python Weekly Newsletter - Issue No 73&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, 来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/Q917YZN0UrA/"&gt;Python 3: 加密介绍&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3, encryption&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Py 3 并没有增补更多加密相关的库,
本文专注第三方库: PyCrypto 和 cryptography,
展示如何进行加密以及对应的解密.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twilio.com/blog/2016/05/build-sms-slack-bot-python.html"&gt;如何用 Python 为 Slack 构建短信机械人&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;bot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bots can be a super useful bridge between Slack channels and external applications. Let’s code a simple Slack bot as a Python application that combines the Slack API with the Twilio SMS API so a user can send and receive Slack messages via SMS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.peterbe.com/plog/deco"&gt;并发修饰器 - Python 并发真的很容易&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;全新得趣的库 deco, 专门进行并发运行的修饰,
作者是 Alex Sherman 和 Peter Den Hartog,
都在 Wisconsin Madison 大学.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://caremad.io/2016/05/powering-pypi/"&gt;Python 包索引的能量&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pypi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;介绍 &lt;code&gt;PyPI&lt;/code&gt; 的真相.&lt;/p&gt;
&lt;p&gt;The Python Package Index, or as most call it “PyPI” is a central part of the ecosystem of Python. It serves as a central registry of names, helping to prevent collision between different projects as well as the default repository that most Python users go to when looking for software.For most, what powers this service is largely opaque to them — it’s (usually) there when they need it and who or what powers it is largely a mystery to them, but what and who really powers PyPI?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.restapibuilder.com/blog/deploying-your-django-api-in-one-docker-container-in-aws/"&gt;在 AWS 上部署 Django 接口为 Docker 容器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker is a wonderful technology revolutionazing how to run microservices. You may have some experience with it or may not. I will show in this short post how to run a Docker container in Amazon Web Services(EC2) with your whole API in it. This trick is only useful for APIs or django projects that doesn't need to scale and doesn't really have too much traffic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.pythonanywhere.com/134/"&gt;扩展创业项目达到 200万点击/月 - 访谈 railwayapi.com 创始人 Kaustubh&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PythonAnywhere is a Python development and hosting environment that displays in your web browser and runs on our servers. They're already set up with everything you need. It's easy to use, fast, and powerful. There's even a useful free plan. In this interview Kaustubh talks about his experience of using PythonAnywhere.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4j6g5g/facebook_trending_rss_feed_fetcher_w_python_35/"&gt;Facebook 趋势 RSS 抓取 (w/ Python 3.5)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速构建的 py3 脚本,
处理来者 RSS 的 PDF 列表,监察 facebook 有关突发新闻.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/in6nV8AcbMo/apache-spark-2-0--introduction-to-structured-streaming"&gt;Apache Spark 2.0: 结构化数据流介绍&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Michael Armbrust and Tathagata Das explain updates to Spark version 2.0, demonstrating how stream processing is now more accessible with Spark SQL and DataFrame APIs. Video. Code snippets in Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/smoqadam/python-tips"&gt;Python 贴士列表 :: 提升清单&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple code snippets, stuff we need in everyday coding. Worth a quick glance.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2016/05/13/1_micropython.html"&gt;Pygrunn: 微型 Python, Pythonic 的物联网 - Lars de Ridder&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(嗯哼,为了 RAM 平台,我们不能使用 CPython)
micropython is a project that wants to bring python to the world of microprocessors. Micropython is a lean and fast implementation of python 3 for microprocessors. It was funded in 2013 on kickstarter. Originally it only ran on a special “pyboard”, but it has now been ported to various other microprocessors. Why use micropython? Easy to learn, with powerful features. Native bitwise operations. Ideal for rapid prototyping. (You cannot use cpython, mainly due to RAM usage.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tbenthompson/cppimport"&gt;从 Python 直接加载 C++ 文件!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyone looking to speed up critical regions of their script should have a look.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://camo.githubusercontent.com/ee3229ce57687d4a804febe20140ab480efcbc72/68747470733a2f2f692e696d6775722e636f6d2f386d41586468752e676966"&gt;Python ASCII 动画生成器 : 也许有的人需要?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pretty cool decorator. Check out the gif screen-cast.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将CLI 的输出,折腾为 gif 动画片;
嗯哼,不够科学...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2016/05/13/4_pypy.html"&gt;Pygrunn: 理解 PyPy 并在生产中应用之 - Peter Odding/Bart Kroon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pypy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pypy is “the faster version of python”. There are actually quite a lot of python implementation. cpython is the main one. There are also JIT compilers. Pypy is one of them. It is by far the most mature. PyPy is a python implementation, compliant with 2.7.10 and 3.2.5. And it is fast!.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangofriendly.com/hosts/"&gt;Djangofriendly » Django 主机对比和资源&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Djangofriendly is a community resource for finding the friendliest Django hosting environments.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hkupty/asterix"&gt;Asterix - 完备的 python 初始化系统 &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Describe the initialization of your application and let asterix manage the startup for you. It will ensure that the correct dependencies are started in order, so you don't need any dirty hacks to have your initialization flow. Also, it allows you to build separate stacks for test/dev/production and even for web/batch applications, loading just what you need. &lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/517/python-gui-programming-cookbook/"&gt;Python GUI Programming Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over 80 object-oriented recipes to help you create mind-blowing GUIs in Python.&lt;/p&gt;
&lt;h2 id="_3"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pycon.sg/"&gt;PyCon Singapore 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.geopython.net/"&gt;GeoPython 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tw.pycon.org/2016/en-us/"&gt;PyConTW 2016 in Taiwan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pydata.org/berlin2016/"&gt;PyData Berlin 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/enginebai/Facebook-Message-Bot"&gt;Facebook-Message-Bot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;78 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask 开发的 facebook 消息平台&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lonetwin/expyre"&gt;expyre&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;50 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 &lt;code&gt;atd&lt;/code&gt; 的Python 包装,自动化删除 文件/目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/agermanidis/TranscriptBot"&gt;TranscriptBot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;47 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实时转录你的 Slack 消息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/onyxfish/leather"&gt;leather&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;35 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python charting for 80% of humans.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/samdmarshall/pyconfig"&gt;pyconfig&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以简洁的 DSL 来生成 xcconfig 文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ironSource/atom-python"&gt;atom-python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ironSource.atom SDK for Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/twinone/awesome-contributions"&gt;awesome-contributions&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AWESOME GitHub Contributions viewer!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dyslove123/2016_bop_semifinal"&gt;2016_bop_semifinal&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2016 bop senifinal python code&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kaydub00/AnsibleRest"&gt;AnsibleRest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收集 Ansible 的 RESTful 框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/iammrhelo/InstagramCrawler"&gt;InstagramCrawler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Selenium 的图片下载脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/titan-web/rate-limit"&gt;rate-limit&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Token bucket implementation for rate limiting (python recipe)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://litaotao.github.io/python-materials"&gt;Python 技巧总结 | Taotao's Zone&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;首次自我推荐 Py 原创好文章 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@tryolabs/top-10-python-libraries-of-2015-4dc95f0a0ead#.szjzsyff1"&gt;Top 10 Python libraries of 2015 — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jupyter ~ 神器之上的神器&lt;/p&gt;
&lt;p&gt;retrying ~ 重试小仙器&lt;/p&gt;
&lt;p&gt;aiohttp ~ 兼容 Py3 的更加简洁的 HTTP S/C&lt;/p&gt;
&lt;p&gt;plumbum ~ 跨平台的 AppleScript&lt;/p&gt;
&lt;p&gt;phonenumbers ~ 将 google libphonenumbers 人性化包装的电话检验库&lt;/p&gt;
&lt;p&gt;networkx ~ graphviz 之后,更加好用的可视化库&lt;/p&gt;
&lt;p&gt;influxdb ~ 时间序数据存储好物&lt;/p&gt;
&lt;p&gt;elasticsearch-dsl ~ 嗯哼, Pythonic 操作小语言&lt;/p&gt;
&lt;p&gt;keras ~ Theano 上的深度学习界面&lt;/p&gt;
&lt;p&gt;gensim ~ NLP 必用品&lt;/p&gt;
&lt;p&gt;以及: &lt;a href="https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/"&gt;20 Python libraries you can’t live without | Python Tips&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_5"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160524 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160524 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 72</title><link href="http://weekly.pychina.org/importpython/importpython-72.html" rel="alternate"></link><published>2016-05-13T22:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-05-13:importpython/importpython-72.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/72/"&gt;Import Python Weekly Newsletter - Issue No 72&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, 来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nedbatchelder.com//blog/201605/generator_comprehensions.html"&gt;生成器解析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python has a compact syntax for constructing a list with a loop and a condition, called a list comprehension: 
&lt;code&gt;my_list = [ f(x) for x in sequence if cond(x) ]&lt;/code&gt; 
. You can also build dictionaries with dictionary comprehensions, and sets with set comprehensions///&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kracekumar.com/post/144058400775"&gt;Asyncio 和 uvloop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上周看到了 uvloop 的简介, 号称比 Asyncio 快两倍以上,
不服来测! &lt;code&gt;嗯哼&lt;/code&gt; 基本属实 ;-)&lt;/p&gt;
&lt;p&gt;Today, I read an article about uvloop. I am aware of libuv and its behind nodejs. What caught me was “In fact, it is at least 2x faster than any other Python asynchronous framework.”. So I decided to give it a try with aiohttp. The test program was simple websocket code which receives a text message, doubles the content and echoes back. Here is the complete snippet with uvloop. I ran naive benchmark using thor and results favoured uvloop. uvloop was able to handle more connection on 8GB , non SSD Mac OSX . Asyncio was able to hold 154 connections and uvloop 243 connections with any socket errors .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/Python/comments/4hebys/cost_analysis_for_python_scripts_aws_ec2_vs_aws/"&gt;Python 成本分析脚本 - AWS EC2 vs AWS Lambda - reddit discussion (self.Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方号称 Lambda 比 EC2 性价比高...&lt;/p&gt;
&lt;p&gt;So I decided AWS Lambda had been on the field enough time to make an analysis by my own. Lambda comes with a few problems like only Python 2.7 (they will fix it in the future I guess), libraries, etc. Also I had read some blogs like Flynn's one. But skipping those problems I wanted to know... What about money ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://geoffboeing.com/2016/05/analyzing-lastfm-history/"&gt;用 python, pandas, matplotlib 下载/分析/可视化 10年份 last.fm 音乐收听历史   (代码在 github)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using Python, pandas, matplotlib, and leaflet, I downloaded my listening history from Last.fm’s API, analyzed and visualized the data, downloaded full artist details from the Musicbrainz API, then geocoded and mapped all the artists I’ve played. All of my code used to do this is available in this GitHub repo, and is easy to re-purpose for exploring your own Last.fm history. All you need is an API key.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;以及类似的分析 twitter/facebook/instagram ... SNS 海量数据的根源都是:
人家开放了接口!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/3sHnEEZ4psw/5-reasons-you-need-to-learn-to-write-python-decorators"&gt;应该学写 Python 装饰器的五大理由&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python decorators are so easy to use. Anyone who knows how to write a Python function can learn to use a decorator. But writing decorators is a whole different skill set. And it’s not trivial; you have to understand. closures, how to work with functions as first-class arguments, variable arguments, argument unpacking, even, some details of how Python loads its source code&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;bigger and bigger and bigger and bigger and bigger ...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.randalolson.com/2016/05/08/tpot-a-python-tool-for-automating-data-science/"&gt;TPOT: 自动化数据科学平台&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;赞助商&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this article, we’re going to go over three aspects of machine learning pipeline design that tend to be tedious but nonetheless important. After that, we’re going to step through a demo for a tool that intelligently automates the process of machine learning pipeline design, so we can spend our time working on the more interesting aspects of data science.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/Python/comments/4ix01q/how_to_get_a_python_job/"&gt;如何获得 Python 工作岗位? - Reddit Discussion&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Recently, I've been playing around with Python and found that I really enjoy the language. Now I am wondering how I should go about switching over to a Python job. I am tired of doing front-end web development, and am thinking that I would enjoy concentrating more on the back-end. However, the back-end Python jobs seem to require me being a data scientist. Also, it seems like most Python jobs are in QA automation or DevOps.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;汇同 &lt;code&gt;哪种语言/编辑最好&lt;/code&gt; 为三大月经贴...
其实,很简单...自个儿创造这个岗位!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://slott-softwarearchitect.blogspot.com/2016/05/why-python-whats-it-good-for-how-is-it.html"&gt;Why Python? What's it good for? How is it special?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Quick read justifying Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/xy7PfhjGfQI/installing-jupyter-notebook-extensions"&gt;安装 Jupyter Notebook Extensions&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jonathan Whitmore demonstrates how to install pivot tables and showcases the features of this extension by examining a dataset of restaurant scores.Pivot tables are one of the many ways to extend the capabilities of the Jupyter Notebook. In this training segment, learn how to quickly and effectively analyze, scope, and visualize data using pivot tables in Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;高级特性, 数据透视表的深化折腾...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davidmiller/pony-mode"&gt;davidmiller/pony-mode: Django mode for emacs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;emacs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pony-mode - Django mode for emacs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580660-using-ctypes-to-call-c-code-from-python/"&gt;用 ctypes 来从 Python 调用 C 代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This recipe shows basic usage of the ctypes module to call C code from Python code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.narenarya.in/right-way-django-authentication.html"&gt;给 Django 追加用户验证&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are building a new Django website from scratch, the first thing you implement is the User authentication. Here is a simple article showing you how to do it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tech.octopus.energy/2016/05/05/django-elb-health-checks.html"&gt;Django, ELB 健康检查和持续交付 | Octopus Energy Tech blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A robust means of deploying web applications with Amazon Web Services is to use an Elastic Load Balancer (ELB) to balance requests between an “Auto Scaling Group” (ASG) of EC2 instances. As well as horizontally scaling, this set-up allows automated canary (aka blue-green) deployments, where new application versions are deployed as a new ASG which replaces the existing EC2 instances with new; a so-called “immutable infrastructure” approach.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.djangopaths.com/why-did-i-choose-wagtail/"&gt;DjangoPaths - 为毛俺选择 Wagtail?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;cms&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在折腾了 Django-CMS 和 Mezzanin 之后,
还是理智的入了 Wagtail 教.&lt;/p&gt;
&lt;p&gt;My decision to delve into Wagtail only came after I attempted to use Django-CMS and Mezzanine. Their strengths seemed to lie in having a comprehensive ecosystem in place with pluggable e-commerce systems and more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/blog/python/deploying-a-django-app-and-postgresql-to-aws-elastic-beanstalk/"&gt;部署 Django + Python 3 + PostgreSQL 到 AWS Elastic Beanstalk - Real Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following is a soup to nuts walkthrough of how to set up and deploy a Django application, powered by Python 3, and PostgreSQL to Amazon Web Services (AWS) all while remaining sane.Elastic Beanstalk is a Platform As A Service (PaaS) that streamlines the setup, deployment, and maintenance of your app on Amazon AWS. It’s a managed service, coupling the server (EC2), database (RDS), and your static files (S3). You can quickly deploy and manage your application, which automatically scales as your site grows.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-56-onion-iot-with-lazar-and-zheng"&gt;Onion IoT 和 Lazar 以及 Zheng&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IoT 物联网时代来了, OpenWRT 是其中最具成功相的平台.&lt;/p&gt;
&lt;p&gt;One of the biggest new trends in technology is the Internet of Things and one of the driving forces is the wealth of new sensors and platforms that are being continually introduced. In this episode we spoke with the founder and head engineer of one such platform named Onion. The Omega board is a new hardware platform that runs OpenWRT and lets you configure it using a number of languages, not least of which is Python. &lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/517/python-gui-programming-cookbook/"&gt;Python GUI Programming Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over 80 object-oriented recipes to help you create mind-blowing GUIs in Python.&lt;/p&gt;
&lt;h2 id="_3"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://us.pycon.org/2016/"&gt;PyCon US 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pydata.org/berlin2016/"&gt;PyData Berlin 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conf.scipyla.org/scipyla2016/"&gt;SciPy Latin America&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conferences.oreilly.com/oscon/open-source-eu-2016"&gt;OSCON Europe 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pygrunn.org/"&gt;PyGrunn 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alanhamlett/pip-update-requirements"&gt;pip-update-requirements&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;150 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Update the packages in a requirements.txt file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AceLewis/my_first_calculator.py"&gt;my_first_calculator.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;59 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一个真实的故事引发的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/llSourcell/AI_Composer"&gt;AI_Composer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于机器学习的 AI 作曲&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BugScanTeam/hackhttp"&gt;hackhttp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;23 Stars, 16 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hackhttp 又一 HTTP library&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dsmurrell/autobazaar"&gt;autobazaar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 OpenBazaar 安装到云空间的工具.
帮时你 5$/月 就能在 Digital Ocean 上开始折腾在线商店,
安装过程 8~11 分钟.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gabe-k/md5-encryption"&gt;md5-encryption&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cryptographically bulletproof encryption algorithm based on the cutting edge MD5 hashing algorithm&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="md5-encryption" src="https://camo.githubusercontent.com/4d426bacf7c5ce573323002c277547bd9116205b/687474703a2f2f692e696d6775722e636f6d2f6447474438645a2e706e67" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/minimaxir/stylistic-word-clouds"&gt;stylistic-word-clouds&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文字云创建脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openai/gym-doom"&gt;gym-doom&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Doom environment for Gym&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jupyter/jupyter-widget-example"&gt;jupyter-widget-example&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example custom Jupyter widget&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;细思恐极, Jypyter 向着 web GUI 大步突进中,
我们可以期待未来跨平台 app 除了 react 后,又有新选择了?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fguillot/markdown-newsletter"&gt;markdown-newsletter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Markdown 发布新闻组&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RaminFP/SQLAlchemy_RestfulAPI"&gt;SQLAlchemy_RestfulAPI&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Integration SQLAlchemy ORM with Restframework API&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@tryolabs/top-10-python-libraries-of-2015-4dc95f0a0ead#.szjzsyff1"&gt;Top 10 Python libraries of 2015 — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jupyter ~ 神器之上的神器&lt;/p&gt;
&lt;p&gt;retrying ~ 重试小仙器&lt;/p&gt;
&lt;p&gt;aiohttp ~ 兼容 Py3 的更加简洁的 HTTP S/C&lt;/p&gt;
&lt;p&gt;plumbum ~ 跨平台的 AppleScript&lt;/p&gt;
&lt;p&gt;phonenumbers ~ 将 google libphonenumbers 人性化包装的电话检验库&lt;/p&gt;
&lt;p&gt;networkx ~ graphviz 之后,更加好用的可视化库&lt;/p&gt;
&lt;p&gt;influxdb ~ 时间序数据存储好物&lt;/p&gt;
&lt;p&gt;elasticsearch-dsl ~ 嗯哼, Pythonic 操作小语言&lt;/p&gt;
&lt;p&gt;keras ~ Theano 上的深度学习界面&lt;/p&gt;
&lt;p&gt;gensim ~ NLP 必用品&lt;/p&gt;
&lt;p&gt;以及: &lt;a href="https://pythontips.com/2013/07/30/20-python-libraries-you-cant-live-without/"&gt;20 Python libraries you can’t live without | Python Tips&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://litaotao.github.io/python-materials"&gt;Python 技巧总结 | Taotao's Zone&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;首次自我推荐 Py 原创好文章 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/pyenv-mirror"&gt;pyenv-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速制作 pyenv 环境镜像的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品, 在 CPyUG 列表反馈下, 24小时以内,兼容了 Python 2 ;-)&lt;/p&gt;
&lt;p&gt;嗯哼,当然的,没有 M$ 的支持.
)&lt;/p&gt;
&lt;h3 id="_5"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160518 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160513 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 71</title><link href="http://weekly.pychina.org/importpython/importpython-71.html" rel="alternate"></link><published>2016-05-06T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-05-06:importpython/importpython-71.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/71/"&gt;Import Python Weekly Newsletter - Issue No 71&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, 来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://masnun.com/2016/05/03/python-metaclass-explained.html"&gt;Python 元类解释&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的核心特性就是:&lt;code&gt;一切为对象&lt;/code&gt;,
其实都是类的实例.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://abhaykashyap.com/blog/post/tutorial-how-build-facebook-messenger-bot-using-django-ngrok"&gt;教程:如何基于 Django,Ngrok 构建 facebook 消息机械人 - Blog - Abhay Kashyap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2016 是 Facebook 机械人元年,
基于地球上最大的短信平台, Facebook 推出了 Messenger 平台,
支持企业构建自己的自动应答系统;
此平台虽然还在 beta 阶段,
但是接入了 十亿 活跃用户,值得折腾....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://magic.io/blog/uvloop-make-python-networking-great-again/"&gt;uvloop: 异常快的 Python 网络&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;asyncio 是当前 Python 的标准异步 I/O 网络框架.
uvloop 则是能完全替代 asyncio 完备的更快的异步事务循环.
基于 libuv 以 Cython 构建;
事实上 uvloop 比 nodejs, gevent 或是其它异步框架快两倍以上.
性能接近 Go 语言实现的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2016/05/02/es6-django-lovers"&gt;Django 爱好者的 ES6&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Django community is not one to fall to bitrot. Django supports every new release of Python at an impressive pace. Active Django websites are commonly updated to new releases quickly and we take pride in providing stable, predictable upgrade paths. We should be as adamant about keeping up that pace with our frontends as we are with all the support Django and Python put into the backend. I think I can make the case that ES6 is both a part of that natural forward pace for us, and help you get started upgrading the frontend half of your projects today.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pyGrowler/Growler"&gt;Growler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用通过 PEP 3156 包含在 Python 3.4 内建模块中的 asyncio 库,
Growler 作为 web 应用框架,
类似 nodejs 的 express 库,
基于一系列中间件完成 HTTP 请求响应.
也通过中间件的串接完成复杂业务.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;何时开始微型 web 框架都和瓶子干上了!? 
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexk307/redis_cache"&gt;Redis 缓存修饰符&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 redis 完成的髙水平的函式缓存.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4gvoie/what_should_i_ask_to_hire_a_good_python_developer/"&gt;应该聘请那种给力的 Python 开发者? &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Reddit Discussion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I need some advice. I founded a SAAS startup that is doing pretty well. When I was looking to build out my software I found a developer I had worked with in the past and brought him on as a partner in the business. He held an equity stake and built out the backend of our software (restful API and database) all using Python. Front end is also Python based.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/may/02/bugfix-releases/"&gt;Django bugfix 版本发布: 1.9.6 + 1.8.13&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Today we've issued bugfix releases for the 1.9 and 1.8 release series. Details can be found in the release notes for 1.9.6 and 1.8.13.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580658-function-guards-for-python-3/"&gt;Python 3 的功能卫士&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模块实现了功能卫士 - 根据不同的参数将运行时调用重定向到不同的函式上.
表现形式是 &lt;code&gt;@guard&lt;/code&gt; 修饰符.
并提供缺省值表达式: &lt;code&gt;_when&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bigishdata.com/2016/05/03/the-special-relationship-between-noodles-and-qdoba"&gt;用 Python 来预测你更喜欢面条中加 Qdoba 还是 Chipotle.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ve had a theory that for every Noodles, there’s a Qdoba that’s right next door. It might be some sort of selection bias however, since I can think of a couple locations where they’re directly next to each other. To me, Noodles and Qdoba have a special relationship, at least compared to other restaurants. I figured now was about the time I should test this, and I can use Chipotle to test. The question is: Which restaurant is more special to Noodles, Qdoba or Chipotle?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Nhadroj/bitly_finder/blob/master/bitly_finder.py"&gt;随机找到 bit.ly 地址&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果有人有足够的计算能力会发生什么?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.curiousefficiency.org/posts/2016/05/pycon-australia-education-cfp-2016.html"&gt;PYCON上提出了澳大利亚教育研讨会的演讲！!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Involved in Australian education, whether formally or informally? Making use of Python in your classes, workshops or other activities? Interested in sharing your efforts with other Australian educators, and with the developers that create the tools you use? Able to get to the Melbourne Convention &amp;amp; Exhibition Centre on Friday August 12th, 2016? Then please consider submitting a proposal to speak at the Python in Australian Education seminar at PyCon Australia 2016!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://goo.gl/9PI2pq"&gt;Get on Track w/ JIRA.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JIRA Software is the #1 software dev tool used by agile teams. Get started for free!&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/517/python-gui-programming-cookbook/"&gt;Python GUI Programming Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over 80 object-oriented recipes to help you create mind-blowing GUIs in Python.&lt;/p&gt;
&lt;h2 id="_3"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://conf.scipyla.org/scipyla2016/"&gt;SciPy Latin America&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://conferences.oreilly.com/oscon/open-source-eu-2016"&gt;OSCON Europe 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pygrunn.org/"&gt;PyGrunn 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pycon.ir/"&gt;PyCon Iran&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pydata.org/london2016/"&gt;PyData London 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pycon.se/"&gt;Pycon Sweden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;p&gt;Projects&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cherrypy/cherrypy"&gt;cherrypy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;50 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CherryPy is a pythonic, object-oriented HTTP framework.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼?!10多年的老梗也开花了?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BlockedServers/tracker"&gt;tracker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;28 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动追踪最近的变化, 不用人工刷了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timgaripov/TensorNet-TF"&gt;TensorNet-TF&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TensorNet (TensorFlow implementation)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MagicStack/vmbench"&gt;vmbench&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Network Server Performance Benchmarking Toolbench&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexk307/redis_cache"&gt;redis_cache&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Redis Cache decorator&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thombashi/sqlitebiter"&gt;sqlitebiter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能从 CSV/JSON/Excel/Google-Sheets 创建 SQLite 数据库的 CLI 工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cr0hn/PyDiscover"&gt;PyDiscover&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单安全的轻量级服务发现!&lt;/p&gt;
&lt;p&gt;PyDiscover: Simple Secure and Lightweight Python Service Discovery&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hunkim/word-rnn-tensorflow"&gt;word-rnn-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Multi-layer Recurrent Neural Networks (LSTM, RNN) for word-level language models in Python using TensorFlow.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sunary/flask-optimize"&gt;flask-optimize&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask 优化: cache, minify html 以及 gzip response&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Sendhub/drow"&gt;drow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Django-esque ORM for Riak with an emphasis on flexibility&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/freakboy3742/lightsout"&gt;lightsout&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将各种电台播放列表转化为 Spotify 播放列表.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vivekanand1101/twitter-sentiment-analysis"&gt;twitter-sentiment-analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令工具, 对 Twitter 消息进行情绪分析.
基于 sem 项目进行数据挖掘.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/skcript/watchman"&gt;watchman&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将文件的变更转化为 API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/safwanrahman/django-webpush"&gt;django-webpush&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web Push Notification Package for Django&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/pyenv-mirror"&gt;pyenv-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速制作 pyenv 环境镜像的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品, 在 CPyUG 列表反馈下, 24小时以内,兼容了 Python 2 ;-)&lt;/p&gt;
&lt;p&gt;嗯哼,当然的,没有 M$ 的支持.
)&lt;/p&gt;
&lt;h3 id="_5"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160509 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160506 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 70</title><link href="http://weekly.pychina.org/importpython/importpython-70.html" rel="alternate"></link><published>2016-05-01T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-05-01:importpython/importpython-70.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/70/"&gt;Import Python Weekly Newsletter - Issue No 70&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, 来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://synd.co/1XWSCSz"&gt;有 Python app. 的想法?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Azure App Service 中创建 Python app. 免费的!
选择对应语言,就可以使用各种常见框架的模板来开始:
django/flask/bottle ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pythontips.com/2016/04/24/python-sorted-collections/"&gt;Python 分类排序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 TIOBE 排行榜的其它语言,
Python 有点不寻常,其它都有可排序的 字典/集合,
只有 Python 没有, 自称 &lt;code&gt;预置电池&lt;/code&gt; 的语言,为毛?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://steelkiwi.com/blog/best-practices-working-django-models-python/"&gt;Django 模型中的最佳实践&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 Django 程序猿,非常实用和清晰的检查列表.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.mathandpencil.com/optimizing-slow-django-rest-framework-performance/"&gt;优化慢速 Django REST Framework&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Django Rest Framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DRF 中有个著名的 "N+1选择问题", 这儿进行了深入的讨论,
但是,并没有什么好的的解决方案..&lt;/p&gt;
&lt;p&gt;The Django REST Framework (DRF for short) allows Django developers to build simple yet robust standards-based REST API for their applications. Even seemingly simple, straightforward usage of the Django REST Framework and its nested serializers can kill performance of your API endpoints. At it’s root, the problem is called the “N+1 selects problem”; the database is queried once for data in a table (say, Customers), and then, one or more times per customer inside a loop to get, say, customer.country.Name. Using the Django ORM, this mistake is easy to make. Using DRF, it is hard not to make.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyMOTW/~3/yOjZUL-wOJo/"&gt;select — 高效 I/O 中的等待 — PyMOTW 3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;模块选择特定平台 I/O 监察功能.
相当于 POSIX 中的 &lt;code&gt;select()&lt;/code&gt;,
适用于 Windows 和 UNIX 平台.
也提供了 &lt;code&gt;poll()&lt;/code&gt; , 仅 UNIX 可用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-54-pip-and-the-python-package-authority-with-donald-stufft/"&gt;54集 - Donald Stufft 论 Pip 以及 Python 包管理 &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为 Python 程序猿,每天都在使用 pip 进行各种模块的管理.
但是从来没有详细探寻过为什么/怎么来的?!
这次请到了作者来聊聊,当初的设想...&lt;/p&gt;
&lt;p&gt;As Python developers we have all used pip to install the different libraries and projects that we need for our work, but have you ever wondered about who works on pip and how the package archive we all know and love is maintained? In this episode we interviewed Donald Stufft who is the primary maintainer of pip and the Python Package Index about how he got involved with the projects, what kind of work is involved, and what is on the roadmap. Give it a listen and then give him a big thank you for all of his hard work!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/javrasya/django-river/"&gt;django-river 状态机以及工作流库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Main goal of developing this framework is to be able to edit any workflow item on the fly. This means, all elements in workflow like states, transitions, user authorizations(permission), group authorization are editable. To do this, all data about the workflow item is persisted into DB. Hence, they can be changed without touching the code and re-deploying your application.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://synd.co/23752Zg"&gt;构建实时 apps.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syncano. Database. Backend. Middleware. Real-time. Support. Start for free!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-resources.pythonblogs.com/304_python_resources/archive/1539_computational_geometry_in_python_from_theory_to_application.html"&gt;计算几何在 Python : 从理论到应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When people think computational geometry, in my experience, they typically think one of two things: Wow, that sounds complicated. Oh yeah, convex hull. In this post, I’d like to shed some light on computational geometry, starting with a brief overview of the subject before moving into some practical advice based on my own experiences&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2016/a-polyglots-guide-to-multiple-dispatch-part-3/"&gt;polyglot 的多分派手册 - 第三部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关多分派系列第三部分.
第一部分介绍了概念以及 C++ 的实现;
第二部分在Python 中完成了部分特性;
这一节, 挖掘其根据 Common Lisp 中的实现,
来探讨 Python 在 OOP 框架中可以进行的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/143378817643"&gt;Your Django Story: Meet Margaret Myrick&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Margaret Myrick is a program manager at Indeed, and a musician on the side. She has lived in Texas since she was a child.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/architv/yodabot"&gt;YodaBot - 开源消息机械人将文本转换为 yoda 演讲&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Master Yoda, I am. Left Degobah I have, and come to messenger as a bot. Message me. Reply in my own style, I would. Curator Note - Pretty funny check it out.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;特川普之后, 又一个语言风格类工具.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathanslenders/python-prompt-toolkit"&gt;Python 提示符工具包&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;prompt_toolkit 专注用 Python 构建强力 CLI 工具界面.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="ptpython" src="https://github.com/jonathanslenders/python-prompt-toolkit/raw/master/docs/images/ptpython.png" /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 这样一来, GUI 越来越没有什么必要了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4gpa83/employer_refuses_to_allow_python/"&gt;雇主拒绝遵守 Python  - Reddit Discussion&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hey guys, Recently, I informed my manager that I was willing to go above-and-beyond and help improve some of our team operations by writing a handful of Python scripts. He is a stickler for following the rules, so he ordered me to ask permission to install Python on my development machine (I wasn't intending on asking permission). My request has been refused. Despite providing evidence from the Python Foundation on their open licensing (especially for my purposes, which is just local machine -- not production), they are still refusing on account that Python is type of GPL and it is interpretative. Have you guys run into something like this before? It seems ridiculous to me.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 可怜的 GPL.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=anP1TU1vHbs"&gt;James Powell - &lt;code&gt;from __past__ import print_statement&lt;/code&gt;: 达达主义者拒绝 Python 2 vs 3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the title doesn't make any sense, then there's no hope that the description will be any better. This talk will be a strange dive into interpreter hacks, the pointlessness of the Python 2 vs 3 debate, and the twisted artistic drive that pushes the speaker to come up with these perversions of the Python language. Prepared to be simultaneously repulsed, intrigued, and completely bored.&lt;/p&gt;
&lt;p&gt;有趣,但是完全无聊...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://geekswipe.net/technology/computing/analyze-chromes-browsing-history-with-python/"&gt;用 Python 分析 Chrome 的浏览历史&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 SQLite 中扒出数据结构,
只需 Python 写个脚本,连接数据库,提取对应数据,
一切就随你折腾了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://register.automatingosint.com/importpython/"&gt;在线用 Python 收集情报&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn how to write code to automatically extract and analyze data from the web and social media. Join students from around the world from law enforcement, journalism, information security and more.&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/524/mastering-python-forensics/"&gt;掌握 Python 取证&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Learn to perform forensic analysis and investigations with the help of Python, and gain an advanced understanding of the various Python libraries and frameworks. Analyze Python scripts to extract metadata and investigate forensic artifacts. The writers, Dr. Michael Spreitzenbarth and Dr. Johann Uhrmann, have used their experience to craft this hands-on guide to using Python for forensic analysis and investigations&lt;/p&gt;
&lt;h2 id="_3"&gt;活动&lt;/h2&gt;
&lt;p&gt;~ Upcoming Conference / User Group Meet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydata.org/london2016/"&gt;PyData London 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://il.pycon.org/"&gt;PyCon Israel 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.pycon.se/"&gt;Pycon Sweden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_4"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/openai/gym"&gt;gym&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1353 Stars, 162 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发和比较算法的工具.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;来自 &lt;a href="https://gym.openai.com/"&gt;https://gym.openai.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;betacat 的始源之地...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rllab/rllab"&gt;rllab&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;86 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;rllab 开发和评估强化学习算法的框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jaywunder/otek"&gt;otek&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;52 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有人都应该体验的项目创建工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/detuxsandbox/detux"&gt;detux&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;51 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多平台 Linux 沙箱&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mharradon/LowRankPropagation"&gt;LowRankPropagation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Propagation Technique for Solving Low Rank Matrix Completion&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Aurora0001/LearnProgrammingBot"&gt;LearnProgrammingBot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bot for /r/learnprogramming using supervised learning&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mwielgoszewski/doorman"&gt;doorman&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;an osquery fleet manager&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/holyshawn/ballade"&gt;ballade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轻量级, 基于 tornado 的代理,
以及上游代理切换管理工具.
使用 SwitchyOmega 规则.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tomchristie/falcon-api"&gt;falcon-api&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Falcon 的 web API 框架.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/miguelgrinberg/flatdoc"&gt;flatdoc&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flat 文档生成器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cloudbiller/elastic-bill"&gt;elastic-bill&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elastic bill 
复合云平台计费管理工具.
is a multi cloud platform billing management tool.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dataloop/slactorbot"&gt;slactorbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Slack bot with hot patch!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/pyenv-mirror"&gt;pyenv-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速制作 pyenv 环境镜像的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品, 在 CPyUG 列表反馈下, 24小时以内,兼容了 Python 2 ;-)&lt;/p&gt;
&lt;p&gt;嗯哼,当然的,没有 M$ 的支持.
)&lt;/p&gt;
&lt;h3 id="_5"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160501 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160501 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 69</title><link href="http://weekly.pychina.org/importpython/importpython-69.html" rel="alternate"></link><published>2016-04-21T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-04-21:importpython/importpython-69.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/69/"&gt;Import Python Weekly Newsletter - Issue No 69&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;欢迎, 来 &lt;a href="https://github.com/PyChina/weekly"&gt;PyChina/weekly&lt;/a&gt; 共同翻译/增订/推荐 周刊 蠎消息 ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://goo.gl/NoS1Xr"&gt;学习用 Python 收集在线情报&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代码自动追踪/提取/分析 网络和SNS 的数据.
倡议 法律/新闻/信息安全 以及其它有兴趣的专业学生加入&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.ayoungprogrammer.com/2016/04/determining-gender-of-name-with-80.html"&gt;仅用三种特征就能基于名字确定性别精度达 80%&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐这一简单的项目,
通过机械学习通过姓名来猜测性别!
经过摸索,发现仅仅需要关注三个特征,就能达到 80% 的精度!
作者自认不是 机器学习领域 专家, 大家有意见敬请吐糟.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;源代码: &lt;a href="https://github.com/ayoungprogrammer/NameGenderClassification/blob/master/Gender%20Classification%20of%20Names.ipynb"&gt;NameGenderClassification/Gender Classification of Names.ipynb at master · ayoungprogrammer/NameGenderClassification&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对的,一位华人小哥,
&lt;strong&gt;当然&lt;/strong&gt;,不是天朝的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/lgiordani/dive-into-object-oriented-python"&gt;潜入 OOPy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;面向对象编程的幻灯.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极~果断发布在 不存在的 &lt;code&gt;speakerdeck&lt;/code&gt; 中
167页的良心分享!
同作者另外一篇幻灯也必须推荐:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://speakerdeck.com/lgiordani/abstract-base-classes"&gt;Abstract Base Classes // Speaker Deck&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cKxRvEZd3Mw"&gt;Hello World - 机器学习食谱 #1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首个机器学习案例只要6行!
这一集介绍什么是机械学习,以及为毛这么重要.
嗯哼,跟随代码来体验吧.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极~ 来自不存在的公司收购的不存在的视频分享平台上的频道:
&lt;a href="https://www.youtube.com/channel/UC_x5XG1OV2P6uZZ5FSM9Ttw"&gt;Google Developers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然! 猜对了, AlphaGo 团队的工程师亲自录制的教学录像!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/erdem/django-admino"&gt;Admino 作为 Django 的模块提供 REST API 给管理终端.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过她, 终于可以自在的制造自己的管理面板了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/04/sign-up-now-to-volunteer-at-pycon-2016.html"&gt;来注册成为 PyCon 2016 志愿者!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 志愿者的自豪是有传统的...&lt;/p&gt;
&lt;p&gt;is proud to be part of the long tradition of events that take place because the attendees themselves care and are willing to put forward hours of volunteer work to ensure that new arrivals are greeted at the registration desk, that speakers are guided to and from their session rooms, and — yes — that swag bags are all properly stuffed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aymericdamien/TensorFlow-Examples"&gt;Python Tensorflow 教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Tensorflow 完成的流行机器学习算法安全带.
目的是引导大家轻松的进入 Tensorflow.
必然的,都有 ipynb 版本, 可以下载到本地交互.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/koehlma/jaspy/blob/master/README.rst"&gt;Jaspy – 用 JS 实现的 Python VM &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jaspy 是用 JS 完全从头完成的 Python VM.
支持多线程,并内置调试器可以远程调试,
并提供灵活的预处理架构.
速度并不是项目的主要目标.
旨在探索客户端 web 编程的全新可能性.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;来自仙书 "&lt;a href="http://aosabook.org/en/500L/a-python-interpreter-written-in-python.html"&gt;500 Lines or Less | A Python Interpreter Written in Python&lt;/a&gt;"
中的案例&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wakatime.com/blog/25-pirates-use-flask-the-navy-uses-django"&gt;海盗用 Flask, 海军用 Django · WakaTime&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果想测试/验证想法或是新产品.
就必须选择一个网络协议桟来构建.
对于 Pythonista Flask 和 Django 是两个最流行的 web 应用框架.
笔者的经验是选对了幸福一生!
为此专门创建了对比表格来帮助大家决策.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同时发布了决策桟,回答几个关键问题后自动给出最佳选择!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wakatime.com/django-vs-flask-worksheet"&gt;Django vs Flask Worksheet · WakaTime&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.europython.eu/post/142898152902"&gt;EuroPython 2016: 日程发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常高兴的宣布 EuroPython 2016 将在 Bilbao 举行!
包含 180+ 分享,
150+ 讲者, 一天研讨, 5天大会/培训/主题分享/闪电演讲 以及 开方空间.
然后是2天的 sprints.&lt;/p&gt;
&lt;p&gt;EuroPython will be one of the most exciting and vibrant Python events this year.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dirkgorissen.com/2016/04/19/wheres-susi-airborne-orangutan-tracking-with-python-and-react-js/"&gt;Susi 在哪儿? 空降猩猩追踪器 Python + React.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一年前,折腾无人机时,提交了以下问题:
是否能用无人机在婆罗洲丛林上自动搜索猩猩身上的标签?&lt;/p&gt;
&lt;p&gt;面对几千公顿的热带雨林,你需要追踪越来越多的猩猩.
怎么办!?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasintoy/SnipLime"&gt;SnipLime&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sublime&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 Sublime Text 收集的各种设计模式/惯用/片段.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580644-lru-dictionary/"&gt;LRU 字典 (Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单的 LRU 字典实现,
by maximum capacity and by maximum time not being used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.build2master.com/technology/django-cheat-sheet-templateless"&gt;Django Cheat Sheet (Templateless)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注 Django 的 RESTful 应用.
包含了常用命令,配置,视图(即 控制器),模型,
如何通过 Django 查询信息.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.indjango.com/deploying-django-app-on-openshift/"&gt;免费在 Openshift 部署 Django 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是的免费!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不过,是否存在,不保证...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/blog/post/interview-justin-seitz-author-gray-hat-python-and-black-hat-python-books"&gt;采访 Justin Seitz&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;灰帽子和黑帽子 Python 的作者!&lt;/p&gt;
&lt;p&gt;Justin is the principal consultant for Dark River Systems Inc. where he spends his time blogging, and training open source intelligence techniques using Python. He is the author of two books Gray Hat Python and Black Hat Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pymotw.com/3/calendar/"&gt;calendar — 和日期工作 — 每月一模块系列&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The calendar module implements classes for working with dates to manage year/month/week oriented values.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kazuar.github.io/building-slack-game-part1/"&gt;用 Python 创建 slack bot - part 1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;bot&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一部分, 创建机器人来发送和接收简单的信息.
有很多现成可用的模块,
比如 python-rtmbot / slackbot,
不过,先使用基本的官方 API.&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/549/introduction-to-machine-learning-with-python/"&gt;介绍 ML 在 Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多 Python 程序猿好奇什么是机器学习,以及能解决什么具体应用和问题.
文章提供了一个良好的开始.&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/evilsocket/smali_emulator"&gt;smali_emulator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;166 Stars, 27 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似 apktool 能自动生成 smali 源文件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swapagarwal/JARVIS-on-Messenger"&gt;JARVIS-on-Messenger&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;85 Stars, 19 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Messenger 上很听用的智能系统.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/maldevel/EmailHarvester"&gt;EmailHarvester&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;62 Stars, 11 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Email 地址收割机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasintoy/SnipLime"&gt;SnipLime&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;60 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A collection of design patterns/idioms/snippets for Sublime Text.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="SnipLime" src="https://camo.githubusercontent.com/1d48b91884e6ebcd6c3f3916a15807e875a2687e/687474703a2f2f692e696d6775722e636f6d2f37566532796e372e676966" /&gt;&lt;/p&gt;
&lt;p&gt;鼠标党的爱...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/infosec-au/altdns"&gt;altdns&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;37 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成 排列/改建/子域改变 ,然后改变丫的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jacobian/slackline"&gt;slackline&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WIP: 用 Django Channels 完成 Slack Bots &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Scoppio/BookCreator"&gt;BookCreator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想在自己的 nook 或是任何电脑上阅读有兴趣的图书,
通过 Python 很快就能实现这个功能了.&lt;/p&gt;
&lt;p&gt;A scrapper that takes an online book from ORilley and turns into an epub book, because I want to read'em in my nook, away from my computer, and since I know python I figured out it could not be that hard...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geeknam/messengerbot"&gt;messengerbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Facebook Messenger 平台 Bot 的 Python 客户端.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/operasoftware/sentrycli"&gt;sentrycli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CLI 脚本, 查询/分析 Sentry 收集的数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/magic-constraints"&gt;magic-constraints&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函式参数定义的 Hacking!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,天朝小哥 ;-)
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cralston0/gzip-encoding"&gt;gzip-encoding&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实例,如何压缩 HTTP 请求发送到 web 服务,并处理.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;包含 py/c++/Django/Flask 案例.
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/pyenv-mirror"&gt;pyenv-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速制作 pyenv 环境镜像的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品, 在 CPyUG 列表反馈下, 24小时以内,兼容了 Python 2 ;-)&lt;/p&gt;
&lt;p&gt;嗯哼,当然的,没有 M$ 的支持.
)&lt;/p&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160422 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 92 分钟完成快译&lt;/li&gt;
&lt;li&gt;160421 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 68</title><link href="http://weekly.pychina.org/importpython/importpython-68.html" rel="alternate"></link><published>2016-04-14T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-04-14:importpython/importpython-68.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/68/"&gt;Import Python Weekly Newsletter - Issue No 68&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-us/trial/free-trial-open-source/?WT.mc_ID=OLA_11087206637883_11087205814819"&gt;有个 app 的念头?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Create a new app, free with Azure App Service, now.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可见 M$ 是有诚意的,只是一切必须透过 VS ...
而且中国区指定世纪互联代理...呵呵...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ibm.com/developerworks/cloud/library/cl-scalable-fault-tolerant-rest-endpoint-flask-python-bluemix-trs/index.html"&gt;基于 Falsk 创建可扩展/可容错的 REST 端服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;展示如何用命令行工具,部署 Falsk 和 AngularJS 结合的应用到 IBM Bluemix® .
教程中, 
选择了不同 Django, Pyramid, 或是 web2py 的框架,
Flask, 因为更加小巧.
如果嘦一个 REST 接口服务,更加合用.
并展示了 REST 端服务如何在不同功能中进行多路复用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/python/tutorial/essential-python-interview-questions"&gt;15 则 Python 面试基本问题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想获得 Python 职位?
首先得证明能用 Python 完成工作.
这里给出了一系列涵盖了 Python 语言相关的基础技能/问题.
只专注语言本身,没有涉及包/框架.
每个问题都有对应的教程, 希望得的上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/technology-battles/ruby-vs-python"&gt;Ruby vs. Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Toptal 特别约专家 Damir Zekic 和 Amar Sahinovic,
来讨论这两个知名脚本语言的特性.
收听节目,还能投票反馈你的见解.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;PHP是最好的语言!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/cs-math/11-things-i-wish-i-knew-about-django-development-before-i-started-my-company-f29f6080c131#.gc8qecmdy"&gt;用 Django 创建公司前最希望知道的 11 件事儿: &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Computer Science, Math, and Statistics.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两年前创办了 &lt;code&gt;Math &amp;amp; Pencil&lt;/code&gt;.
之前对 web 开发的经验基本为 0.
为了公司, 从头学习了HTTP, Javascript, AJAX, 以及 Django MVC.
虽然急促,但是技术桟是成熟的.
基于 D3.js, Backbone.js, Celery, Mongo, Redis, 等等一堆其它东西,
完成了数据科学相关的应用!
回顾写下来的代码,
认为这几件事儿,必须事先明确了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/chdoig/the-hitchhickers-guide-to-data-science"&gt;Christine Doig 写的 Data Science 漫游指南 &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一则 &lt;code&gt;Hitchhickers Guide&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Slidedeck that shows tools needed to be productive as a data scientist.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.smallsurething.com/making-ember-and-django-play-nicely-together-a-todo-mvc-walkthrough/"&gt;将 Ember 和 Django 搞在一起: 待办应用演练&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教程包含
Django 的 JSON 接口服务,完成 CRUD 支持;
用 token 完成安全认证.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.ibm.com/recipes/tutorials/creating-alerts-notifications-using-python-and-watson-texttospeech/"&gt;用 Watson TextToSpeech 创建语言警报和通知&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IBM Watson 是自然语言处理和机器学习平台.
能从海量非结构数据挖掘出规律.
通过 Python 接口,可以快速完成 报警和通知系统.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目测不通中文..
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://azure.microsoft.com/en-in/documentation/articles/web-sites-python-create-deploy-django-app/"&gt;在 Azure 中构建 Django 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, azure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will create an application using the Django web framework. You will create an application using the Django web framework (see alternate versions of this tutorial for Flask and Bottle). You will create the web app from the Azure Marketplace, set up Git deployment, and clone the repository locally. Then you will run the application locally, make changes, commit and push them to Azure. The tutorial shows how to do this from Windows or Mac/Linux. Curator Note - Our sponsor Azure is offering free $200 to use on Azure for Linux projects. Check it out.- http://goo.gl/fd17H9&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://goo.gl/RCr8iZ"&gt;简化 Segment 分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Segment 是可定制的数据平台,
开发者和分析师通过优雅的 API 同广泛的合作伙伴形成了兴盛的生态.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580639-python2-keyword-only-argument-emulation-as-a-decor/"&gt;兼容 Python3 的关键字唯一参数传真修饰.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Provides a very simple decorator (~40 lines of code) that can turn some or all of your default arguments into keyword-only arguments. You select one of your default arguments by name and the decorator turn this argument along with all default arguments on its right side into keyword only arguments.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/blog/maximizing-python-performance-with-nginx-parti-web-serving-and-caching/"&gt;和 NGINX 最大化 Python 性能, 第一部分 : Web 服务和缓存&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有人都希望自家网站和应用运行的更快.
可惜越来越多的流量以及冲击,总能引发宕机问题.
时常进入忙-崩-忙 的循环.
而且杯具的是,几乎所有崩溃问题都发生在业务增长的关键时刻.
这时就是 NGINX 大显身手的时刻了....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://qihqi.github.io/python/dependency-injection-python/"&gt;依赖性注入在 Bottle/Flask&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在一个 OOP 方式构成的系统中,
通常有两种类型的对象:
数据对象(存储数据)
和服务对象(操作数据).
例如,
有数据库在后端时,必然有服务对象和数据库进行交互...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.jetbrains.com/pycharm/2016/04/in-depth-screencast-on-testing/"&gt;深入 PyCharm 中的测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仅仅4分钟的视频中,
展示了 PyCharm 运行原生 pytest ,
通过最近追加的 tox 支持,管理文档测试安全带,
并能理解本地配置...
甚至是用母语来表述的测试....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.python.org/3.6/whatsnew/3.6.html"&gt;Python 3.6 的新特性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article explains the new features in Python 3.6, compared to 3.5.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-52-hypothesis-with-david-maciver/"&gt;第52集 - Hypothesis 和 David MacIver&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Writing tests is important for the stability of our projects and our confidence when making changes. One issue that we must all contend with when crafting these tests is whether or not we are properly exercising all of the edge cases. Property based testing is a method that attempts to find all of those edge cases by generating randomized inputs to your functions until a failing combination is found. This approach has been popularized by libraries such as Quickcheck in Haskell, but now Python has an offering in this space in the form of Hypothesis.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2016/04/learning-from-data-basics-ii-simple.html"&gt;数据分析基础 II - 朴素贝叶斯网络&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;去年的文章中介绍了能简化复杂的概率计算的模型: 朴素贝叶斯.
在电子商务领域,
给用户的推广框功能,能预测用户最想买的商品.
实际应用中的效果不错.
这其实就是基于改进的  朴素贝叶斯网络 模型.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://buttercms.com/blog/how-to-build-a-heroku-add-on"&gt;如何构建 Heroku 插件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Butter CMS 
能协助我们快速构建/测试/发布 Heroku 插件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.in/2016/04/registration-is-open-for-our-young.html"&gt;针对年轻程序的教程开放注册了!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon, community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;The Young Coders&lt;/code&gt;
工作坊, 通过游戏探索 Python 编程.
从基础的数据类型开始,快速体验基本语句,
然后就可以基于 pygame 的图书馆游戏结合构建自己的游戏了!
这次 PyCon 专门为儿童设立的全天教程活动!
推荐注册体验!&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lulu.com/spotlight/jacobz_20"&gt;Python 描述符: 完全指南&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="book face" src="http://static.lulu.com/browse/product_thumbnail.php?productId=22634851&amp;amp;resolution=320" /&gt;&lt;/p&gt;
&lt;p&gt;本书希望探讨 描述符 这一基础思想在各种实用场景中的应用,
令大家都能更好的构建自己的描述符应用.&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/swstarlab/DynamicMemoryNetworks"&gt;DynamicMemoryNetworks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 实现的 DMN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/traverseda/PyCraft"&gt;PyCraft&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;"Minecraft in 500 lines of python"&lt;/code&gt; 
的分支, 准备完成一个真正的引擎,
而不仅仅是演示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tomchristie/api-star"&gt;api-star&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Flask &amp;amp; Falcon 的 API 框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/uranusjr/django-gunicorn"&gt;django-gunicorn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Gunicorn 驱动的 Django 框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jsvine/waybackpack"&gt;waybackpack&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据链接从 Wayback Machine 档案仓库中下载.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spoqa/dodotable"&gt;dodotable&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持 SQLAlchemy 的 HTML 表格生成器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jribbens/unsafe"&gt;unsafe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检验不可信代码,
在沙箱中防止逃逸.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/santoshankr/quotekey"&gt;quotekey&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SSH 密钥对精品生成器!
个性化你的 SSH keys.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="quotekey" src="https://github.com/santoshankr/quotekey/raw/master/quotekey.png?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;能夹入私人语句...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prodicus/spammy"&gt;spammy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私人垃圾邮件过滤器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ScottBarkman/python_console.log"&gt;python_console.log&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JS 程序猿转行入 Python 时必须品.&lt;/p&gt;
&lt;p&gt;Its about time that python got a console.log. For years, JavaScript developers have had a one up on Python. They've been able to print whatever they like to the console using the infamous console.log command. It's about time python had this killer functionality. I've managed to replicate this behavior using state of the art python class(es).&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/pyenv-mirror"&gt;pyenv-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速制作 pyenv 环境镜像的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品, 在 CPyUG 列表反馈下, 24小时以内,兼容了 Python 2 ;-)&lt;/p&gt;
&lt;p&gt;嗯哼,当然的,没有 M$ 的支持.
)&lt;/p&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160415 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160414 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 67</title><link href="http://weekly.pychina.org/importpython/importpython-67.html" rel="alternate"></link><published>2016-04-07T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-04-07:importpython/importpython-67.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/67/"&gt;Import Python Weekly Newsletter - Issue No 67&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.launchbit.com/taz/11284-6334-111"&gt;和 Slack 一起更好的工作&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slack 能将团队的所有消息聚集在一起的工具.
更少邮件/会议,嗯哼,作的更好.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实,好象并不怎么得力...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4df3oq/how_should_i_prepare_for_python_interview/"&gt;应该如何准备 Python 面试 ? - Reddit Discussion.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自学编程,两年前开始用 Django, Bootstrap, Python, Javascript.
刚刚通知有个 Python 工程师的职位,
那么应该如何准备?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codesachin.wordpress.com/2016/04/03/a-practical-introduction-to-functional-programming-for-python-coders/"&gt;面向 Python 程序猿的 函式编程 介绍&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章为已有 Python 编程经验的,给出了 函式编程 的介绍.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://i.imgur.com/1BKr16n.gif"&gt;Python 在 JavaScript | 特性! PyCharm 远程调试.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新功能展示 gif 动画, PyCharm 全桟用户应该看看&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2016/comparing-types-in-python-3/"&gt;Python 3 中的类型比较&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果在折腾 元编程, 一定发现需要一个类型排序.
不是对象,而是类型.
之前 Python2 的同类文章非常受欢迎,
Eli Bendersky 又写出了面向 Python 3 的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mrafayaleem.com/2016/03/31/apache-kafka-producer-benchmarks/"&gt;Apache Kafka 生产者基线 - Java vs Jython vs Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;benchmark&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章中,针对 Java, Jython 和 Python 进行了基线评测.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-51-pyjion-with-dino-viehland-and-brett-cannon/"&gt;51 集 - Pyjion 和 Dino Viehland 以及 Brett Cannon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了提高 CPython 的性能,
Dino Viehland 在暂定在 JIT 上进行改进.
他的公司 M$ , 决定赞助这一想法.
于是就有了 Pyjion 项目.
这集中,采访了核心成员,讨论了最新进展,以及一路上的困难.
当然,也跑题讨论了, 为什么 GIL 创造出来前,并没有想到这么可怕?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.launchbit.com/taz/11284-6191-111"&gt;构建实时 apps&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sponsor&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Syncano. Database. Backend. Middleware. Real-time. Support. Start for free!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.yhat.com/posts/data-normalization-in-python.html"&gt;用 Feather 进行数据标准化&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The 162 game marathon MLB season is officially underway. In honor of the opening of another season of America's Pasttime I was working on a post that uses data from the MLB. What I realized was that as I was writing the post, I found that I kept struggling with inconsistent data across different seasons. It was really annoying and finally it hit me: This is what I should be writing about! Why not just dedicate an entire post to normalizing data!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-scale-django-beyond-the-basics"&gt;如何扩展 Django: 超越基础 | DigitalOcean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章包含以下内容: 缓存技术,
包括用 Varnish 高速缓存整个儿网站,
或视图基础上进行缓存控制.
静态文件传送给 CDN 而不是 Django.
如何用 uWSGI 从网络服务器上运行 Django 来提高恬静.
最后,可以了解到如何尽可能多的分配内存给 应用程序.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nficano/python-lambda"&gt;Python-lambda: 10分钟以内完成第一个 Python 的 Lambda 微应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AWS Lambda 是种支持 Python/Jana/Node.js 的无主机应用发布平台.
只有在有请求时才真正运行的应用.
编写 Lambda 应用比较简单,
但是,绑定和部署没那么简单.
Python-lambda 就是专门简化这方面麻烦的工具!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.wordaligned.org/~r/wordaligned/~3/OZXREqk3P9I/8-queens-puzzle"&gt;8 皇后问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raymond Hettinger 将之前的方案,升级为 Python 3.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zerokspot.com/weblog/2016/04/04/channels-in-docker/"&gt;Channels 的 Docker 实例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Budapest 举行的 DjangoCon Europe 2016 中 sprints 项目之一,
Andrew Godwin 的 Channels 框架很可能进入 Django 1.10 版本特性.
现在需要一个稳定的 WebSocket 方案,
其中基于 docker-compose 的很不错.上周宣布&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/pub/e/3704"&gt;Big Data Wrangling 和 Python Course&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者 Katharine Jarmul (Data Wrangling with Python) &lt;/p&gt;
&lt;p&gt;将发布为期两天的课程, 包含数据采集和管理,
使用 Pandas 进行数据分析,
以及使用类似 Hadoop 和 PySpark 进行集成,
地点在 NY.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qbox.io/blog/elasticsearch-python-django-frontend-queries"&gt;如何在 Python 和 Django 中用 Elasticsearch, 第4部分 -创建前端&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是最后一集, 讨论如何在前端增加功能项,包含查询/索引/更新...&lt;/p&gt;
&lt;p&gt;In the previous posts in this series ( shared in the previous issue of the newsletter ) we created a basic Django app and populated a database with automatically generated data. We also added data to the elasticsearch index in bulk, wrote a basic command, and added a mapping to the elasticsearch index. In this final article we will add functional frontend items, write queries, allow the index to update, and discuss a bonus tip.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/airbnb/caravel"&gt;Airbnb 开源 Caravel, 基于 Python/Javascript 的数据探索/可视化平台!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Caravel is a data exploration platform designed to be visual, intuitive and interactive.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="sankey" src="http://airbnb.io/caravel/_images/sankey.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="force_directed" src="http://airbnb.io/caravel/_images/force_directed.png" /&gt;&lt;/p&gt;
&lt;p&gt;类似 AJAX, Airbnb 组合现有的优秀框架,变成了一个任性的大数据通用分享平台!&lt;/p&gt;
&lt;p&gt;后端:Flask+Pandas+SqlAlchemy; 前端: react+d3.js+nvd3.org&lt;/p&gt;
&lt;p&gt;唯一原创的是 &lt;a href="http://druid.io/druid.html"&gt;Druid&lt;/a&gt; ~
近线通用数据存储.
异常活跃,已经有近千 Issue 了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rochacbruno/dynaconf"&gt;rochacbruno/dynaconf: 为 Python 动态加载配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;dynaconf  是 OSM(对象设置映射器),
可以读取从不同的数据源,
比如 配置文件/环境变量/redis/memcached/ini文件/json文件/yaml文件,
甚至于可以自定义格式.
(别说要从 xml 读取!)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;非常需要,但是,看起来还不成就.
其实,最关键的是如何动态加载/更新
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://amitu.com/smarturls/"&gt;smarturls&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;smarturls 内置正则表达式模式库,
来轻松为 Django 构建路径表.
作者 Amit 是早期 Django 用户之一.
另外还有作品: &lt;a href="https://github.com/amitu/importd"&gt;importd&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Amit" src="https://avatars2.githubusercontent.com/u/58662?v=3&amp;amp;s=460" /&gt;&lt;/p&gt;
&lt;p&gt;胡子不够哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;p&gt;NULL&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/infinet/rsync-time-machine"&gt;rsync-time-machine&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;42 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Time Machine 样的备份.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hardmaru/cppn-gan-vae-tensorflow"&gt;cppn-gan-vae-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;36 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Train CPPNs 为 Generative Model, 
使用 Generative Adversarial Networks 以及 Variational Autoencoder 
技术生成高分辨率照片!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="是也乎" src="https://camo.githubusercontent.com/71d9f802bb9af06ac24b9c87242196993406533b/68747470733a2f2f63646e2e7261776769742e636f6d2f686172646d6172752f6370706e2d67616e2d7661652d74656e736f72666c6f772f6d61737465722f6578616d706c65732f6f75747075745f6c696e6561722e676966" /&gt;&lt;/p&gt;
&lt;p&gt;不明觉厉&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mjtamlyn/django-serial-forms"&gt;django-serial-forms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;35 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Constructible, introspectable serializers and forms&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zerok/channels-in-docker"&gt;channels-in-docker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example project for getting to know django channels.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;现在推广一个模块的标准三件套是:
github/pip/docker !!!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ajaxtpm/reCaptcha"&gt;reCaptcha&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了自动通过 Google reCaptcha v2 而创建的系统.
包含 hashes/颜色直方 的宏大训练图像集.
所有研究细节在: https://habrahabr.ru/post/280230/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fsr/stats"&gt;stats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:chart_with_upwards_trend: &lt;/p&gt;
&lt;p&gt;俺们办公室的状态数据.
公开了光传感器从办公室收集的数据.
并整理为卡片,为了给亲们任性的参观.
因为并没有严格的作习规定...&lt;/p&gt;
&lt;p&gt;Statistics from our office. This projects evaluates the data gathered by the light sensor in our office and punches them into a card. The intention behind this is to give folks, who want to visit us in our office, a recommendation on how likely it is that somebody will be there, since we don't have strict office hours. These statistics pose as an addition to the Buerostatus project, which gathers the data and gives live feedback on our website.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="stats" src="https://github.com/fsr/stats/raw/master/assets/example.png" /&gt;&lt;/p&gt;
&lt;p&gt;传说中的 &lt;code&gt;NoZuoNoDie&lt;/code&gt; 嘛!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rounds/couchbase-dump"&gt;couchbase-dump&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 couchbase buckets 的导出/入, 以及查阅的支持脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rbarrois/aionotify"&gt;aionotify&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Simple, asyncio-based inotify library for Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ferventdesert/tnpy"&gt;tnpy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文本分析引擎
(匹配/改写/提取) (python edition)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="tnpy" src="https://camo.githubusercontent.com/dfa0a0067f507296d4884f6f2400f40f71f0cd4a/687474703a2f2f7374617469632e7a7962756c756f2e636f6d2f627570747a796d2f6b736c3567677266636e3170736d646632663831693877672f666f6f2e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;国人作品!
使用 qq 邮箱的 gitter ...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gabdube/pyshaders"&gt;pyshaders&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pythonic OpenGL shader wrapper for python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PyRag/pyrag-sports"&gt;pyrag-sports&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CLI 工具,专门用来关注 football 和 cricket 信息.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;板球?! 好吧,印度人...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/klen/flask-pw"&gt;flask-pw&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Peewee ORM integration for Flask framework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/requestsigdel/Earthquake-Notifier"&gt;Earthquake-Notifier&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;地震通知!
如果 感知到相关数据,
立即发送短信到 美国地质勘探局 的电话!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极, 绝对需要哪! 
等等! 原来是用 Raspberry Pi 制造的地震仪?!
嚓! 官方信了才见鬼了...
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/huntzhan/pyenv-mirror"&gt;pyenv-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速制作 pyenv 环境镜像的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品, 在 CPyUG 列表反馈下, 24小时以内,兼容了 Python 2 ;-)&lt;/p&gt;
&lt;p&gt;嗯哼,当然的,没有 M$ 的支持.
)&lt;/p&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160408 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160407 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 66</title><link href="http://weekly.pychina.org/importpython/importpython-66.html" rel="alternate"></link><published>2016-03-31T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-03-31:importpython/importpython-66.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/66/"&gt;Import Python Weekly Newsletter - Issue No 68&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://goo.gl/qXpmgM"&gt;在社交图片中自动寻找武器 - 第一部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;image processing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼,应该有办法从社交渠道的照片中发现枪支或其它武器
(&lt;code&gt;是也乎&lt;/code&gt;: 社会化反恐?!)&lt;/p&gt;
&lt;p&gt;文章描述了如何将照片发送给 &lt;code&gt;Imagga API&lt;/code&gt;
并获得包含对象的准确描述.
以及如何利用 Python 提高标记的准确性.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qbox.io/blog/elasticsearch-python-django-database/"&gt;如何在 Django 中用 Elasticsearch (第 2 节), 填充数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;系列文章中,已经基于 Elasticsearch 在 Django 中创建了应用.
接下来就是数据的填充,
否则搜索是徦的了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydata.org/london2016/schedule/"&gt;PyDataLondon 数据科学会议日程 (五月 6-8) - 发布 (videos made public post-conf)&lt;/a&gt;
    pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果在 London, 应该参加,
太多髙能讨论&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://technicaldiscovery.blogspot.com/2016/03/anaconda-and-hadoop-story-of-journey.html"&gt;Anaconda 和 Hadoop --- 我们如何在一起的故事. ( Offtopic )&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一次集群计算的体验发生在 1999,
在 Mayo Clinic 作研究生期间.
真心美好时光海苔, 导师是 Dr. James Greenleaf.
非常耐心的引导我们,搞定了 Mac Performa 老爷机,
建立了本地集群.
还免费给我们使用了半年的实验室空间....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://matthewdaly.co.uk/blog/2016/03/26/building-a-location-aware-web-app-with-geodjango/"&gt;构建有地理位置感应的 GeoDjango 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PostgreSQL 有非常赞的内置 PostGIS 扩展,
Django 的 GeoDjango 项目则能任性的享受之!
教程展示了如何快速集成 PostGIS ,支持用户搜索附近的演出.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-resources.pythonblogs.com/304_python_resources/archive/1529_how_to_create_a_simple_python_websocket_server_using_tornado.html"&gt;如何使用 Tornado 构建简单的 Python WebSocket 服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;tornado&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着实时 web 应用的增长,
WebSockets 在日益成为关键技术.
必须人工刷新来从服务器接收数据的日子早已过去.
实时更新不再需要从客户端轮询,
而是相反,从服务端直接下推!
强大的 Web 框架也开始支持 WebSockets 的开箱即用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.willmcgugan.com/blog/tech/post/django-comparison/"&gt;Django vs Moya 逐项对比&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼,不是定性哪, 只是进行类比.
通过代码对比演示,大家可以得到自己的结论,
条目包含: 模型/URLs/视图/模板...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;图样图森破了, Django 的强大从来不是其代码,
而是其无比坚实的生态链,
Moya 还想用 XML 来进行通用描述,实在....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lihaoyi.com/post/PlanningBusTripswithPythonSingaporesSmartNationAPIs.html"&gt;用新加坡的 Smart Nation APIs 规划巴士班次&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Singapore Smart Nation 是政府推动,
尝试改进国家运行效率的计划.
推出了一系列公开的实时数据接口,无论个人还是企业,
都可以来创造解决市政问题的方案.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://forum.kloud51.com/d/52-badge-kloud51-com-a-pythonic-way-to-show-your-project-s-badges"&gt;Pythonic 的展示你项目的技能 Badges, 已支持 PyPI &amp;amp; ArchLinux AUR&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常实用也 COOL,
"如果你有一个开源项目,那么自动展示你项目的 Badge/Pins/Shields/Medal"&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
任何小事情标准化后,都是非常可喜的项目了&lt;/p&gt;
&lt;p&gt;&lt;a href="http://travis-ci.org/Alir3z4/html2text"&gt;&lt;img alt="Build Status" src="https://secure.travis-ci.org/Alir3z4/html2text.png" /&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/r/Alir3z4/html2text"&gt;&lt;img alt="Coverage Status" src="https://coveralls.io/repos/Alir3z4/html2text/badge.png" /&gt;&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/html2text/"&gt;&lt;img alt="Downloads" src="http://badge.kloud51.com/pypi/d/html2text.png" /&gt;&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/html2text/"&gt;&lt;img alt="Version" src="http://badge.kloud51.com/pypi/v/html2text.png" /&gt;&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/html2text/"&gt;&lt;img alt="Wheel?" src="http://badge.kloud51.com/pypi/wheel/html2text.png" /&gt;&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/html2text/"&gt;&lt;img alt="Format" src="http://badge.kloud51.com/pypi/format/html2text.png" /&gt;&lt;/a&gt;
&lt;a href="https://pypi.python.org/pypi/html2text/"&gt;&lt;img alt="License" src="http://badge.kloud51.com/pypi/license/html2text.png" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/owocki/pytrader"&gt;pytrader&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;519 Stars, 50 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cryptocurrency 交易机器人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tweekmonster/tmux2html"&gt;tmux2html&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;63 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cat2: 渲染整个儿 tmux 窗口/格 为 HTML&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;e.g: &lt;a href="https://share.esdf.io/FGlV4sufpt/color.html"&gt;color&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嗯哼! 能结合入 &lt;a href="https://github.com/asciinema/asciinema"&gt;asciinema&lt;/a&gt; 就赞了!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NorthBit/Metaphor"&gt;Metaphor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;84 Stars, 30 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Metaphor - Stagefright with ASLR bypass&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/oussemos/fail2ban-dashboard"&gt;fail2ban&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;78 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask 编写的 Fail2ban web 仪表盘.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ResidentMario/missingno"&gt;missingno&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;58 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Missing data visualization module for Python.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/samdroid-apps/reddit-is-gtk"&gt;reddit-is-gtk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;51 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reddit 的 GNOME 客户端 (使用 Gtk+ 和 Python)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/machrisaa/stylenet"&gt;stylenet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;48 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;神经网络和 Style Synthesis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jhamrick/nbflow"&gt;nbflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一键式可重复工作流,
基于 Jupyter Notebook + Scons.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Jupter 已经开始入侵各种实际生产场景了...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tripples/ifconfig-parser"&gt;ifconfig-parser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解析 ifconfig 的输出,并更好的检索&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fernandojunior/python-sqlite-orm"&gt;python-sqlite-orm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Python object relational mapper for SQLite&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mixxorz/django-inline-svg"&gt;django-inline-svg&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A simple SVG template tag for Django&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NephyProject/TwitterBot_Framework"&gt;TwitterBot_Framework&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Only little knowledge in programming, you can run Twitter Bot.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.livecoding.tv/2016/03/24/the-ten-10-best-python-productivity-tools-plugins-and-libraries"&gt;10个最好用的 Python 工具/插件/库 - Livecoding.tv Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;以及同类最10好的 C/C++/C#/JAVA/JS/Angular/H5 推荐....&lt;/li&gt;
&lt;li&gt;当然,都是 Livecoding.tv 一家之言...没有 github 的统计精确哈...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160401 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160331 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 65</title><link href="http://weekly.pychina.org/importpython/importpython-65.html" rel="alternate"></link><published>2016-03-24T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-03-24:importpython/importpython-65.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/65/"&gt;Import Python Weekly Newsletter - Issue No 65&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kldavenport.com/examining-your-presence-on-twitter-with-python/"&gt;用 Python 巡查目标 Twitter 行为&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文档展示了 赞助/营销 经理如何追踪他们的运动员或是品牌大使.
虽然写这种代码无法获得地区营销大奖.(嗯哼)&lt;/p&gt;
&lt;p&gt;只是希望文章引导那些想合理对 Twitter 数据进行追踪挖掘的同学们,
不用迷失在各种 R/Py 的模块大洋中...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/03/startup-row-utilityapi-won-sf-python.html"&gt;Startup Row: UtilityAPI 赢得了 SF Python pitch event&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;startup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 2016’s Startup Row got our campaign on the road on March 9th in San Francisco, meeting with the local SF Python user group at Yelp headquarters. Six early-stage companies that use Python gave their pitches, competing for an opportunity to exhibit in the PyCon Expo Hall on Startup Row. The roster of candidate startups included Alpaca, Bauxy, Beansprock, Opsulutely, Watt Time, and UtilityAPI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/dannguyen/a0b69c84ebc00c54c94d"&gt;Python 3 使用 Google Cloud Vision API 提取照片中文字实例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速用 Python 3 进行测试
(通过 Requests)
Google Cloud Vision 是否能良好的完成 OCR 数据处理.
对比类似 ABBYY FineReader 
能输出 Excel 表格.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/141433577888"&gt;你的 Django 故事: 遇见 Sarah Holderness&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;djangogirls&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sarah Holderness is the Python instructor at Code School. Although she originally planned to be a high school math teacher, Holderness found her love of programming during a required programming class in college and has been hooked on creating things ever since.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kracekumar.com/post/141377389440"&gt;Django 权限管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Admin 仪表板一向是 Django .
能支持用户对数据对象进行自由的 创建/读取/更新/删除.
对数据库的全面掌控!
但是新手总是无法从界面中获得数据.
其实,嘦完成合理的数据注册,一切尽在眼前...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.algotech.solutions/blog/python/django-migrations-and-how-to-manage-conflicts/"&gt;Django 迁移和冲突管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;迁移也是 Django 的常用功能之一...
(&lt;code&gt;是也乎:&lt;/code&gt; 因为经常不兼容升级嘛?!)
对多数人而言, 这是一个可怕的任务.
尽管阅读了所有文档,依然害怕迁移冲突引发的数据丢失,
或是手工修改迁移文件等等.
其实, 迁移工具很赞的, 嘦理解了她,
就没有任何挂碍的了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.indiegogo.com/projects/qutebrowser-a-keyboard-focused-vim-like-browser#/"&gt;qutebrowser 集资活动 ~ Python 开发的绑定 Vim 快捷键开源浏览器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;qutebrowser 是拥有宏大社区异常活跃的项目:&lt;/p&gt;
&lt;p&gt;超过60人贡献超过250次变更(Pull-Rewuests),
数百积极用户.
在过去5年积累了超过7500次提交.
目前核心任务是优化 QtWebKit 渲染引擎.
通过活动期望能全职为之工作一个月(或更多时间).
目标是增加最新基于 Chromium 项目的 QtWebEngine 后端!&lt;/p&gt;
&lt;p&gt;(Google Chrome 使用相同引擎.)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="cheatsheet-big" src="http://qutebrowser.org/img/cheatsheet-big.png" /&gt;&lt;/p&gt;
&lt;p&gt;程序猿永远的野望! 用键盘控制一切...
浏览器一直没有攻陷...所以 Pythoneer 来也...
基于 Py3+Qt5 !
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tomassetti.me/python-reflection-how-to-list-modules-and-inspect-functions/"&gt;Python 反思: 如何列出模块以及检查函式s&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近在折腾 Python 代码静态分析,
以及如何在 Jetbrains MPS 上创建 Python 编辑器.
首先得完成 Python 代码的模型解析.
虽然代码已可解析,问题是要考虑所有引用的包代码.
有的是内建的,有的是通过 C 编译出来的.
这意识着根本没有 Python 代码来解析.
文章记述了这方面的折腾...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MPS&lt;/strong&gt; ~ Meta Programming System !
Jetbrains 折腾出来了太多优秀的开发语言 IDE,
但是,发现 DSL 语言的创建越来越频繁,
所以,干脆给出了个通用的 DSL 语言构建系统!
嗯哼, 虽然已经有了 PyCharm, 但是用 MPS 再折腾出一个自制版本的来也没有为什么...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580628-pluggable-python-generators/"&gt;可插入式 Py 生成器 (Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单的示例,
展示了 生成器 也是可插入的,
即,能作为参数传送给 函式来从内部使用!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangolinks.com/detail/real-time-django-django-channels-488"&gt;实时 Django &amp;amp; Django Channels&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天是 Jacob Kaplan-Moss 的分享.
Jacob 来自 Herokai ,长期为 Django 贡献核心代码.
他认为框架的未来在于 Channels!
为 Django 引入了全新概念.
Channels 本质上是任务队列:
消息由生产者压入,
然后消费者能从指定 Channels 中获得.
如果在 Go 中使用过 &lt;code&gt;channel&lt;/code&gt;, 就非常熟悉这种思路.
和 golang 的 &lt;code&gt;channel&lt;/code&gt; 主要区别在,
Django 的 Channels 主要通过网络进行,
允许生产者和消费者在很多 dynos 以及/或 机器上透明运行.
此网络称为 &lt;code&gt;channel layer&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼?! Django 在走 node.js 的老路?
将同步代码,变成异步执行?
还跨网络/主机!?
那这安全性就呵呵了...而且调试起来简直无法更加酸爽了 !
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.doughellmann.com/~r/DougHellmann/~3/Ny2-7gE3JX8/"&gt;datetime — 日期和时间值操作 — PyMOTW 3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;datetime 模块包含各种日期/时间的处理/格式化/计算 的函式和类.
是的, &lt;code&gt;PyMOTW&lt;/code&gt; ~ 每周一模块 系列在升级到 Py3 ;-) &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.scrapinghub.com/2016/03/23/scrapy-tips-from-the-pros-march-2016-edition/"&gt;Scrapy Tips from the Pros: March 2016 Edition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;scrapy 的用户,应该关注最新的技巧集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.kickstarter.com/projects/34257246/python-201-intermediate-python"&gt;Python 201: 中级 Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果已经有 Python 的基础知识.
想提升到新水平,
那么这书正是你需要的...
当前唯一的 中级 Python 图书!&lt;/p&gt;
&lt;p&gt;Kickstarter 中...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目标 10万$,已经 KS 到了 7万多,
只是男主太丑...
)&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;爱上Python (&lt;a href="http://www.amazon.cn/Learn-Python-in-One-Day-and-Learn-It-Well-Python-for-Beginners-With-Hands-on-Project-The-Only-Book-You-Need-to-Start-Coding-in-Python-Immediately-Chan-Jamie/dp/1506094384/ref=sr_1_1?ie=UTF8&amp;amp;qid=1457804766&amp;amp;sr=8-1&amp;amp;keywords=Learn+python+in+one+day"&gt;Learn Python in One Day and Learn It Well&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高分入门小书, 程序媛 写就 !-) 已经完成翻译,出版中,值得期待!&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/carpedm20/variational-text-tensorflow"&gt;variational-text-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;223 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TensorFlow 实现
Neural Variational Inference 
的文本处理!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="variational" src="https://github.com/carpedm20/variational-text-tensorflow/raw/master/assets/model.png" /&gt;&lt;/p&gt;
&lt;p&gt;不知道能处理 红楼 卟!?&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karldray/quantum"&gt;quantum&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;203 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用 quantum suicide 进行反向因果分析&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/timofurrer/try"&gt;try&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;125 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常赞的 Python 模块尝试 CLI 工具...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aaugustin/datedelta"&gt;datedelta&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;44 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似 datetime.timedelta, 折腾日期计算 &lt;code&gt;for Humans™&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; datetime.date(2016, 3, 23) - datedelta.datedelta(years=-1, months=-1, days=1)
datetime.date(2017, 4, 22)

&amp;gt;&amp;gt;&amp;gt; datetime.date(2020, 2, 29) - datedelta.datedelta(years=2)
datetime.date(2018, 3, 1)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;嗯哼,说人话的日期计算模块...收!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/johncsnyder/SwiftKitten"&gt;SwiftKitten&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;34 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Swift autocompleter for Sublime Text, via the adorable SourceKitten framework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/andrewgodwin/channels-examples"&gt;channels-examples&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;29 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Django Channels 的示例工程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexander-rakhlin/CNN-for-Sentence-Classification-in-Keras"&gt;CNN-for-Sentence-Classification-in-Keras&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Keras中
用
卷积神经网络(Convolutional Neural Networks)
折腾 句子分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jabbalaci/DigitalOceanFlask"&gt;DigitalOceanFlask&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 Flask webapp 安装到  Digital Ocean (or Linode, etc.) Ubuntu box&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/RayMairlot/Selective-Unhide"&gt;Selective-Unhide&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Replaces the default unhide operator in blender with a menu, allowing selective unhiding.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tampe125/hashtag-scraper"&gt;hashtag-scraper&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 Twitter 抓取 &lt;code&gt;long hashtags&lt;/code&gt; 
用作口令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/felipebhz/checkdns"&gt;checkdns&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 完成的 DNS 检验工具.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.livecoding.tv/2016/03/24/the-ten-10-best-python-productivity-tools-plugins-and-libraries"&gt;10个最好用的 Python 工具/插件/库 - Livecoding.tv Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;以及同类最10好的 C/C++/C#/JAVA/JS/Angular/H5 推荐....&lt;/li&gt;
&lt;li&gt;当然,都是 Livecoding.tv 一家之言...没有 github 的统计精确哈...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160325 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160324 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 64</title><link href="http://weekly.pychina.org/importpython/importpython-64.html" rel="alternate"></link><published>2016-03-12T12:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-03-12:importpython/importpython-64.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/64/"&gt;Import Python Weekly Newsletter - Issue No 64&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.machinalis.com/blog/introduction-to-django-channels/"&gt;Django Channels 简要介绍 - 在现实开发中的应用要点.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通道, 是 Django 令人兴奋的全新功能.
可以令 Django 应用网站轻松支持外部工具/库(甚至于非 Python 的)
...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;简单的说, Django 终于决意进入 API 微服务时代了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://johnloeber.com/docs/kmeans.html"&gt;K-均值 聚类在 手写数字识别&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;K-Means Clustering 
是机械学习的标准数据分析算法.
值得反复通过实用案例来理解...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.toptal.com/python/python-3-is-it-worth-the-switch"&gt;从 Py3 返回: 是否值得折腾?!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自从 08 年亮相, Python 3 已经走了不短的路.
当初,缺乏几乎所有重要交 模块/工具 的支持.
虽然 Py3 提供了许多惊人的改进和功能,
能令我们写出更加健壮的 Python 代码.
Toptal 工程师 Dario Bertini,
以自己的经验来阐述 Python 3 的功能,是否值得切换.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="be2f380fe3aad41333427ecd5a1ec5c5" src="https://assets.toptal.io/uploads/blog/image/92216/toptal-blog-image-1457618659472-be2f380fe3aad41333427ecd5a1ec5c5.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;嗯哼, 包含非常 nice 的插图...
只是 py3 这事儿,无论多美好,就是缺少 killer 级别的动力哪...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://getblimp.github.io/django-rest-framework-jwt/"&gt;Django Rest 框架 - JSON Web Token 认证&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何在 Django 中实施 JSON Web Token Authentication (https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mmorejon.github.io/en/blog/deployment-diagram-docker-django/"&gt;部署流程 - Django 和 Docker | Manuel Morejón&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;流程图谱,展示了如何基于 Docker 来部署 Django 应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dataquest.io/blog/using-json-data-in-pandas/"&gt;如何用 Python 和 Pandas 处理大型 JSON 数据集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas, json&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理巨型 JSON 数据集,一直非常痛苦,
特别是无法全部加载到内存中时.
此时, 其实通过 命令行工具组合 Python 脚本就能进行有效的数据分析和探索.
本文展示了如何利用 Pandas 来探索和绘制 Montgomery County, Marylan 的
出警活动热点图.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/pycon/status/705803119494504452?s=09"&gt;FYI PyCon 2016 2/3 准备好了! 应该抢票了!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this moment, exactly 2,000 people are registered for PyCon 2016 — which puts us ? of the way to capacity!. If you are planning to visit now's the time to book the tickets.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tomforb.es/segfaulting-python-with-afl-fuzz"&gt;Python 的 afl-fuzz 段错误&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;American Fuzzy Lop 
是非常赞的进行模糊测试的工具.
此文介绍如何使用工具
来发现 CPython 的崩溃根源.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://szborows.blogspot.com/2016/03/mini-restjson-benchmark-python-351-vs.html"&gt;Mini REST+JSON 基准测试: Python 3.5.1 vs Node.js vs C++&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼,需要一个简单的结论,
对于后端服务的 JSON 处理效能:
Python 3.5.1 vs Node.js vs C++
, 基于的框架是:
Python2.7 + Django + Gunicorn
对照的是 Node.js + Express 4, 
Python3 + aiohttp 
或是 C++.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实吧,这事儿有点扯...
JSON 中的 J 是谁?!
现在的语言选择,从来不是速度,而是综合的生态...特别是面向 wetware 的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/49j7rs/what_python_book_for_experienced_programmers/"&gt;哪些书有助成为 Python 专家 ? - Reddit Discussion&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Reddit Discussion&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于有经验的程序猿, 什么书值得看?!
提问者背景是 Ruby, C++, JavaScript (以及一点儿 Clojure) . 
未来雇主指定使用 Python,所以,要高速成为专家!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/-r6CoNxPxSs/"&gt;PyDev of the Week: Chris Moffitt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This week we welcome Chris Moffitt (@chris1610) as our PyDev of the Week! Chris has been an active writer about Python on his blog and a speaker at DjangoCon.&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;爱上Python (&lt;a href="http://www.amazon.cn/Learn-Python-in-One-Day-and-Learn-It-Well-Python-for-Beginners-With-Hands-on-Project-The-Only-Book-You-Need-to-Start-Coding-in-Python-Immediately-Chan-Jamie/dp/1506094384/ref=sr_1_1?ie=UTF8&amp;amp;qid=1457804766&amp;amp;sr=8-1&amp;amp;keywords=Learn+python+in+one+day"&gt;Learn Python in One Day and Learn It Well&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;高分入门小书, 程序媛 写就 !-) 已经完成翻译,出版中,值得期待!&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexjc/neural-doodle"&gt;neural-doodle&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;367 Stars, 13 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将你的涂鸦转换为艺术品!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Landscape_example.png（PNG 图像，960x385 像素）" src="https://raw.githubusercontent.com/alexjc/neural-doodle/master/docs/Landscape_example.png" /&gt;&lt;/p&gt;
&lt;p&gt;莫纳风速成!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Fachschaft07/SSHKeyDistribut0r"&gt;SSHKeyDistribut0r&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;97 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动化用户授权密钥分发!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对于要管理大量不同系统/平台的开发者而言,
SSH Key 的丢失是世界崩溃!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/masasin/resume"&gt;resume&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;33 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 YAML 文档,自动生成多种格式的简历&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NathanW2/ascii_qgis"&gt;ascii_qgis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ASCII QGIS 地图查看器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="newrender" src="https://raw.githubusercontent.com/NathanW2/ascii_qgis/gh-pages/images/newrender.png" /&gt;&lt;/p&gt;
&lt;p&gt;作者曰了,创建工程的原因是:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;...why not
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好任性!俺喜欢!&lt;/p&gt;
&lt;p&gt;curses+Qt 的小作品! 800 行...&lt;/p&gt;
&lt;p&gt;~ &lt;a href="https://www.youtube.com/watch?v=Z84GMcQV3EM"&gt;Custom QGIS Forms - YouTube&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chubin/pyphoon"&gt;pyphoon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ASCII Art 月相图 (Python version)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/abhishek-archlinux/AnimeWatch"&gt;AnimeWatch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;mplayer 和 mpv 的前端&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BU-Computing/shahinday"&gt;shahinday&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 实现基于终端的游戏.
可扩展,发展非常快...but kind-of self-documenting...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/savala/slackStocks"&gt;slackStocks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;股票价格的 Slackbot &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tjadanel/packtSnatch"&gt;packtSnatch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 packtpub 免费学习页面
自动下载电子书的脚本...&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160313 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160312 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 63</title><link href="http://weekly.pychina.org/importpython/importpython-63.html" rel="alternate"></link><published>2016-03-07T15:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-03-07:importpython/importpython-63.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/63/"&gt;Import Python Weekly Newsletter - Issue No 63&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/XkZVIHjhgCw/"&gt;性能, 说服, 结构: 教练曰的 PyCon 演讲经验&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在通向 PyCon 的几个月里,
对于演讲俺折腾了三种境界:
自己排练,向朋友排练,向专业教练排练.
猜猜哪种最有效果?
刚刚向歌剧演唱家,演讲教练 Melissa Collom 演练了两次,
她对我的 表现力,说服和结构,给出了建议,
我想这些建议同样对你有用.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="how-i-rehearse-a-conference-talk" src="https://emptysqua.re/blog/how-i-rehearse-a-conference-talk/Emmeline-Pankhurst-011.jpg" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://micropyramid.com/blog/integration-of-linkedin-api-in-python-django/"&gt;在 Django 中整合 Linkedin 接口&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;api&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过整合 Linkedin ,我们可以获得用户验证的电子邮件 ID,
一般信息/最近的工作经历,
并分享文章.
完成整合,要以下操作:
1.创建 Linkedin 应用&lt;/p&gt;
&lt;p&gt;2.进行用户身份验证,获得 token&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过 token获取用户信息/工作经历...&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2016/mar/01/security-releases/"&gt;Django 安全版本发布: 1.9.3 和 1.8.10&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据安全发布策略, Django 团队刚刚发布了 1.9.3 和 1.8.10.
主要解决了下文描述的安全问题.
建议用户尽快升级.
Django 主分支也已经升级.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2016/03/speeding-up-docker-build-times-for.html"&gt;为 Python 应用加速 Docker 镜像的构建.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近写过一篇分析櫣部署 Python 的 web 应用的体验改进.
其中建议通过 Docker 可以有效提高部署速度,
现在,详细描述如何轻松的部署 Python web 应用到
Docker 或 OpenShift 3.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythontips.com/2016/02/27/learning-python-for-data-science/"&gt;学用 Python 来折腾数据科学&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们决定将这两领域的资源放在一起,
以免浪费时间收集了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/03/2016-python-education-summit.html"&gt;2016 Python 教育峰会&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼, 今年的 Python 教育峰会 演讲者/内容 已公布!
将在 5月29号,周日举行,
专注如何通过 Python 将编程知识传播给教师/教育工作者以及宽泛的其它人群.
教育各种领域的教育工作者来古人讨论,学习新技术和工具,
分享激情!
同时号召更多场地:学院,大学,社区工作坊,在线编程,政府....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-resources.pythonblogs.com/304_python_resources/archive/1521_an_introduction_to_mocking_in_python.html"&gt;Python 中的模拟&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 单元测试库包含名为
&lt;code&gt;unittest.mock&lt;/code&gt; 的子库.
引用它,能模拟各种测试时难以配置的资源.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.europython.eu/post/140216367077"&gt;EuroPython 2016: 普通门票价格&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果明天(周二,3月1日 23:59 CET)午夜前你抢到了票,
能享受节省 200欧的早鸟票!
否则,就只有普通票了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/jrzpgYXNpdQ/"&gt;Python 101: imports 的各种&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为新手,首要知道的就是如何导入其它模块/包.
然而,注意到即使是使用 Python 多年的老手,
依然不清楚 Python import 机制的合理边界.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
推荐PyCon'2015, Montreal 上
David Beazley (@dabeaz) 的演讲&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Modules&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;Packages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Live&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="k"&gt;Let&lt;/span&gt; &lt;span class="n"&gt;Die!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最完备的 Import 技艺!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/if91dNlzvag/"&gt;Python: 缓存简介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缓存是存储数据有限制集合,
用以加速数据检索.
这里描述一种使用字典完成高速缓存的实例.
通过标准库的 &lt;code&gt;functools&lt;/code&gt; 模块来创建,
首先构建一个类,来建设高速缓存字典,
然后扩展为必要时启动.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/580616-python-method-chaining-examples/"&gt;Python 方法链的实例 (Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这一片段,展示了 Python 中如何构建方法链&lt;/p&gt;
&lt;p&gt;By Vasudev Ram.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fullstackpython.com/task-queues.html"&gt;任务队列 - Full Stack Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Full Stack Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任务队列管理,发生在普通的 HTTP 请求-响应 周期之外.
&lt;code&gt;Full Stack Python&lt;/code&gt; 收集了相关的所有文章.
建议阅读&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/2lIowbzyQGY/"&gt;本周 PyDev : Brett Cannon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Brett Cannon (@brettsky) 
从 03 年开始就是 Python 的核心开发者.
同时也一直坚持 Bloging.
也一直活跃在  PyCon 上.
你可以在 YouTube 上回顾他的一些分享
(比如: 如何兼容 Python 2/3 的代码...)
目测大家怎么都见过他的演讲,
内容都不错,那么多了解哈下的出好蛋的 Brett Cannon 吧.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/error-handling-in-the-real-world"&gt;现实世界中的错误处理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含笔者在 Python Portland 用户大会上的演讲视频.
虽然某种意义上算不得专业,
但是,嗯哼,值得一看.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
作者是 Flask 的核心开发者&lt;/p&gt;
&lt;p&gt;视频: https://www.youtube.com/watch?v=8kTlzR4HhWo&lt;/p&gt;
&lt;p&gt;幻灯: https://speakerdeck.com/miguelgrinberg/error-handling-in-the-real-world&lt;/p&gt;
&lt;p&gt;代码: https://github.com/miguelgrinberg/merry
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.chicagodjango.com/blog/class-based-views-basics/"&gt;基于类的视图: 基础&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Class-based views&lt;/code&gt;
是作者最爱的 Django 特性!
嗯哼, 只是更加喜欢结构化的,可预测的,形式...
所以,很多情况下,这一特性是不必要的...&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nimia/public_drown_scanner"&gt;public_drown_scanner&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;327 Stars, 103 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;提供对 TLS 的 DROWN 攻击扫描.
基于 GPLv2 ,包含特定版本的
https://github.com/tintinweb/scapy-ssl_tls
以及
https://github.com/hiviah/pyx509&lt;/p&gt;
&lt;p&gt;感谢发布这么好的模块的作者.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rnevius/minimal-django"&gt;minimal-django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;194 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 的 &lt;code&gt;Hallo World&lt;/code&gt;...
其实, Django 也是可以象 Flask 般使用的,
此仓库强调了一个事实,
Django 项目,可以简化为最基本的功能,
变得象微型框架!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/danilovazb/GitMiner"&gt;GitMiner&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;126 Stars, 29 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专业的 Github 内容挖掘.
通过对 github 页面的搜索和自动化索引,
说到做到发现/研究代码/片段.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当 github 聚集了当前世界上最有价值的开源代码后,
对代码的深入理解/搜索, 都应该内置到 github 平台,
而这是 google 难以简单的完成的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rhiever/datacleaner"&gt;datacleaner&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;55 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能对数据集进行自动清理,
以便进行数据分析!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;果然是 CLI 工具,专门为 Pandas 清理掉不合格的脏数据.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rakanalh/pocket-cli"&gt;pocket-cli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;42 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pocket-CLI 是命令行工具,
用来从 CLI 管理/查阅/发布
GetPocket.com 文章.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/voxy/bluecanary"&gt;bluecanary&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动构建/管理  AWS CloudWatch Metric Alarms&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Eniac-Xie/PyConvNet"&gt;PyConvNet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Convolutional Neural Network 
的 Python 版本.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160307 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160307 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 62</title><link href="http://weekly.pychina.org/importpython/importpython-62.html" rel="alternate"></link><published>2016-02-26T21:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-02-26:importpython/importpython-62.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/62/"&gt;Import Python Weekly Newsletter - Issue No 62&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pep8.org/"&gt;PEP 8: Python 代码风格指南 (美化版)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PEP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kenneth Reitz 为人类撰写,
行之有效的 PEP 8 说明.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.deepgram.com/import-a-docker-container-in-python/"&gt;在 Python 中导入 Docker 容器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"我们创建了 sidomo - 简化 Docker Module* 
这样就能在任意 Linux 环境中运行写好的应用,
且不用折腾其它多余的东西"
~异常推荐学习,非常赞!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rightlag/pyswagger"&gt;pyswagger &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;~ Python 工具,
读取 Swagger 格式的 JSON (开放接口),
生成 HTTP 请求方法.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/heroku/~3/HDLl-kOvhw4/django_1_9_s_improvements_for_postgres"&gt;Django 1.9's 为 Postgres 的改进&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 1.9 ,
是包含了巨大改进的最新版本.
能管理以及并行进行测试运行,
且图形化输出,
等等非常多的新特性!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.europython.eu/post/139845342472"&gt;EuroPython 2016: 早鸟票已经发售&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;马上将开放 早鸟票 了,
目测前100张在1小时以内已经飞走,
另外只有300张了,
想抢到,早动手.
在 早鸟票售磬后,才是普通票.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.danvatterott.com/blog/2016/02/21/grouping-nba-players/"&gt;NBA 球员的性能分组 [xpost from /r/NBA]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In basketball, we typically talk about 5 positions: point guard, shooting guard, small forward, power forward, and center. Based on this, one might expect NBA players to fall into 5 distinct groups- Point guards perform similar to other point guards, shooting guards perform similar to other shooting guards, etc. Is this the case? Do NBA players fall neatly into position groups?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://treyhunner.com/2016/02/how-to-merge-dictionaries-in-python/"&gt;Python 中字典合并的惯用方法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能我们都折腾过合并字典,有很多方法,
有的慢有的丑,总之要很多行代码.
对比这些方法,来讨论什么是最 Pythonic 的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2016/02/building-better-user-experience-for.html?m=1"&gt;Graham Dumpleton: 提高 Python Web 部署的用户体验.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一次作者错失  PyCon 演讲机会,
内容就是这篇文章.
虽然没有被接受,但是,最近折腾的 Py web 应用部署,
感觉实在值得分享,准备用系列文章来阐述...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-resources.pythonblogs.com/304_python_resources/archive/1519_django_flask_and_redis_tutorial_web_application_session_management_between_python_frameworks.html"&gt;Django 对 Flask: 当 Django 变成错误选择时&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有些项目中,我们总是被迫从 Django 迁移到微框架中.
通常是用户期待个性的东西
(加入 ZeroMQ 什么的)
或是项目目标和 Django 的架构相左时.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.cronitor.io/scaling-django-breaking-out-not-breaking-up-c48b4a9e4a96#.rkal91f6n"&gt;扩展 Django: Breaking out not breaking up — Crafting Cronitor — Medium&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We launched Cronitor in June 2014 after a few weeks of hacking on an MVP. With an eye on shipping quickly we built everything within Django, including our crucial ping tracking endpoints, and it was a valuable force multiplier. The first version of our tracker was a normal view function that persisted directly to the database. Keep it simple, right?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@healthchecks/deploying-a-django-app-with-no-downtime-f4e02738ab06#.ygf6572if"&gt;不停机部署 Django — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当 healthchecks.io
开始承受每秒1个以上请求时,
对一个健康监察平台而言,
重启就意味着可能丢失关键事件日志了,
所以,如何部署新代码而不停机就越来越要命了..&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/deepgram/sidomo"&gt;sidomo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;162 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单 Docker Python Module&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Zephrys/monica"&gt;monica&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;99 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:fork_and_knife: 
命令行上的 chef 
带给你美味的食物&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="monica" src="https://camo.githubusercontent.com/0157872dc1e4568039dccb6e04bdb2944666624d/687474703a2f2f692e696d6775722e636f6d2f6d664a61367a692e6a70673f31" /&gt;&lt;/p&gt;
&lt;p&gt;命令行上的 &lt;code&gt;下厨房&lt;/code&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MartijnBraam/pyElectronics"&gt;pyElectronics&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;37 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电子工程师的 Python 3 库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eliawry/hogwarts"&gt;hogwarts&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A slackbot to award house points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/caihao/computational_physics_whu"&gt;computational_physics_whu&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;25 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算物理课用支持工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mikeckennedy/python-jumpstart-course-demos"&gt;python-jumpstart-course-demos&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有构建 10 应用的课程元件!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ericjang/draw"&gt;draw&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;17 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TensorFlow 实现的 回归神经网络图像生成画器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eeue56/json-to-elm"&gt;json-to-elm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;创建基于JSON输入的 Elm 类型别名和解码器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ardubs/goggles"&gt;goggles&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;twitter 的游览脚本!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160226 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160226 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 61</title><link href="http://weekly.pychina.org/importpython/importpython-61.html" rel="alternate"></link><published>2016-02-14T21:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-02-14:importpython/importpython-61.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/61/"&gt;Import Python Weekly Newsletter - Issue No 61&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythontesting.net/podcast/coverage-ned-batchelder/"&gt;和 Ned Batchelder 聊 Coverage.py  - Interview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Interview podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这期采访的是 Ned Batchelder .
大家都知道 Coverage.py 非常重要,
很多人在讨论如何进行覆盖测试.
那就听听作者的经验呗.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gun.io/blog/announcing-zappa-serverless-python-aws-lambda/"&gt;Zappa 发布- 无服务器的 Python 应用 - Gun.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Zappa 的第一个可用版本发布了
基于 AWS Lambda 及其接口的 "无服务器" Py 应用.
Zappa 能自动处理配置和部署,
现在用一个命令就可以部署有无限扩展能力的应用到云.
相比传统 Web 服务器,成本小很多!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;但是,平台也有了依赖性...
只能相信, AWS Lambda 是未来应用服务的主要接口形式了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/02/announcing-pycon-2016-talks-schedule.html"&gt;PyCon 2016 演讲日程发布&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;组委会一直在努力,
在提交窗口关闭前3周,终于发布了当前版本.
Portland, Oregon 的 PyCon 2016 !&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/GB-gmbiQww4/"&gt;最后一分钟完成幻灯: 撰写 PyCon 演讲的8步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 接受了作者议题:"创作优秀的编程 blog".
如果你的议题也接受了,先恭喜了!
现在立即规划时间/激励/大纲/排练,
试讲,持续改进,推迟幻灯提交! 为了最终的精彩!&lt;/p&gt;
&lt;p&gt;PyCon要来了，来学习下写幻灯的技巧吧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://geezhawk.github.io/2016/02/02/using-react-with-django-rest-framework.html"&gt;Django Rest 框架和 React.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家应该都同意 React 和 Django Rest 框架都非常赞!
但是如何组合起来发布真正可用的应用?!
特别是不怎么清楚 webpack, npm, 和 babel.
那么这里介绍如何令 DRF(Django REST 框架)和 React 结合起来!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.blog.pythonlibrary.org/2016/02/09/python-101-screencast-released/"&gt;Python 101 发布截屏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实已经完成了一个多月了.
现在终于上架发售了.
这里发布此书全部 44 章的截屏.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.lerner.co.il/free-webinar-pandas-and-matplotlib/"&gt;免费 Webinar: Pandas 和 Matplotlib&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;webcast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;长达一小时的免费研讨会.
这次我们探讨日益流行的数据科学工具,
即 Pandas 和 Matplotlib.
如何读取数据到 Pandas 中?
并操纵以及绘制图表?!
这里聚集大量实例,并进行深入 Q&amp;amp;A.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fullstackpython.com/docker.html"&gt;Docker - 全桟 Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker 是开源基础架构管理平台,用来运行和部署软件.
可以将操作系统以及依赖环境集成在一Ω起打包.
长远来看,可以轻松管理容器中任何类型的服务,
无论是否在 AWS/GCP 或是 Linode/Rackspace 等等基础抽象平台上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pytest.org/latest/announce/sprint2016.html"&gt;2016六月 20th-26th Python testing sprint &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 核心群准备进行历史上最大的 sprint,
在德国弗莱堡的黑森林小镇.
截至16年2月.
已经从 Indiegogo 获得了资金,
以支持费用,相关页面也提及了一些初步的主题.
活动链接是
https://www.indiegogo.com/projects/python-testing-sprint-mid-2016#/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/138923168468"&gt;你的 Django 故事: Meet Aisha Bello&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aisha Bello is a current student at Cardiff Metropolitan University, where she’s finishing up a MSc in Information Technology. Her final project is centered on open source data mining technologies for small and medium-sized hospitality organizations. Aisha co-organized and coached at Django Girls Windhoek in January 2016, and is also organizing a Django Girls workshop in Lagos, Nigeria in February 2016.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.python.org/dev/peps/pep-0513"&gt;PEP 513 — A Platform Tag for Portable Linux Built Distributions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PEP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This PEP proposes the creation of a new platform tag for Python package built distributions, such as wheels, called manylinux1_{x86_64,i686} with external dependencies limited to a standardized, restricted subset of the Linux kernel and core userspace ABI. It proposes that PyPI support uploading and distributing wheels with this platform tag, and that pip support downloading and installing these packages on compatible platforms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-42-sympy-with-aaron-meurer"&gt;播客.&lt;strong&gt;init&lt;/strong&gt;: SymPy 和 Aaron Meurer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在寻找一种开源的 Mathematica 或 MatLab 替代品?
没有比 SymPy 更加合适的了!
这是种精心打造的,易于使用的计算机代数系统
(CAS)
这期节目中和项目创建人 Aaron Meurer 聊
SymPy 的功能,你甚至于能用它来说话!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ibm.com/developerworks/community/blogs/jfp/entry/Why_Python?lang=en"&gt;Why Python ?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么你推荐 Python !?
这是作者安利时被同事问到的问题.
也是常见问题,
值得用事实认真回答一下.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://next.kii.eliotberriot.com/stream/eliotberriot/items/25"&gt;登记模式 | entrys | eliotberriot | Stream&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在很多程序中笔者都用这种模式来解决问题.
但是发觉没有人讨论过.
所以,认真总结一下!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bbrodriges/luthor"&gt;luthor - 又一简洁的库来折腾 XML&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luthor 使用了所有来自 pholcidae 的实效技巧来处理 XML ,
使其前所未有的简洁!&lt;/p&gt;
&lt;p&gt;Luthor 使用 lxml 的迭代解析机制来解析任意大小的 XML &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Py3 专用!
)&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BigchainDB/bigchaindb"&gt;bigchaindb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;158 Stars, 14 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可扩展的数据库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MatthieuCourbariaux/BinaryNet"&gt;BinaryNet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;76 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Training Deep Neural Networks with Weights and Activations Constrained to +1 or -1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bartTC/pip-check"&gt;pip-check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;54 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;帮助你检查所有安装过的模块更新状态.
类似 &lt;code&gt;pip list -o&lt;/code&gt; 但是有颜色了!
灵感来自 &lt;code&gt;npm-check&lt;/code&gt; 但是目前缺少很多功能.(yet).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/caioariede/pyq"&gt;pyq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;45 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能用 jQuery样 的形式来搜索 Python 代码的工具!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;❯ pyq3 &amp;#39;class[name=FloatField] &amp;gt; def&amp;#39; django/forms
django/forms/fields.py:283     def to_python(self, value):
django/forms/fields.py:299     def validate(self, value):
django/forms/fields.py:308     def widget_attrs(self, widget):
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YerevaNN/Dynamic-memory-networks-in-Theano"&gt;Dynamic-memory-networks-in-Theano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;26 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kumar 等等完成的动态内存网络的实现&lt;/p&gt;
&lt;p&gt;http://arxiv.org/abs/1506.07285&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/coffeemood/grabbySub2"&gt;grabbySub2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抓电影/视 字幕.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EntilZha/pygraph"&gt;pygraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python graphviz 的 CLI 界面.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Far0n/kaggle-homesite"&gt;kaggle-homesite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Top15 Model for Kaggle-Competition "Homesite Quote Conversion"&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tensorflow/models"&gt;models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;9 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 TensorFlow 进行模块构建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/elasyaf/django_simpleCrud"&gt;django_simpleCrud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Bootstrap CSS + jQuery 的基于 Django 的简单 CRUD 应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/powerupcloud/AWSInventoryLambda"&gt;AWSInventoryLambda&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;7 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;保存 AWS 对象到 S3 中的 CSV,
并用 email 触发.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KaseiFR/modpack-helper"&gt;modpack-helper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;易于部署的 Minecraft 服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spanezz/pkgquiz"&gt;pkgquiz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从解释来反推对应 debian 包名.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hachibu/erandom"&gt;erandom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似 /dev/random ,不过是 emojis!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="erandom" src="https://github.com/hachibu/erandom/raw/master/example.png" /&gt;&lt;/p&gt;
&lt;p&gt;有腔调的!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rick2600/bin_analyzer"&gt;bin_analyzer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Toy project for static analysis of ELF binaries&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zechamkank/animated-win-background"&gt;animated-win-background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Windows 上设置动画背景(GIF 帧)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jobec/django-auth-adfs"&gt;django-auth-adfs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 ADFS 的 Django 认证后端.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160214 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160214 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 60</title><link href="http://weekly.pychina.org/importpython/importpython-60.html" rel="alternate"></link><published>2016-02-05T21:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-02-05:importpython/importpython-60.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/60/"&gt;Import Python Weekly Newsletter - Issue No 60&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://talkpython.fm/episodes/show/44/project-jupyter-and-ipython"&gt;播客访问 Jupyter 和 IPython 项目&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目下 Python 中增长最快的领域之一就是科学计算.
其中有几个关键包: NumPy / SciPy / 及其相关组件,
都集成在 IPython(更名为 Jupyter) 中,并能方便的可视化!
44期节目探讨了这方面的发展.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kracekumar.com/post/138492827565"&gt;测试 Django Views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;移动和 SPA(单页应用)已经是 web 开发中 API 为中心的主要命题了.
这对于以往返回 html 页面的Django 应用而言,
测试这种 view 是困难的,
因为 REST 语义和 HTTP 状态码是关联的...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.djangogirls.org/post/138480005403"&gt;Your Django Story: Meet Safia Abdalla&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;interview
Safia Abdalla is an energetic software engineer with an interest in data science for social good and delicious coffee. She is the organizer of PyData Chicago and the founder of dsfa, a consulting company providing data science services to small and medium local businesses. Safia is also a frequent conference speaker and open-source contributor who’s passionate about helping others to reach their maximum potential.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.peterbe.com/plog/how-to-no-mincss-links-with-django-pipeline"&gt;How to no-mincss links with django-pipeline&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如题 :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mail.scipy.org/pipermail/ipython-dev/2016-February/017056.html"&gt;官方公告 - IPython 4.1.0 放出!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前几天释放后,没有收到任何有效 bug 反馈,
所以,嗯哼! IPython 4.1.0 is now out !&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.apcelent.com/json-web-token-tutorial-example-python.html"&gt;实例理解 Python 中的 JSON Web 令牌&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章解析了如何使用 JSON Web Token 来保护我们的 REST 接口.
JSON 网络令牌是 RFC 7519 提出的双向安全方案,
JWT 已获得关键厂商的支持,包含 Firebase, Google, Microsoft, 以及 Zendesk.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://rustyrazorblade.com/2016/02/async-python-and-cassandra-with-gevent/"&gt;高可扩展 - Cassandra 和 Gevent 实现 Python 的异步&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 2.7 中的线程/GIL/异步锁等等导致异步代码很折腾.
好在艰难岁月中还是有靠谱方案的;
比如 IronPython 和 Jython 就没有 GIL 以及相关问题.
当然, 还有专用的 Stackless Python,
通过微进程管理,避免操作重量级的操作系统进程,以及其它功能.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/django-ses/django-ses"&gt;django-ses/django-ses: Django 实现的 Amazon Simple Email Service 后端&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django-SES 是种 drop-in 邮件后台,
不用传统的 SMTP 服务,
而是基于很赞的 Amazon Simple Email Service (SES)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/YPlan/django-ratelimit"&gt;YPlan/django-ratelimit: 为 Django 提供基于缓存的限速&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django Ratelimit 
提供修饰器来声明限制,
可基于 IP 或请求, 无论 GET/POST 方法.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Muterra/py_smartyparse"&gt;Smartyparse: 面向对象的动态二进制打包和解包&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SmartyParse 
是面向 3.3 以上 Python 的二进制 打包/解包（又名建筑/解析）格式库.
如果需要定义二进制格式
(.tar, .bmp, 字节式网络数据包..)
或是开发专用格式,
SmartyParse 能直接从 Python 对象转换成拟定格式.
操作对象是 &lt;code&gt;Construct&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/520/flask-blueprints/"&gt;Flask 蓝图&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Structure, compose, 以及 build powerful Flask HTML-based 
应用,
基于高级应用设计模式完成 JSON/XML-based APIs .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/447/flask-framework-cookbook/"&gt;Flask Framework Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask Framework Cookbook 
帮助我们了解 Flask 框架真正强大的扩展能力.
能从不同途径理解 Flask 应用,
也能学习到 模板/ORM 以及视图层的细节.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/526/geoprocessing-with-python/"&gt;用 Python 进行地理分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;几乎所有的汽车，手机，或者相机具有GPS传感器
以及航空照片，卫星图像
的数据都包含 国家界限，道路，河流和溪流...
而且可以从很多网站免费下载!
地理处理就是读取，分析和编程方式呈现地理空间数据的科学!&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mapio/GraphvizAnim"&gt;GraphvizAnim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;230 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;闭关锁国 graphviz 生成有动态效果图片的工具.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="dfv.gif" src="https://github.com/mapio/GraphvizAnim/raw/master/examples/dfv.gif" /&gt;&lt;/p&gt;
&lt;p&gt;仙品!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/boramalper/himawaripy"&gt;himawaripy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;130 Stars, 33 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将几近实时的地球图片设定为桌面背景!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 &lt;a href="https://en.wikipedia.org/wiki/Himawari_8"&gt;Himawari 8 (ひまわり8号)&lt;/a&gt;
提供的图片资源...&lt;/p&gt;
&lt;p&gt;日本的公开数据资源这么高端了哪!!!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BichengLUO/K3SimSearch"&gt;K3SimSearch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;42 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单的脚本,
用 Python 从 GRE 单词中指出指定单词的同义词等等...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prodicus/tnote"&gt;tnote&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;30 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:clipboard: 命令行记录本,
好用到老奶奶也稀饭...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;                            _________ _        _______ _________ _______ 
                            \__   __/( (    /|(  ___  )\__   __/(  ____ \
                               ) (   |  \  ( || (   ) |   ) (   | (    \/
                               | |   |   \ | || |   | |   | |   | (__    
                               | |   | (\ \) || |   | |   | |   |  __)   
                               | |   | | \   || |   | |   | |   | (      
                               | |   | )  \  || (___) |   | |   | (____/\
                               )_(   |/    )_)(_______)   )_(   (_______/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;参考演示: &lt;a href="https://asciinema.org/a/35557"&gt;tnote: A dead simple note taking app : v0.0.2 - asciinema&lt;/a&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BuzzFeedNews/zika-data"&gt;zika-data&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;27 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data — 以及数据指向
所有 2015–16 Zika 病毒相关的!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mpdehaan/camp"&gt;camp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算机辅助音乐创作&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/t0mj/Tasker"&gt;Tasker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个日常任务管理 CLI 工具.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tasker" src="https://cloud.githubusercontent.com/assets/7049067/12701187/d7bf58d6-c7c6-11e5-8e27-bbfc4f8ecc2e.png" /&gt;&lt;/p&gt;
&lt;p&gt;是的,我们就是忍不住创建各种 DSL
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/miyakogi/livemark.vim"&gt;livemark.vim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实时预览 MD 的 vim 插件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xfilipe/spotify-music-downloader"&gt;spotify-music-downloader&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;脚本能从 youtube 中下载音乐,
给 spotify(Linix 中) 播放.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/msfidelis/PythonBackupSystem"&gt;PythonBackupSystem&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rotinas de Backup Full e Diferencial feitas em Python #IndustriaFox&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160205 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160205 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 59</title><link href="http://weekly.pychina.org/importpython/importpython-59.html" rel="alternate"></link><published>2016-01-30T01:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-01-30:importpython/importpython-59.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/59/"&gt;Import Python Weekly Newsletter - Issue No 59&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/blog/post/learn-to-program-with-minecraft"&gt;在 minecraft 中学习编程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Minecraft(我的世界) 
是最著名的沙箱游戏.
用户通过接口在3D 世界中探索/创造立方体为基础的世界.
当然的有 Python 接口,
可以可以编程来创建/控制/使用这一无限世界.
链接是图书信息...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nedbatchelder.com//blog/201601/python_testing_book_and_podcast.html"&gt;Python 测试/图书/播客&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Harry Percival 的好书,有关测试驱动开发在Python 编程实践中.
如果之前注意过此书信息,
那么这是另外一个渠道来感受其魅力.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5813"&gt;用  Marathon API 部署 Py3 应用到 Apache Mesos 集群&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工作中,笔者一直在使用 Apache Mesos 部署各种应用,
包含 go/python/lua 等等.
同时也在使用  Chronos 和 Marathon.
文章中展示如何对 Marathon(通过 Docker)管理的本地 Mesos 集群
进行简单的应用部署.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/caktus/margarita/"&gt;caktus/margarita: 很赞的 Django 部署相关 Salt states 脚本集合.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仓库中收集了各种基于 SaltStack 的部署/监控模块.
专门为 Caktus Django 项目创建.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.djangogirls.org/post/138026903728"&gt;Your Django Story: Meet Katie Bell&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;interview
Katie Bell is a developer at Grok Learning, where she’s been doing a combination of things since joining the team in March 2015. She builds new components of the learning platform and also writes course content. Grok Learning provides programming and web development courses to be used in schools. Before Katie moved back to Sydney to join Grok, she was a Site Reliability Engineer at Google in Switzerland, working on storage systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/reubano/meza"&gt;meza: 处理表格( tabular )数据的 Python 工具集&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;meza 是个 Python 库,
专门读取和处理表格数据 ;
函式型接口,擅长读写大文件,
并支持十数种文件格式.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydelhi.org/conference/"&gt;PyDelhi Conference&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Py德里大会 又一个技术大会,
由 PyDelhi 社区创办,每年一次,关注 Python 技术的应用和开发.
今年是第一届,期待全球 Pythoneer 来参加.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/examples-of-using-walrus-a-lightweight-redis-toolkit"&gt;Walrus 实例, 又一种轻型 Redis 工具集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;walrus 是作者结合 Python 和 Redis 工作经验的作品.
包含大量 Redist 原语水平的 Python 接口以及功能,
文章中展示各种功能,并演示在项目中使用的情景.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ugcoder/Py-URL-Shortener"&gt;基于 Python 的缩址&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Py URL Shortener 
是供 Flask 应用中对 URL 缩址以及重定向支持.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0513/"&gt;PEP 513 - 便携式 Linux 构建发布的标签平台&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PEP 提案描述了又一种 Python 包构建发布的标签平台,
类似 wheels, 调用 &lt;code&gt;manylinux1_{x86_64,i386}&lt;/code&gt; 外部依赖限制,
来利用 Linux 内核限制在核心用户空间ABI.
建议 PyPI 支持在标签平台中上传以及发布 wheel 包,
以便在所有支持平台上通过 pip 完成下载和安装.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/caktus/django-scribbler"&gt;django-scribbler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;django-scribbler 
是片段管理应用,可以包含在 Django 发布的web 网站中&lt;/p&gt;
&lt;p&gt;http://readthedocs.org/docs/django-scribbler/ &lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ncrocfer/whatportis"&gt;whatportis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;104 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;搜索端口名和数值的命令&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ whatportis redis
+-------+------+----------+---------------------------------------+
&lt;span class="p"&gt;|&lt;/span&gt; Name  &lt;span class="p"&gt;|&lt;/span&gt; Port &lt;span class="p"&gt;|&lt;/span&gt; Protocol &lt;span class="p"&gt;|&lt;/span&gt; Description                           &lt;span class="p"&gt;|&lt;/span&gt;
+-------+------+----------+---------------------------------------+
&lt;span class="p"&gt;|&lt;/span&gt; redis &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;6379&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   tcp    &lt;span class="p"&gt;|&lt;/span&gt; An advanced key-value cache and store &lt;span class="p"&gt;|&lt;/span&gt;
+-------+------+----------+---------------------------------------+

$ whatportis 5432
+------------+------+----------+---------------------+
&lt;span class="p"&gt;|&lt;/span&gt; Name       &lt;span class="p"&gt;|&lt;/span&gt; Port &lt;span class="p"&gt;|&lt;/span&gt; Protocol &lt;span class="p"&gt;|&lt;/span&gt; Description         &lt;span class="p"&gt;|&lt;/span&gt;
+------------+------+----------+---------------------+
&lt;span class="p"&gt;|&lt;/span&gt; postgresql &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;5432&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   tcp    &lt;span class="p"&gt;|&lt;/span&gt; PostgreSQL Database &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; postgresql &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;5432&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;   udp    &lt;span class="p"&gt;|&lt;/span&gt; PostgreSQL Database &lt;span class="p"&gt;|&lt;/span&gt;
+------------+------+----------+---------------------+
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;实用到爆的工具!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emre/django-stackoverflow-trace"&gt;django-stackoverflow-trace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;104 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定制的Django的堆栈跟踪&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jeremybmerrill/flyover"&gt;flyover&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;62 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;当前&lt;/code&gt;有哪些航班飞过我们头顶?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davidmcclure/open-syllabus-project"&gt;open-syllabus-project&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;30 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们能从 100万 以上的课程中学到什么?!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极...所以,课程并不是都值得学习!?
还是人类的知识体系已经发展到没有这么多课程就无法承载了?!
又或是...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ianmiell/jenkins-phoenix"&gt;jenkins-phoenix&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Docker 进行无状态的 Jenkins 部署&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mozilla/django-post-request-task"&gt;django-post-request-task&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;celery 任务类的扩展,
可以在请求结束后,
通知为 Django 的 &lt;code&gt;request_started&lt;/code&gt; 和 &lt;code&gt;request_finished&lt;/code&gt; 信号.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/s/preprocessor"&gt;preprocessor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优雅的 tweet 预处理...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/erikrose/pipstrap"&gt;pipstrap&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单脚本,能伪装可信根,以便 pip 安装.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ffunenga/pipgh"&gt;pipgh&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A tool to install python packages from Github.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上次介绍过,作者曰了,先别用...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Moises404/Gitffiti"&gt;Gitffiti&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gitffiti Repo&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160131 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160130 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 58</title><link href="http://weekly.pychina.org/importpython/importpython-58.html" rel="alternate"></link><published>2016-01-22T11:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-01-22:importpython/importpython-58.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/58/"&gt;Import Python Weekly Newsletter - Issue No 58&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.importpython.com/jobboard/"&gt;ImportPython 工作委员会更新 以飨读者&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;job market&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工作栏启用已有半年,
至少收到了3封正式的感谢信,因为帮助团队找到了合适的程序猿.
无法更加高兴了!
去年一共25则岗位信息,平均每期3则.
如果你对全球靠谱的程序猿/媛有需求,
请尝试我们这儿完全免费的工作栏吧!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只是鉴于中文世界,大家都没什么好渠道直接肉身翻越出去,
所以,工作栏这一章节,一般是清空的,间或有朋友委托发布过几则信息.
当然的,如果你想在 蠎周刊上发布免费的 Pythonista 招聘信息,请向大妈邮件说明:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;zoomquiet+HR[AT]gmail.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mail.python.org/pipermail/web-sig/2016-January/005357.html"&gt;讨论 - 对于 WSGI 2.0 你认为应该和不应该的?!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又是新的一年, 对于 WSGI 2.0 也更加急迫了.
可惜的是过去一年, 在 Rob Collins 领导下并没有完成相关承诺.
在网络中引发的讨论,也反映出开发者们对 WSGI 的限制很不舒服,
直接体现在应用和服务开发者都在尝试就 WSGI 的退出整理为一个框架,
以便更加契合现代 web 开发.
特别是  Andrew Godwin 在 Django 中提出的 channels 概念,
这代表应用开发者在远离 WSGI 的一种选择....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythontesting.net/podcast/harry-percival-pt009/"&gt;用 Python, Selenium, Django 测试 Web Apps. 对 Harry Percival 的采访.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果在开发/测试 web 应用,特别是基于 Django 的,
一定非常喜欢这一期的内容.&lt;/p&gt;
&lt;p&gt;嗯哼, Harry Percival 还是 "The GOAT book" 的作者 !-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jamesonricks.com/?p=159"&gt;[教程]: 部署 Python 3, Django, PostgreSQL 到 AWS Elastic Beanstalk | Jameson Ricks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django , aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大家都知道 AWS 的服务切换是怎么来的.
能搜索出来有关使用 Elastic Beanstalk 部署 Django 应用的文章都太老旧了,
所以最新的有关 Python 3 的部署手册来了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://orenmn.wordpress.com/2016/01/16/understanding-cpython-by-patching-part-4/"&gt;通过补丁来理解 CPython – 第一部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过去一年多的时间里, 作者对 CPython 进行了一些尝试
整理为四篇文章的系列,值得一观!&lt;/p&gt;
&lt;p&gt;(注意,提及的精彩之处都是在 Python 3 背景中的 CPython). &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/jF-S83DB134/"&gt;PyCharm 入门视频教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一直以来都是用户在热烈的为 PyCharm 制作教程的,
现在终于有官方的系列视频教程了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.ssundarraj.me/the-python-gil-in-2-minutes-80d74d56a1a0"&gt;3分钟实用 Python GIL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;gil&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多线程一直是很多新人或是老手都困惑的概念.
Python 使用的 GIL 又追加了一层混乱.
从来没有被清晰的阐述过.
那么尝试用 3分钟 说清楚这几个对象!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一位印度程序猿在 PyCon 上的演讲;
当然不止 3分钟,哥整整曰了46分钟!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dobarkod/django-queryinspect#readme"&gt;Django 中的 SQL 查询检验器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Query Inspector 是个中间件,
对 Django 应用中所有 web 请求涉及的 SQL 查询进行检验和报告.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/4144js/resources_for_learning_functional_programming_in/"&gt;在 Python 中学习函数式编程的资源?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自伟大的 reddit!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@healthchecks/deploying-a-django-app-with-no-downtime-f4e02738ab06#.1fcfu4907"&gt;无需停机平滑部署 Django 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当 healthchecks.io 
开始承受每秒超过一次要求时,
就不能随意重启服务了.
对于监控服务,当然不能错过任何一次 http 请求!
所以,...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2016/01/now-accepting-financial-aid-applications.html"&gt;PyCon 现在接受财政援助&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你在寻求 票务或是其它财务援助,现在就有了.&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;p&gt;~ New Books&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/525/real-world-machine-learning/"&gt;现实世界的机器学习&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现今, 大数据已经是 &lt;code&gt;近实时&lt;/code&gt; 决策关键支撑了,
机器学习(ML)是数据工作流的重要组成部分.&lt;/p&gt;
&lt;p&gt;ML 可以快速从海量信息中提取和匹配决策,
甚至于超过人的直觉认知.&lt;/p&gt;
&lt;p&gt;这些系统使用复杂的计算和统计工具来建立模型,
可以识别可视化的模式,预测结果,并提出建议!&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/samshadwell/TrumpScript"&gt;TrumpScript&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1033 Stars, 48 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;令 Python 再次伟大!
特别针对美国读者: 请认真理解 Donald trump 吧!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;基于唐纳德·特朗普的修辞手法的编程语言 &lt;a href="https://www.inverse.com/article/10448-coders-assimilate-donald-trump-to-a-programming-language"&gt;Coders Assimilate Donald Trump to a Programming Language | Inverse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;真爱!&lt;/p&gt;
&lt;p&gt;&lt;img alt="examplescripttooutput" src="http://i1.wp.com/media.boingboing.net/wp-content/uploads/2016/01/examplescripttooutput-shows-a-more-complex-bit-of-trumpscript-at-the-top-after-the-first-cat-comm1.png?w=970" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prodicus/spaceShooter"&gt;spaceShooter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;71 Stars, 11 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Pygame 重制的经典游戏!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wong2/pick"&gt;pick&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;59 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;帮助我们在终端中进行交互式列表选择的库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nekocode/tornaREST"&gt;tornaREST&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;44 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:cyclone: 基于 Tornado 实现的简洁 RESTful web 服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/felixlaumon/kaggle-right-whale"&gt;kaggle-right-whale&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;25 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2nd place solution to the Kaggle Right Whale challenge&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Huangtuzhi/reality-of-Dream-of-Red-Mansions"&gt;reality-of-Dream-of-Red-Mansions&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;20 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对红楼梦前80章和后40章的用词进行比对!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/HHammond/PrettyPandas"&gt;PrettyPandas&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;17 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;美化 Pandas 表格输出的样式表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gabrielhora/github_reviewer"&gt;github_reviewer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 GitHub Webhooks 以及 Commit Status API 
来控制 pull requests 的评审&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nicolasessisbreton/fython"&gt;fython&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fython 就是用 Python 语法的 Fortran &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;老树新花儿!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/21hackathon/git-money"&gt;git-money&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 github 中的 pull requests 来赚钱!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/singpenguin/loadcf"&gt;loadcf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python 配置文件加载器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jefersondaniel/notebook-api"&gt;notebook-api&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rest API for notes, uses Python Flask, Mongo, Behave and Docker-Compose&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/perhapsspy/logen-trace"&gt;logen-trace&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Delivery confirmation for Logen(https://www.ilogen.com)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_4"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160122 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160122 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 57</title><link href="http://weekly.pychina.org/importpython/importpython-57.html" rel="alternate"></link><published>2016-01-07T23:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-01-07:importpython/importpython-57.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/57/"&gt;Import Python Weekly Newsletter - Issue No 57&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/blog/python/development-and-deployment-of-cookiecutter-django-via-docker/"&gt;用 Cookiecutter-Django 通过 Docker 进行开发和部署 - Real Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能快速引导新人完成一个 Django 项目的启动和运行是非常有必要的.
这其实需要非常合理的预安装,
通过实例来看看怎么折腾这事儿....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://toddhayton.com/2016/01/04/book-review-web-scraping-with-python/"&gt;书评: 用 Python 进行网页抓取&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了不起的好书,
包涵了很多重要主题,
在短短 140 页中,作者提供出足够的信息,
并在结尾给出了关键技术/代码相关资源.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;同创业项目一样,图书也倾向小而美...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://geoffboeing.com/2015/12/world-population-projections/"&gt;美妙的完全可定制的等值线图生成,用 Python + matplotlib + basemap (在 github repo 中直接上 ipython notebook)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;联合国世界人口展望数据集,描述了 U.N 
对每个国家的人口直到 2100 年的预测,
最近刚刚发布了修订版本.
作者分析/可视化/数据映射方法和代码如下...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.toptal.com/angular-js/facebook-login-angularjs-app-satellizer"&gt;在 AngularJS App 中用 Satellizer 整合入 Facebook 登录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Satellizer 是 AngularJS 中易用的令牌式认证模块,
简化了认证的实施过程,
内置有 google/Facebook/LinkedIn/Twitter/Insagram/Github/Bitbucket
/Yahoo/Twitch 以及 M$(Windows Live) 帐号.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gregblogs.com/tlt-serializing-authenticated-user-data-with-django-rest-framework/"&gt;用 Django REST 框架序列化用户身份信息&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想管理一种用户无关的数据:非用户查看网站的数据.
本来想通过扩展定制字段来进行,
但是, Django 的 REST 框架,可以更加简单的完成!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/136629466373"&gt;你的 Django 故事: 遇见 K. Rain Leander&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;K. Rain Leander 
是位系统的跨学科的开发者和布道师,
同时拥有 IT 和 舞蹈硕士学位.
史诗般的公共演说家.
头脑里塞满了各种东西...
进一步的还是 RDD 经理,
OpenStack/Django女孩 技术贡献者.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://albertoconnor.ca/blog/2016/Jan/6/disabling-migrations-while-testing"&gt;测试中禁用迁移&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你有一个大型 Django 1.7+ 系统,
即使有 &lt;code&gt;--keepdb&lt;/code&gt; 参数,运行测试依然非常慢.
因为,新的迁移框架并没有真正作什么.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyMOTW/~3/ATlwJ72Lxmo/"&gt;本周 Py3 模块之星&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过去几年间, Python 标准模块以身作则,
总是对兼容迁移拖延不止....
现在,终于可以高兴的宣告, 终于开始规模化的迁移了,
准备每周发布更新!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/amontalenti/elements-of-python-style"&gt;Python 风格要素&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该文件超出了 PEP8 的内容,
给出了作者认为伟大的 Python 风格的核心.&lt;/p&gt;
&lt;p&gt;This document goes beyond PEP8 to cover the core of what I think of as great Python style. It is opinionated, but not too opinionated. It goes beyond mere issues of syntax and module layout, and into areas of paradigm, organization, and architecture. I hope it can be a kind of condensed "Strunk &amp;amp; White" for Python code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3z9rwt/pymux_a_tmux_clone_in_pure_python/"&gt;Pymux: 纯粹 Py 实现的 tmux clone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多终端复用器的 Py 实现&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Red5d/docker-autocompose"&gt;docker-autocompose&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;31 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从运行中的 Docker 容器中, 自动生成 docker-compose yaml 定义,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvbn/import_from_github_com"&gt;import_from_github_com&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 github 中搜索/加载 模块,
就象 golang&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Wow ! 这样好嘛!?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(Please don't use it)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;人家也曰了实话了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ladyada/New-Year-Tower-Light"&gt;New-Year-Tower-Light&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IoT Tower alert we did this last night of 2015!!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/basalamader/Job-Parser"&gt;Job-Parser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过小型 web 分析器
获得所有高层职位并可视化各个层次的工资情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aaugustin/django-sequences"&gt;django-sequences&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成整型 gap-less 序列.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/x3omdax/PenBox"&gt;PenBox&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有渗透测试需要的所有工具!&lt;/p&gt;
&lt;p&gt;A tool that has all the tools , penetration tester's repo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/frou/GoFeather"&gt;GoFeather&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 Sublime Text 3 完成的 Go 模式的拟造&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/smoqadam/PyFladesk-rss-reader"&gt;PyFladesk-rss-reader&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单 rss reader 用 PyFladesk 完成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/texruska/Mosaicer"&gt;Mosaicer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快而糙的 mosaic 生成&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;16010? &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160107 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 56</title><link href="http://weekly.pychina.org/importpython/importpython-56.html" rel="alternate"></link><published>2016-01-04T16:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2016-01-04:importpython/importpython-56.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/56/"&gt;Import Python Weekly Newsletter - Issue No 56&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/data-science-notebooks"&gt;持续更新的数据科学 IPython Notebooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;深度学习,SPark,Hadoop MapReduce, Kaggle, scikit-learn, matplotlib, pandas, NumPy, AWS, Python 精粹 以及各种命令行技巧,
都在 ipynb 中...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2015/12/become-pycon-2016-volunteer.html"&gt;成为 PyCon 2016 志愿者!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 大会一直是纯粹的社区运营.
如果你有兴趣成为志愿者,有很多渠道可以达成.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/136156887178"&gt;你的 Django 故事: 遇见 Amber Brown&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Amber Brown 
是位自由软件开发人员, 以及计算机倡导者,
多年以来坚持编程实践,
为人周知的是著名项目 Twisted 的发行经理,
应邀在各种大会上分享有关经验,
包含: PyCon Czech Republic ‘15, DjangoCon Australia ‘15, 以及 Django Under The Hood ‘15.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3yskc5/incase_you_need_to_build_database_driven_web/"&gt;Flask Scaffold&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask-Scaffold 
帮助你快速建议类似 blog 的 CRUD 式 web 网站,
基于 Py3 和 Angularjs 以及简要的模块.
通过 RESTful 接口还能支持原生 移动应用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/python-concurrency-and-database-connections"&gt;Django 中的并发数据库连接 | Heroku 开发中心&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当使用类似 Gunicorn 的多进程服务器时,
必须知道应用将数据推送到数据库,也是多连接的,
每个进程对应一个连接.
为了适应这点,很多工具都创建了可以同时容纳很多连接的连接池.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.revsys.com/12days/caching-django-sessions/"&gt;缓存 Django 会话 - 性能优化 12 天 - REVSYS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django , performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;都知道最好别用数据库来缓存 Django 的会话吧?
这真的应该多检查几次.
对于各种规模的系统,这是最容易忽视的潜在问题.
嘦在你的配置文件中搜索(grep) &lt;code&gt;SESSION_ENGINE&lt;/code&gt; ,
就知道这坑是否在了,
如果不幸没有找到,那系统将自动保留会话到数据库,
你将很快获得一个巨大的哀伤...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://raspberry-python.blogspot.com/2015/12/the-star-wars-star-ships.html"&gt;The Star Wars 星舰&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;numpy&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 代码推测出哪架星舰最快!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好科学!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howchoo.com/g/ymfhmtrhyjg/python-regexes-match-objects"&gt;Python 正则表达式 - 匹配对象&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;regex&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Python 正则表达式可以在返回对象匹配.
此振兴,介绍如何利用这一形象.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.apcelent.com/most-popular-django-library-2015.html"&gt;2015 十大最受欢迎的 Django 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一年, 用我们的方式来回顾高科技领域趋势.
通过访问, 我们获得了去年最受欢迎的 Javascript 库,
相同方式,我们也找到了最流行的 2015 Django 库.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;top3 是 Wooey/Channels/healthchecks.io&lt;/p&gt;
&lt;p&gt;都没听说过...
)&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hardmaru/sketch-rnn"&gt;sketch-rnn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;106 Stars, 22 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;应用 Multilayer LSTM 以及 Mixture Density Network 
来在 TensorFlow 中创建路径建模矢量 SVG 图形&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="sketch-rnn" src="https://camo.githubusercontent.com/3c5e3c5941d02a01338d22d763790c953dfa5fba/68747470733a2f2f63646e2e7261776769742e636f6d2f686172646d6172752f736b657463682d726e6e2f6d61737465722f6578616d706c652f747261696e696e672e737667" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reubano/pygogo"&gt;pygogo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;57 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个 Py 日志库,传说很给力&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="gogo" src="https://raw.githubusercontent.com/reubano/pygogo/master/gogo.png" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kazenniy/sgio"&gt;sgio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;28 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ATA Pass-Through library for python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/v1k45/python-qBittorrent"&gt;python-qBittorrent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;27 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;qBittorrent Web API (v3.1.x 以上版本兼容) 的 Python 包装&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/drhagen/xkcd11th"&gt;xkcd11th&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为什么 11号 总是低于每月其它日期的出现?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sauravtom/gifmail"&gt;gifmail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动画版的 E-mails FTW&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="gifmail" src="https://camo.githubusercontent.com/99d9b2c9654c4779ff64955da66d5b0640f60a3c/687474703a2f2f736175726176746f6d2e636f6d2f7374617469632f696d672f6769666d61696c2e676966" /&gt;&lt;/p&gt;
&lt;p&gt;可是,这是为什么哪,,,
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hackebrot/poyo"&gt;poyo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:chicken: 又一 YAML 解析器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ellisonbg/vizarray"&gt;vizarray&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 1d 以及 2d NumPy 数组可视化的模块&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="vizarray" src="https://github.com/ellisonbg/vizarray/raw/master/docs/images/example1.png" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hzwer/termdic"&gt;termdic&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;命令行上的字典.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="termdic" src="https://github.com/hzwer/termdic/raw/master/example.png" /&gt;&lt;/p&gt;
&lt;p&gt;国货, 使用有道api
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;160104 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;160104 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 55</title><link href="http://weekly.pychina.org/importpython/importpython-55.html" rel="alternate"></link><published>2015-12-24T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-12-24:importpython/importpython-55.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/55/"&gt;Import Python Weekly Newsletter - Issue No 55&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;嗯哼, 圣诞节都不停,虽然少了点,果断程序猿都是 single boy...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bytefilia.com/titanium-mobile-facebook-application-django-allauth-sign-sign/"&gt;用 Django allauth 进行 facebook 移动应用调查&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过去几周, 对 titanium C/S 移动社交应用进行了调查,
通过简单的  Django allauth 配置就能快速进行.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/12/running-ipython-as-docker-container.html"&gt;将 IPython 作为 OpenShift 中的 Docker 容器来运行.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;希望大家能有更多的姿势来任性的使用 Docker,
OpenShift 中将对更多高层次可托管容器提供服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://moderndata.plot.ly/machine-learning-visualizations-made-in-python-and-r/"&gt;6 种机器学习可视化模式用 Python 以及 R 来现实&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这6种可视化,是2014年至2016年间使用 Plotly 来完成的,
Plotly 是基于 Python 以及 R 的开源图形库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/135640345113"&gt;你的 Django 故事: 遇见 Anna Schneider&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;djangogirls&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anna Schneider 是 WattTime 的 CTO,
一个技术非营利组织, 旨在减少智能设备的碳足迹!
在她生物物理学博士期间,自学了 Python,
两年前又自学了 Django,
进一步创立了 WattTime!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lucumr.pocoo.org/2015/12/21/introducing-lektor"&gt;介绍 Lektor — 静态文件管理系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内容管理系统, 类似其它同类系统使用文件作为源.
但是,有本地托管的管理面板, 
以便非程序员使用.
当前可安装/双击/打开浏览器/编辑页面,
基于静态 HTML 页面,
并用发布按钮发布到服务器,
兼容 Dropbox 后端.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;pocoo 出品,必属上品!
又得及时上手一种仙器矣.&lt;/p&gt;
&lt;p&gt;&lt;img alt="admin.png" src="https://raw.githubusercontent.com/lektor/lektor-archive/master/screenshots/admin.png" /&gt;&lt;/p&gt;
&lt;p&gt;简单的说,又一个静态wiki
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2015/12/21/reflecting-my-time-caktus-open-source-fellow/"&gt;作为 Caktus' 开源研究员重构我的时间&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ben Phillips 是 Caktus' 开源研究员. 
当奖学金即将结束时,
认真反省了过往的时间以及经验.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.rtwilson.com/my-top-5-new-python-modules-of-2015/"&gt;2015 心目中最赞 '新' Python 模块&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过去一年中写了很多 blogging,
应该能列出年度最佳模块.
虽然都在 2015 发布了版本,是 '新的' ;-)
当然对于读者可能是 '真的新'&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.danvatterott.com/blog/2015/12/22/creating-nba-shot-charts/"&gt;用 Python 创建 NBA 射栏榜&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过统计不同场次中的照片,
构造了射栏统计图,对比双方的投篮命中率.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ruslanspivak.com/lsbasi-part7/"&gt;构建简单 Interpreter. 第 1 ~ 7. [Python 和 Rust]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"如果你并不理解编译器如何工作的,
那么其实你并不理解计算机的工作.
如何你无法 100% 的理解计算机的工作,
那么就无法理解程序猿的工作" - Steve Yegge&lt;/p&gt;
&lt;p&gt;所以,想知道编译器/解释器的工作?
意思是 100% 的清楚?
别担心, 通过一系列 解释器和编译器的构建练习,
你必定能理解他们的工作,从而变的自信又快乐!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3xilqu/sophy_fast_python_bindings_for_sophia_database/"&gt;Sophy: 高速 Sophia 数据 Python 绑定库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sophia 是种强力 K/V 数据库,
通过简洁的 C 接口发布了丰富的功能.
为了使用之,作者构建了 Python 绑定.
文章中介绍了 Sophia 数据库,以及如何通过 Sophy 来使用.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lektor/lektor"&gt;lektor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;909 Stars, 29 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;静态文件的内容管理系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dellis23/ispy"&gt;ispy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;756 Stars, 26 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用于监测其他终端和流程的输出&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/XIAZY/ComicFetcher"&gt;ComicFetcher&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 comic.ck101.com 收集漫画的抓取工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pydanny/dj-ango"&gt;dj-ango&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 的简化输入结构&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/buckyroberts/Python-Packet-Sniffer"&gt;Python-Packet-Sniffer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python的网络数据包嗅探器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Wow!
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151224 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151224 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 54</title><link href="http://weekly.pychina.org/importpython/importpython-54.html" rel="alternate"></link><published>2015-12-17T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-12-17:importpython/importpython-54.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/54/"&gt;Import Python Weekly Newsletter - Issue No 54&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;嗯哼, 蠎加载终于又回归了,,,继续 happy 快译.&lt;/li&gt;
&lt;li&gt;(为什么说又!?)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://migrateup.com/store/advanced-python-book/"&gt;高级 Python 图书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Aaron Maxwell 已经主持 &lt;code&gt;Advanced Python Newsletter&lt;/code&gt; 有段日子了,
过去一年积累了很多好文章,
结集成了: &lt;code&gt;Advanced Python&lt;/code&gt;
不以入门者为目标的,
讨论各种强大模式/特点,以及语言发展的好书.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.toptal.com/bottle/building-a-rest-api-with-bottle-framework"&gt;用 Bottle 框架 构建 Rest API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bottle 是最轻量级 Web 应用框架.
体积小/速度快/易用,
而且非常辞行构建 RESTful 服务.
在作者的折腾经验中,
基于 DigitalOcean 平台,用 uWSGI 服务桟,
每请求可以低至 140ms,
文章分享了这一构建过程. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2015/12/testing-django-applications.html"&gt;测试 Django 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章汇集了各种 Django 应用测试相关资源和文章.
为新人能快速融入项目详细列举了具体准则.
还提供了内置单元测试库和 pytest 之间的对比.
重点是测试 Django 和数据库的交互.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.rackspace.com/blog/a-tutorial-on-application-development-using-vagrant-with-the-pycharm-ide"&gt;“应用开发团队如何配合 PyCharm IDE 使用 Vagrant “&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细指导,如何使用 PyCharm + Vagrant 
组织开发.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/1kuKe77FdjI/"&gt;PyCharm 中使用 Docker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现代软件工程强调开发和生产环境的隔离以及再现.
Docker 及其相关解决方案非常流行.
随着 PyCharm 专业版 5 的发布,
现在可以任性的在 IDE 管理 Docker 事务了. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/135196284658"&gt;你的 Django 故事: 遇见 Jessamyn Smith&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jessamyn Smith 是领域经验超过10年的全桟软件工程师,
主要开发 web 应用后端服务.&lt;/p&gt;
&lt;p&gt;她的专长是测试/软件设计/重构遗留代码/追加自动测试, 以及自动化櫣和部署.
是有执照的专业工程师,
同时也是 Ziversity.com 的CTO,
也是帮助 LGBTQ(土著/少数民族妇女) 构建安全空间并分享经验的组织管理者.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/pub/e/3628"&gt;Oreilly 的 Hands-on Python workshop &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这次由 Steven Lott 领导的 hands-on workshop 中,
通过 "Python 加密代理"
,"Python 函式编程"
,"Python 面向对象编程"
将学会 什么是命名空间?
应该尽可能使用.
使用内建命名空间别名,
还能定制.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dl.dropboxusercontent.com/u/7335766/wall-pep8.png"&gt;PEP8 壁纸&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简洁的壁纸,包含 蠎之禅.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/dec/17/announcing-2016-fundraiser/"&gt;Django 2016 捐助活动启动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目标是 $200,000 用以资助研究员计划,
继续促进 DjangoGirls 活动,
以及年度大会等等.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3x32d0/python_is_not_c_take_two/"&gt;Python 不是 C: 讨论2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教训是明确的: 别将 Python 写成 C.
使用 numpy 进行数组操作,而不是循环.&lt;/p&gt;
&lt;p&gt;对于多数人而言,这意味着观念的转变;
鉴于 Python 的生态系统在高速发展,
作者决意将以往的工具链进行重构.
通过一个处理空间数据的项目,
目标在帮助 跨越美国的自行车运动(RAAM)优化路径,
要对 2015 年比赛中获得的大约 25000 个地理点,
进行经纬计算,求出最短路径....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3wyo2a/automation_and_pty4/"&gt;自动化和 pty(4)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 UNIX 界面中任何命令都能自动化.
文章演示如何使用 伪终端 来令应用以为接入了一个不存在的终端.
次技术原先是用以解决硬件的软件模拟的,
现在多用与测试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tommikaikkonen.github.io/timezones"&gt;Pytz &amp;amp; Django 中的时区&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;时区!
航运软件的蠢事儿!
如果遇到过类似问题, 应该认真看看此文!
前提是熟悉相关库,
理解 自然和意识 日期,
当然得懂点 Dajngo.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.aldryn.com/en/"&gt;建立并管理你 Django 应用的最简洁方式 - Aldryn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Django 的商业产品,
能快速建立 CMS, 值得体验. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-35-sylvain-thenault-on-astroid/"&gt;第 35 集 - Sylvain Thénault on ASTroid&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的 AST (抽象语法树) 是非常强大的工具.
能支持我们创建自己的语言.
ASTroid 能简化我们使用 AST 的过程.
这一集中, 采访了 ASTroid 的创始人 Sylvain Thénault,
分享了如何用ASTroid 驱动 PyLint 进行静态代码分析.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mattya/chainer-DCGAN"&gt;chainer-DCGAN&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;97 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chainer 实现深卷积生成对抗性网&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hardmaru/write-rnn-tensorflow"&gt;write-rnn-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;52 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 LSTM 混合密度网络与 TensorFlow 生成手写文字.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LangdalP/GoTimer"&gt;GoTimer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;48 Stars, 13 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 完成的 &lt;code&gt;CS:GO&lt;/code&gt; 用简单炸弹定时器外挂&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitghi/cyjson"&gt;cyjson&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;28 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速 JSON 解析器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/carlosmaniero/pygamii"&gt;pygamii&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ASCII 游戏引擎&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zhongbiaodev/py-mysql-elasticsearch-sync"&gt;py-mysql-elasticsearch-sync&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL 到 Elasticsearch 同步工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Rami114/Stockfighter"&gt;Stockfighter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个 Stockfighter API 的 Python 包装.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mediawiki-utilities/python-mwviews"&gt;python-mwviews&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从静态 dump 以及在线接口,
解析并查询 Wikimedia 基金会的浏览量.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/v1k45/django-notify-x"&gt;django-notify-x&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 的提醒/通知系统.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151218 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151218 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 53</title><link href="http://weekly.pychina.org/importpython/importpython-53.html" rel="alternate"></link><published>2015-12-04T14:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-12-04:importpython/importpython-53.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/53/"&gt;Import Python Weekly Newsletter - Issue No 53&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;嗯哼, 蠎加载终于又回归了,,,继续 happy 快译.&lt;/li&gt;
&lt;li&gt;(为什么说又!?)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opbeat.com/events/duth/"&gt;Django 引擎盖下: 会议视频&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django: 引擎盖下 第二版.
侧重 Django 的本来策略.
如果你是位 Django 工程师, 应该认真看看.
感觉赞助商 OpBeat ~ 专注 Django 应用的监控平台.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ses4j.github.io/2015/11/23/optimizing-slow-django-rest-framework-performance/"&gt;优化缓慢的 Django REST 框架性能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看起来很简单的, REST 框架及其可嵌套的序列化,
就足以杀光接口性能.
记住,如果 Web 服务器将时间浪费在 REST 接口调用上,
那么整体性能必然下降.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.jetbrains.com/pycharm/2015/11/python-3-5-type-hinting-in-pycharm-5/"&gt;Python 3.5 类型提示在 PyCharm 5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.5 引入了类型提示,
以便支持 IDE , PyCharm 已经实现了对应功能.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howchoo.com/g/y2y1mtkznda/getting-started-with-docker-compose-and-django"&gt;基于Docker, Compose 和 Django 的开发入门 - howchoo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;展示了如何基于 Docker 构建 Django 开发环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.doismellburning.co.uk/pythons-surprise-imports/"&gt;Python 的 '惊喜' 导入&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 有各种开发推荐,
比如, 用 &lt;code&gt;django.utils.timezone.now&lt;/code&gt; 来获得当前日期,
但是, 实际上...&lt;/p&gt;
&lt;p&gt;recommends that you use, for example, django.utils.timezone.now to ensure you always get “the right now” (i.e. timezone-aware). So you might, as with the code example above, extrapolate that timezone.datetime(2015, 1, 1) will give you a timezone-aware “1st of January 2015” datetime object.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;django.utils.timezone.datetime&lt;/code&gt; 的故事...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/dec/01/django-19-released/"&gt;Django 1.9 发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过10个半月的开发,
Django 团队终于宣布 1.9 发布了.
和以往版本一样, 发布说明中包含了各种深入细节.
主要亮点在:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;支持执行后操作
事务提交
密码验证
允许mix-in 基础类
全新 contrib.admin 样式
支持并行测试
...
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ptspts.blogspot.com/2015/11/how-to-compute-intersection-of-two.html"&gt;如何求两个有序列表的交 (在 Python)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章解释了有序列表求交原理,
并展示了 Python 实现的快速版本.
时间复杂度仅为 : &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;O(min(n + m, n · log(m))
其中 n 为最小列表长度
m为列表长度最大值
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/pyladies/comments/3uu57j/your_django_story_meet_kinga_ki?czkowska/"&gt;你的 Django 故事: 遇见 Kinga Kiczkowska&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kinga 是 Django Girls 的教练/组织者,
同时也是 爱丁堡龙比亚大学 的计算机安全及取证系学生以.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kevinlondon.com/2015/10/16/answers-to-django-security-questions.html"&gt;Django 的安全性问题回答&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你知道多少 Django 安全性问题?
你有信心攻破 Django 应用嘛?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/nm8O00hOGUc/"&gt;当周 PyDev: Nick Coghlan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nick Coghlan (@ncoghlan_dev) 
入选择当周蠎星.
他是 Python 语言核心开发者,
同时也发布有非常激烈的 Python 技术blog.
来听听他又说了什么.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;p&gt;....&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/umermansoor/microservices"&gt;microservices&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;237 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Flask 构建微服务的实例.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/szastupov/musicbot"&gt;musicbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;157 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Telegram 音乐目录机器人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sherjilozair/char-rnn-tensorflow"&gt;char-rnn-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;152 Stars, 17 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;多层回归神经网络（LSTM，RNN）
用 Python 实现的 Tensorflow 模型&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/prodicus/vocabulary"&gt;vocabulary&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;140 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 模块,
对给定的字 获得 语义/同义/反义/词性/用法示例/发音/断字...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Webhose/article-date-extractor"&gt;article-date-extractor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;30 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动提取和标准化在线文章/blog 的发表日期.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yunojuno/django-package-monitor"&gt;django-package-monitor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 应用的依赖模块跟踪监控!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极,Dajngo 应用的依赖已经复杂到需要专用服务来监察了了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alirezasamar/emailhunter-clone"&gt;emailhunter-clone&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;emailhunter.co 一个很赞服务的 Clone &lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phodal/github-roam"&gt;GitHub 漫游指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151204 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151204 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 52</title><link href="http://weekly.pychina.org/importpython/importpython-52.html" rel="alternate"></link><published>2015-11-13T11:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-11-13:importpython/importpython-52.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/52/"&gt;Import Python Weekly Newsletter - Issue No 52&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;嗯哼, 蠎加载终于回归了,,,继续 happy 快译.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/132875295693"&gt;你的 Django 故事: 遇见 Shauna Gordon-McKeon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shauna Gordon-McKeon 
是位开发/作家/研究员,
对开放科学以及自由软件保有持久的激情.
当前经营咨询业务 Galaxy Rise Consulting.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.youtube.com/watch?v=lYe8W04ERnY"&gt;PyCon Brasil 2015 主题演讲: David Beazley ~ asyncio 和 异步/等待&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;David 同时也是好几本 Py 图书的作者&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2015/11/06/django-security.html"&gt;防护罩下的 Django: Django 安全性 - Florian Apolloner&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你又以为发现了 Django 的安全漏洞?
看: https://djangoproject.com/security 
嘦联系 security@djangoproject.com. 
及时报告这种错误,才能令 Django 越来越好.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.openstack.org/developer/hacking/"&gt;OpenStack Style Guidelines&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于大如 OpenStack 的工程,类似指南是必须的.
类似的提醒,俺也向 OpenOffice 吼过.
IMHO: OpenStack 在作死ing...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twilio.com/blog/2015/11/international-space-station-notifications-with-python-redis-queue-and-twilio-copilot.html"&gt;教程: ISS(国际空间站) 的短信开销, 用 Python, Redis-Queue, 以及 Twilio 实现&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the new Star Wars trailer coming out, I’ve been really excited about space lately. This could be pretty obvious based on what I wore during my API demo at BostonHacks last weekend. Twilio also had private screenings of The Martian for community members recently in several different cities. Pretty cool topic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://slott-softwarearchitect.blogspot.com/2015/11/formatting-strings-and-strformat-family.html"&gt;格式化字串  str.format() 系列函式 -- Python 3.4 笔记&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼, 远离 &lt;code&gt;%&lt;/code&gt; ,
珍重 &lt;code&gt;str.format()&lt;/code&gt; !
痴迷者的笔记, 发现 &lt;code&gt;vars()&lt;/code&gt; 函式的新秘密.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.djangocon.us/"&gt;DjangoCon 北美&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DjangoCon US 
是为期6天的社区大会,
每年在北美举行.
讨论 Django 的方方面面,无论职业程序猿,还是业余用户.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://alexmorozov.github.io/how-to-send-jabber-xmpp-messages-from-django.html"&gt;如何从 Django 发送 Jabber (XMPP) 消息&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是否想有个 Dajngo 的简单应用,
能从内网接收 Jabber 消息转发给你?
欢迎体验: django-jabber.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/url/norvig.com/ipython/Beal.ipynb"&gt;Beal 猜想再探 (Peter Norvig notebook)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1637 年 Pierre de Fermat (费马)
在一本书的边页上注释提及了他最著名的 "定理".&lt;/p&gt;
&lt;p&gt;而直到 1995 年, 才由Andrew Wiles证明.&lt;/p&gt;
&lt;p&gt;但是, Beal 猜想 至今无人能证明,
即使悬赏 $1,000,000。&lt;/p&gt;
&lt;p&gt;虽然作者数学能力一般,但是,能用代码来自动判定是否完成证明.
2000年发布首个版本代码以来,
收到了很多邮件,指出各种 证据/反例.
至今没有人能通过测试,
在此编录了常见错误,包含作者本人的,
并发布更新版本.&lt;/p&gt;
&lt;p&gt;In 1637, Pierre de Fermat wrote in the margin of a book that he had a proof of his famous "Last Theorem".Andrew Wiles proved Fermat's theorem in 1995, but Beal's offer of $1,000,000 for a proof or disproof of his conjecture remains unclaimed. I don't have the mathematical skills of Wiles, so all I can do is write a program to search for counterexamples. I first wrote that program in 2000, and my name got associated with Beal's Conjecture, which means I get a lot of emails with purported proofs or counterexamples (many asking how they can collect their prize money). So far, all the emails have been wrong. This page catalogs some of the more common errors—including two mistakes of my own—and shows an updated program.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avinassh/slackipy"&gt;Slackipy – 自动邀请用户 (用 Flask)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;security release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slackipy 是个 web 服务,
可帮助你自动邀请用户加入 Slack 团队.
基于 Flask 以及使用 Jinja2 模板.
所以,非常易于定制.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/579124-persistent-queue/"&gt;持久队列 (Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;code snippet&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;持久队列的类. Code Snippet.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/nov/12/re-election-dsf-board-call-candidates/"&gt;DSF 董事会更替: 征集候选人&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Historically, the board members of the Django Software Foundation have been elected by the DSF membership; however, once elected, they have sat on the board until they chose to stand down. To improve the accountability of the board, last year all board members were elected for one calendar year. The time has now come for the re-election of the board. &lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nlintz/TensorFlow-Tutorials"&gt;TensorFlow-Tutorials&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;554 Stars, 49 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Google's TensorFlow 框架的简单使用教程.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;喂! 人家刚刚开源没几天哪!
一定是早就准备好了!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ethereon/caffe-tensorflow"&gt;caffe-tensorflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TensorFlow 中 Caffe 模式的概念验证&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nvaccess/nvda"&gt;nvda&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NVDA, 
用以 M$ Windows 的开源屏幕阅读器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jontonsoup4/ascii_art"&gt;ascii_art&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将图片转换为 ASCII art&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="cat_scale5_draw" src="https://github.com/jontonsoup4/ascii_art/raw/master/examples/cat_scale5_draw.png" /&gt;&lt;/p&gt;
&lt;p&gt;标准 PIL 系模块的综合应用之一...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vipul-sharma20/gesture-pacman"&gt;gesture-pacman&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用手势来玩 吃豆人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kz26/balise"&gt;balise&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;便携,轻巧,本地托管的 IPv4 / IPv6
地理位置 接口/服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alice1017/url2markdown-cli"&gt;url2markdown-cli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 URL 将指定网站整个儿转换为 md! 
Powered by kennethreitz/url2markdown&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/canvasnetworks/canvas"&gt;canvas&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Canv.as 
前后端一起来!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/clearlinux/autospec"&gt;autospec&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RPM 自动打包工具.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151112 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151112 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 51</title><link href="http://weekly.pychina.org/importpython/importpython-51.html" rel="alternate"></link><published>2015-10-16T22:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-10-16:importpython/importpython-51.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/51/"&gt;Import Python Weekly Newsletter - Issue No 51&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/blog/post/conversation-matt-makai-fullstackpythoncom"&gt;和 Matt Makai 聊 FullStackPython.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果还没有听说过
fullstackpython.com 
应该立即关注了!
这次,和创始人讨论了如何帮助
开发者进行贡献,以及图书.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheGlowingPython/~3/tSMkoT9Lu6Q/game-of-life-with-python.html"&gt;Python 实现的生命游戏&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本身是种非常简单的网格游戏,
细胞只有两种状态,&lt;code&gt;死|活&lt;/code&gt;,但是,根据时间和周围简单的状态来决定:
活的,并有两个活的邻居;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
想起来了很久以前的 &lt;code&gt;恶狼战役&lt;/code&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/data-science-ipython-notebooks"&gt;持续更新的数据科学 ipnb 涉及:: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, 以及各种命令行工具.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标题已经说明了一切&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lambdaops.com/ops-lessons-and-instant-temporary-ipython-jupyter-notebooks/"&gt;Instant Temporary IPython Notebooks 的教训&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;过去四个月里,
Jupyter 的开发商和 Rackspace,Nature 以及 O'Reilly 合作,
进行几个实验,
以便科学家和研究者能即时访问 ipynb.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/updated-instructions-for-compiling-sqlite-with-json-and-fts5-support/"&gt;理解以及对比 SQLite 对 JSON 以及 FTS5 的支持&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着 3.9.0 发布,
SQLite 绑定了两种简易操作来支持 JSON 以及 FTS5,
细节链接内.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/UqPIOKQNWBE/"&gt;PyCharm 5 EAP 143.165: Docker 集成&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刚刚发布的 PyCharm 5 EAP build 143.165, 
带来了 Docker 集成,
以及其它很多重大改进,
详细去 EAP 页面查询.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/bvvpUQ33aq4/"&gt;对 PyMongo 进行黑管测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由6篇文章形成的 &lt;code&gt;黑管&lt;/code&gt; 测试系列,
用  Mongo 官方的 Python 客户端 PyMongo 进行实例.
是无法使用经典黑箱测试方法进行测试的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.packtpub.com/packt/offers/pythonweek"&gt;Python Week 出版计划&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Packt Publishing 提供了一种免费 Python 周刊,
详细链接在内.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/kB-Nc-6AQ7U/"&gt;argparse 推荐&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是否折腾过 Python 在命令行上的参数解析!?
argparse 作为 optparse 的替代来开发的, 
文章中给出了一系列有益的体验.&lt;/p&gt;
&lt;p&gt;-&lt;a href="http://blog.sourcefabric.org/en/news/blog/3246"&gt;Booktype 2.0 发布,支持作者和出版商在浏览器中创作图书&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Booktype 2.0 基于单源发布原则,
支持作者在浏览器中创作美丽动人的图书,
而出版商可以用 Booktype 在一个地方管理整个图书工程,
支持作家翻译/校对 等等.&lt;/p&gt;
&lt;p&gt;当然 Booktype 是用 Python 创建的!&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/awesome-aws"&gt;awesome-aws&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;852 Stars, 38 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收集 AWS 相关的各种精彩 库,开源仓库,指南,blog 以及其它.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avinassh/status"&gt;status&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;72 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;友好的 HTTP 状态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PaulSec/skype-osint"&gt;skype-osint&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;24 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python OSINT 工具,
从 Spyke 获得信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rewardz/django_model_helpers"&gt;django_model_helpers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;23 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 模块的辅助类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cyh24/Joint-Bayesian"&gt;Joint-Bayesian&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据论文 "Bayesian Face Revisited: A Joint Formulation",
完成的 Python 版本实现.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/upgoingstar/TweetMonitor"&gt;TweetMonitor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Twitter 保持指定关键字的关注.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/msoedov/quick.py"&gt;quick.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Property-based testing library for Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jailuthra/taskzilla"&gt;taskzilla&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专供 NGOs 的 bugzilla 样协作平台&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/guilherme-toti/load-balancer"&gt;load-balancer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由 Vagrant + NGINX + Tornado + MySQL 组合的简单的加载均衡器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好东西, 然后,没有然后了...
对于中国.
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151016 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151016 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 50</title><link href="http://weekly.pychina.org/importpython/importpython-50.html" rel="alternate"></link><published>2015-10-09T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-10-09:importpython/importpython-50.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/50/"&gt;Import Python Weekly Newsletter - Issue No 50&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.lexev.org/en/2015/trying-json-combo-django-and-postgresql/"&gt;Python 开发者文章 - 在 Django 和 PostgreSQL 中折腾 JSON (和 MongoDB 对比)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;全新 JSONField 将追加到 Django 1.9, 
配合 PostgreSQL &amp;gt;= 9.4 就能爽利的用 JSON 了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rc9uvLgwPRA"&gt;Juan Luis Cano: Jupyter (IPython); ipynb 是如何改变科学的 [Video]&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IPython 原本只是作为一个 Python 交互环境在 14 年前折腾出来的.
但是,现在 &lt;code&gt;ipynb&lt;/code&gt; 已经成为科学家/开发者/甚至于 记者们进行科学探索的首选界面!
现在 Jupyter 项目,作为 IPython 的重构,
对开放科学和科学出版具有更加重要的意义,
视频展示了这方面的精彩!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/1SmYVjTEXwE/"&gt;"如何令 Python 协同工作?" 来自 Open Source Bridge 2015 的编码秀视频&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 The Open Source Bridge 大会上发布的视频,
30分钟里, 完成了 Python 3 的异步架构,
完成 非阻塞I/O 和协同程序.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?t=1876&amp;amp;v=vWJorwEQWLk"&gt;DjangoCon 2014- AngularJS + Django = 完美匹配 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;AngularJS 是种强力 MVC 框架,
可以轻易的和 Django 模板结合,
两者梦幻般的配合, 其结果就是一种快速/动态/SPA(单页应用)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极的是, AngularJS 原本是 Google 内部 20% 任务中诞生的先进框架,
内部被 Polymer PK 掉了,
但是, 墙里开花墙外香, 出了 Google 纯粹在社区折腾下,
反而更加壮美了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/130542018183"&gt;你的 Django 故事: 遇见 Tapasweni Pathak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tapasweni Pathak 是 SAP 实验室的软件工程师.
同时也是 Systers 组织的 GSOC 导师.
她为促进 Linux 内核作了很多有益的工作.
当然是位 自由和开源软件爱好者.
习惯在 Quora 分享.
热爱 C 和 Python , 进行操作系统和编译方面的工作.
过去, 一直在 Qualcomm 公司担任 Outreachy Linux 内核见习工程师,
还在 Delhi 的 I.I.T 作过研究员.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wildfish.com/blog/2015/10/01/using-gabbi-and-hypothesis-test-django-apis/"&gt;用 Gabbi 和 Hypothesis 测试 Django APIs | Wildfish&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hypothesis 是个测试库,
能理解你的 API 说明, 自动尝试多种参数,彻底的探索你的 API.
并努力简化失败后的修复过程,
能保持失败现场, 在 DB 中反复使用,直到解决.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://slott-softwarearchitect.blogspot.com/2015/10/todays-milestone-refactoring-and-django.html"&gt;今日里程碑: 重构以及迁移 Django&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 之禅认为, Flat 好过 Nested. 
Django, Model, Design. 
这三个词很好的概括了 Django 工程理解.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-25-uwsgi-core-developers/"&gt;第 25 集 - uWSGI 核心开发者s&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;uWSGI 是目前最通用的应用服务器之一.
最初是为 Python 应用开发的,
但是,已经获得了 Perl/Ruby/PHP 等等令人难以置信的功能集.
这集节目中 Tobias 采访了三名核心开发者,
尝试回答为何发展的这么销魂 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.quora.com/What-are-some-best-practices-for-Django-development"&gt;Django 开发的最佳实践有什么? - Quora&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Quora 的讨论.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydev.blogspot.com.br/2015/10/pydev-440-released.html"&gt;PyDev 4.4.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新版本已释放,
改进了 included / improved.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rajathkumarmp/Python-Lectures"&gt;IPython Notebooks 学 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python, ipynb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一系列 ipynb 来学习基础的 Python 编程知识.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是俺收集的第7个类似 ipynb 在线教程了;
看来是个趋势.
)&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MasoudH/Gradience"&gt;Gradience&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;185 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;跟随圆圈创建 gradience 效果的简单脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/The-Compiler/pytest-vw"&gt;pytest-vw&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;65 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;VW 令失败的测试案例成功,
以便使 CI 进程完成.
当你的主要目标是快速部署代码到世界各地,
而不关心过程中发生的回归或是新漏洞时.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt; 好任性的工具...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mre/receipt-parser"&gt;receipt-parser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;67 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作家庭帐目时,很麻烦,
你必须手工查找店家名称,核对日期以及所有收据的数目,
得输入,还得计算总合,
为毛不让一台机器来作这些事儿?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yaolubrain/ULNNO"&gt;ULNNO&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;41 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无监督学习神经网络输出;
本文提出了一种新的零基础的学习方法,
来自 ImageNet fall2011 上最先进的成果&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/muhasturk/gitim"&gt;gitim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用一个简单命令, clone 你的所有 github 仓库.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;会爆盘的!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/MasoudH/Whiteboard"&gt;Whiteboard&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单程序, 允许用户快速的在任何地方快速记录笔记.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;p&gt;&lt;img alt="PyCon2015China Slogen" src="http://pyconcn.qiniucdn.com/zoomquiet/res/logo/2015/150801-cnpycon-slogen.svg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cn.pycon.org/2015/"&gt;PyCon 2015 China&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;北/上/广&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主场分享幻灯都已释放! 另外还有纪念 TEE 零售,数量不多,先抢先有 ;-)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151009 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151009 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 49</title><link href="http://weekly.pychina.org/importpython/importpython-49.html" rel="alternate"></link><published>2015-10-02T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-10-02:importpython/importpython-49.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/49/"&gt;Import Python Weekly Newsletter - Issue No 49&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/autopep8/"&gt;autopep8&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能自动将代码整为吻合 EPE8 风格的工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IDE 去死去死!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;凡是自动改变俺输入字符的都是邪恶的,
嗯哼,不过,俺对自动优化中间码或是机器码的工具不反感,
这是为什么呢?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/HkPhyYeCu2w/"&gt;别轻易宣称伟大: Jesse 对 PyCon 议题的7个建议&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jesse Jiryu Davis 对好议题给出了具体期望.
PyCon2016 议题征集已经开放,
如果你有想说的, 大会非常渴望你的提交,
嘦注意是真心有料.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/python/tutorial/build-data-products-django-machine-learning-clustering-user-preferences"&gt;用 Python 构建数据产品: 通过机械学习完成推荐服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是系列教程的第三部分,
有关如何构建基于 web 的推荐系统,
使用 Python 技术桟: Django, Pandas, SciPy, 以及 Scikit-learn.
基于第一部分中, 用 Django 发布的葡萄酒网站.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-community-slack.herokuapp.com/"&gt;Python 社区在 Slack!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为 Slack 好用哪,就是好用!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pythonpedia.com/"&gt;PythonPedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;获得 Python 编程资料就一步,
所有相关 Python 的都在这儿了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/130063785078"&gt;你的 Django 故事: 遇见 Sonia Arcelay&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sonia 是同时玩转 瑜珈,社会化媒体,跑步以及编程的 拉丁MM.
爱好 红茶/酒以及动画片.
5年级时,就在 Macintosh 上掌握了基本的 Cobol&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://evennia.blogspot.com/2015/09/evennia-on-podcastinit.html"&gt;Evennia 在 Podcast.&lt;strong&gt;init&lt;/strong&gt;&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Evennia 是开源的 MUD 服务,
用 Python 重头开发的,基于 Twisted 和 Django.
Griatch 是核心程序员以及项目领导者.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2015/09/24/introduction-monte-carlo-tree-search-1/"&gt;介绍蒙特卡洛树搜索&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 DjangoCon 2015, Jeff Bradberry 
创建了一种 A.I.
文章转载自 jeffbradberry.com
叙述了如何基于 蒙特卡洛树 构建了搜索,以及系统.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/579105-how-a-python-function-can-find-the-name-of-its-cal/"&gt;Python 函式能发现是谁调用了自己嘛? &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vasudev Ram 贡献了此偏方,
用 Python 实现的可发现调用自己函式的函式,
通过寻找相关名称.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.gibrem.com/python-cookbooks-github-w-12040/"&gt;GitHub 中最流行的 Python CookBooks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;赶紧看&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/rosarior/awesome-django/"&gt;awesome-django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有 Django 中非常赞的包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2015/memory-layout-of-multi-dimensional-arrays/"&gt;多维数组的内存布局&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用多维数组时, 程序员要进行最重要的决策就是选择什么样的内存布局来存储数据,
因为本质上计算机存储都是线性的,
是一维结构的,
多维数组如何映射,有很多方式,
这里进行有关细节的讨论,分析各种方式的优劣.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://central.scipy.org/"&gt;全新 SciPy-Central 网站上线!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wow!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3mhv25/when_to_take_a_list_vs_when_to_take_args/"&gt;何时用列表或是 *args?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;reddit 中引发的有趣讨论.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://neupy.com/2015/09/21/password_recovery.html"&gt;用离散 Hopfield 网络算法进行密码恢复 by Yurii Shevchuk.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教程引导我们创建简单的 神经网络 来恢复口令.
如果你对 Hopfield 网络还不熟悉,
值得看看.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zulip.org/"&gt;Zulip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Django/Python 完成的强力开源聊天群.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/agiliq/sql-pandas-tutorial"&gt;sql-pandas-tutorial&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;65 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教程引导我们将 SQL 转换为 Pandas&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Bekt/invatar"&gt;invatar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;40 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;受很多通讯应用的启发,
invatar 提供接口来生成完全可定制的 SVG 图标!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lorien/user_agent"&gt;user_agent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能随机生成,有效的,
导航配置以及 HTTP 头的用户代理描述.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/theskumar/python-usernames"&gt;python-usernames&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注公众应用中,
对用户名进行验证, 以便选择登录名或是子域.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;p&gt;&lt;img alt="PyCon2015China Slogen" src="http://pyconcn.qiniucdn.com/zoomquiet/res/logo/2015/150801-cnpycon-slogen.svg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cn.pycon.org/2015/"&gt;PyCon 2015 China&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;北/上/广&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主场分享幻灯都已释放! 另外还有纪念 TEE 零售,数量不多,先抢先有 ;-)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;151002 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;151002 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 48</title><link href="http://weekly.pychina.org/importpython/importpython-48.html" rel="alternate"></link><published>2015-09-24T13:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-09-24:importpython/importpython-48.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/48/"&gt;Import Python Weekly Newsletter - Issue No 48&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/programming/free/python-for-scientists.csp"&gt;科学家 Python 使用手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;400页 以上的免费好书,
O'Reilly 精选了科学家相关的 Python 图书好内容!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pamno.com/b/most-frequent-python-problems-and-solution-cm578/"&gt;Python 最 F 的 AQ 以及解决&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 Stack Overflow 抽取的最常见 Python 问题集;
并附上最好的回答 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://libcloud.apache.org/"&gt;Apache Libcloud 用来弥合各种云厂商接口差异&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;apache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能不能用一个界面操作所有云?
当然可以! Libcloud 就是这样一个标准 Python 库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SUczHTa7WmQ&amp;amp;feature=youtu.be"&gt;DjangoCon US 2015 - 用正确的方式来部署 Django  by Peter Baumgartner - YouTube&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;部署 Django 从来没有统一的工具.
多年咨询经历中,我们见过太多的方案,
但是都有这儿那儿的问题
(Salt, Ansible, Fabric, Chef, Docker, etc.)
现在有个方案,算最省心...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/129569804938"&gt;你的 Django 故事: 遇见 Jessica Hamrick&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;djangogirls&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jess Hamrick 是加州大学 Berkeley 分校心理学系的,
研究涉及用程序来模拟世界人类的行为,
从 08 年开始,她就已经是狂热的 Pythonista,
几乎在研究的所有方面都用 Python 来折腾.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ardydedase/apiwrapper"&gt;Python 实现的投票和回调 API 包装&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现一个单独的 Python 包来处理简单的请求/查询,
能最大的简化代码,
鼓励大家多多尝试,将逻辑上去耦的接口独立出来!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=62ubHXzD8tM"&gt;更少的工作寻找更多的 bugs (PyCon UK 上曰 Hypothesis)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以直接看幻灯:  https://bit.ly/finding-more-bugs-pycon-uk .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.palrad.com/top-python-math-statistics-libraries-w-12007/"&gt;顶级数学和统计 Python 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 
https://pypi.python.org
下载量的排名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.python-summit.ch/pages/call-for-proposals.html"&gt;首次瑞士 Python大会 : 提案征集已开放!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常高兴大家要来 瑞士 耍了.
请提交你的议题吧.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/sep/23/django-19-alpha-1-released/"&gt;Django 1.9 alpha 1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之前发布过 1.9 的一部分,
这次是完整的 预览/测试包,
标志着 1.9 进入了正式发布进程.
欢迎来尝试 Django 的未来.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pydanny/dj-stripe"&gt;Django + Stripe 更轻松&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由作者对 "Two Scoops of Django"
以及 Django integration 进行了集成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://iyask.me/Summarize-it/"&gt;Summarize it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Summarize it&lt;/code&gt;
作为插件能对聊天的消息进行自动化并总结!&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/szhu/3030"&gt;3030&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;1373 Stars, 177 Fork
Don't touch the walls! Thanks, Chrome dev team!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="paly game gif" src="https://camo.githubusercontent.com/86e15a69ca855f3ff682d806449fc7b24aeb2403/687474703a2f2f692e696d6775722e636f6d2f5278737177356e2e676966" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/n1nj4sec/pupy"&gt;pupy&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;477 Stars, 64 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为远程工具,内嵌了 Python 解释器,
允许从内存中加载 Python 包,透明的访问远程 Python 对象.
通过 DLL 反射,追踪磁盘的变化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/snoack/python-goto"&gt;python-goto&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;367 Stars, 13 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;函式修饰符,
对 bytecode 进行重定向,
Python 中的 goto !&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/asciimoo/memspector"&gt;memspector&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;113 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检查 Python 函式的内存使用情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ellisonbg/altair"&gt;altair&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;40 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;髙阶声明可视化库.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;受到以下库的激励: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Matplotlib
Bokeh
Seaborn
Lightning
Plotly
Pandas built-in plotting
HoloViews
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryankiros/visual-semantic-embedding"&gt;visual-semantic-embedding&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Implementation of the image-sentence embedding method described in "Unifying Visual-Semantic Embeddings with Multimodal Neural Language Models"&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tushar-rishav/py2pdf"&gt;py2pdf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:fax: 将 Py 脚本文件转换为包含语法颜色的 pdf&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/parisk/chrome-rest"&gt;chrome-rest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;控制 Google Chrome 的 REST API &lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;p&gt;&lt;img alt="PyCon2015China Slogen" src="http://pyconcn.qiniucdn.com/zoomquiet/res/logo/2015/150801-cnpycon-slogen.svg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cn.pycon.org/2015/"&gt;PyCon 2015 China&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;北/上/广&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主场分享幻灯都已释放! 另外还有纪念 TEE 零售,数量不多,先抢先有 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://mp.weixin.qq.com/s?__biz=MzA4ODM4ODQ3MQ==&amp;amp;mid=207979255&amp;amp;idx=1&amp;amp;sn=85a76c6c9ce348e298174210be1f7264&amp;amp;scene=1&amp;amp;srcid=0925dQuWaqbs6fr8zIYfGI16&amp;amp;key=2877d24f51fa53849d628f2a68cb7641223b63befa80eb0678e3db80190937b2360fd631ce292a1b6d1a383030bd1c25&amp;amp;ascene=0&amp;amp;uin=MTg1NDU4NTY4MQ%3D%3D&amp;amp;devicetype=iMac+MacBookPro8%2C2+OSX+OSX+10.10.5+build(14F27)&amp;amp;version=11020201&amp;amp;pass_ticket=84kD0%2FxZfLLjq9M2ElQaXF0VR7DPaEJlnReX5SYINOWsOPuizo24qwhcvLMQsYnk"&gt;​开智 Python，让编程变为一种时尚 | 开智学院&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;北/上/广&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150924 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150924 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 47</title><link href="http://weekly.pychina.org/importpython/importpython-47.html" rel="alternate"></link><published>2015-09-18T18:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-09-18:importpython/importpython-47.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/47/"&gt;Import Python Weekly Newsletter - Issue No 47&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/using-the-sqlite-json-extension-with-python/"&gt;Python 中使用 SQLite 的 JSON 扩展&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章中将构建一个 SQLite 全新的 JSON 扩展,
这样通过 pysqlite 就能令 SQLite 读入 JSON 了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dpraul/flask-continuous-env"&gt;为 Flask 在 Travis-CI 构建持续集成以及开发环境 (x-post /r/python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Grunt 构建 Flask 的前端构建环境,
持续测试则用 Travis-CI 驱动.
用 Nginx + Gunicorn 构建永续不宕的运行环境,
Fabric 进行简洁的配置管理.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mbentley/docker-django-uwsgi-nginx"&gt;mbentley/docker-django-uwsgi-nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于debian:jessie 的 Docker 镜像,
包含 Django (uwsgi) 和 nginx.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://impythonist.wordpress.com/2015/09/12/build-massively-scalable-restful-api-with-falcon-and-pypy/"&gt;用 Falcon 和 PyPy 构建可大规模扩展的应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常赞的方案!
但是,并没有给出基准测试报告&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tech-blog.serenytics.com/building-generic-data-queries-using-python-ast.html"&gt;用 Python AST 和 Pandas 构建通用数据查询&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Paris.py 上一个非常赞的分享,
如何使用 Python AST 配合 Pandas 生成 SQL！
用 Serenytics 合理的追加数据列,更好的探索你的数据,
并能方便的输出为 CSV 或是给SQL 服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://thebuild.com/presentations/django-1.8-postgresql-djangocon-2015.pdf"&gt;Djangocon 2015 上的 Django 1.8 和 PostgreSQL &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;幻灯!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/3hJuwVsNOYw/new-psf-community-mailing-list.html"&gt;全新 PSF Community 邮件列表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;去年 PSF 通过决议,使社区更加开放,
嘦热爱 Python 都可以加入社区.
老的 psf-members 列表已经停止,
发布两个全新列表: psf-community 和 psf-vote&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/rva4EAbeemU/"&gt;发布 PyCharm Edu 2: 简单胜过复杂&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;昨天发布的 PyCharm Edu 2, 是第二个免费版本,
专业又易用的 IDE, 内置了使用教程.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dominodatalab.com/interactive-data-science/"&gt;更好的交互式数据科学环境: Beaker 和 Rodeo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Domino 早已支持 IPython/Jupyter,
不过,刚刚追加支持了全新界面: Beaker Notebooks, 和 Rodeo,
文章给出案例来表述如何在新交互环境中使用 Domino.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
那个 莲花公司的 Domino ?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydanny.com/titlecasing-markdown-headers-with-python.html"&gt;用 Python 对 Markdown Headers 进行 Titlecases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;问题就在如何从复合目录和文件中,
用编程的方式,提取所有 md 文件的标准,进行自动化分析?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3lavrf/peachpy_assembly_code_generation_in_highlevel/"&gt;PeachPy: 用汇编生成高阶 Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PeachPy 是专注编写高性能内核组件的 Python 模块&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 C 的事儿都作了,让 go 无力可出
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5680"&gt;构建自包含的 Python 3 应用来运行 PyPy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之前作者曰过 如何构建一种 Python 3 微型环境
(简单的 Minecraft 服务),
现在则是要构建一种 独立的自我包含的应用.
细节链接中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheEndeavour/~3/RrKfz4HZ6Tg/"&gt;为 Python 程序猿的 Julia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为有客户在用 Julia,
所以,作者重新用为了起来,感觉就象一种 Python 的方言.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极的是, Julia 的目标是成为更好那用的 R 方言哪.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/-AB6aMVciZs/"&gt;图书章节: "用异步 Coroutiones 实现 web 爬虫"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此章节是和 Guido van Rossum 同著的,
论述异步协程的应用,
书已上架, 此章可预览.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/0vDQxEOxCp4/"&gt;PyDev 之星: Christopher Clarke&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本周我们欢迎 Christopher Clarke (@realchrisdev)
成为当周 PyDev 之星,
可能从他的 github 已经发觉了很多有趣的方面,
让我们挖掘更多趣点吧
!&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/agermanidis/videodigest"&gt;videodigest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;89 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动视频摘要.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kuprel/pycaffe-recurrent"&gt;pycaffe-recurrent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;40 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 ipynb 上训练用 pycaffe 折腾 LSTM 和 RNN 网络&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tomchristie/django-rest-marshmallow"&gt;django-rest-marshmallow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Marshmallow schemas for Django REST framework&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/retext-project/retext"&gt;retext&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Markdown 和 rST 的编辑器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Qt 实现界面的...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/narenaryan/Falcon-REST-API-Pattern"&gt;Falcon-REST-API-Pattern&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Falcon 和 PyPy 可大规模扩展的 RESFul 接口框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jmoy/plotdf"&gt;plotdf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用以绘制2D微分方程相图 的 Python 模块.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jlevy/strif"&gt;strif&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 strings+files 使用创建的简洁可用 Python 模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sandipbgt/twilio-fb-notification"&gt;twilio-fb-notification&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能免费用 短信 接收 Facebook 提醒的脚本!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jeremyjbowers/nfl-stats"&gt;nfl-stats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NFL 团队提供的工具,
包含播放器和游戏数据,
能准实时的获得状态!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150919 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150918 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 46</title><link href="http://weekly.pychina.org/importpython/importpython-46.html" rel="alternate"></link><published>2015-09-12T18:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-09-12:importpython/importpython-46.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/46/"&gt;Import Python Weekly Newsletter - Issue No 46&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.plot.ly/post/128662310992/analyze-data-five-ways-you-can-make-interactive"&gt;D3.js 和 .ipynb 的五大互动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Plotly 全新的地图制作工具,
赋予地理数据故事的讲述能力.
文章展示了如何在 等高线/子图/散点/气泡/线图 五种情景中使用风格;
而且,同时支持 R 和 Py 的接口...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://engineering.betterworks.com/2015/09/04/ditching-django-rest-framework-serializers-for-serpy/"&gt;为 Serpy 放弃 Django REST Framework Serializers  · BetterWorks Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;故事回顾了为什么放弃 Django REST Framework Serializers,
却能在兼容所有接口同时提升性能!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nyc2015.pydata.org/cfp/"&gt;PyData NYC 2015 议题征集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyData纽约2015 大会已经开放了主题提交,
汇集 分析师/科学家/开发者/工程师/建筑师 等等
从数据科学角度进行 数据管理/分析/可视化 的技术和工具交流.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/128559723068"&gt;你的 Django Story: 遇见 Lucie Daeye&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lucie 的博士是进行地理研究,
在韩国的 EHESS 继续进行研究.
刚刚决定改变职业发展.
她组织了  DjangoGirls 巴黎,四月又推出了 PyLadies 巴黎.&lt;/p&gt;
&lt;p&gt;去年在 Europython 中参与了 DjangoGirls 活动,
被感召,立即成为了 Bilbao 的 Django Girls 工作坊教练.&lt;/p&gt;
&lt;p&gt;她在 DjangoDoc 欧洲 分享过 Django 的社会化工程, 
2015 她成为 DjangoGirls 的魅力大使.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lucie Daeye" src="http://36.media.tumblr.com/4552acfca8c5d1302a602509a6dad230/tumblr_inline_nrfk9ksKZl1sescfp_500.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pyparallel/pyparallel"&gt;PyParallel 实验: 多核 Python 解决方案之一&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyParallel 处于概念验证期,
使用 Python 3.3.5 分支,
旨在针对现代硬件优化:
多 CPU ,SSD 硬盘, NUMA 架构和高速 I/O 通道
(万兆以太/Thunderbolt 等等).
核心亮点在, 无需实际删除 GIL .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://peter-hoffmann.com/2015/pyscaffold-easy-setup-of-a-python-project-with-a-bliss.html"&gt;PyScaffold - 轻松完成 Python 项目部署的幸福&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置好 Python 项目的过程,
对于初学者, 创建包目录树,测试文档结构,生成 &lt;code&gt;__init__.py&lt;/code&gt;
等等是绝对枯燥/繁琐/重复 又易错!
而 PyScaffold 正好解决了所有问题.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/dev/peps/pep-0498/"&gt;PEP-498 获准!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 支持多种方式来格式化文本字串.
包含
&lt;code&gt;%-formatting&lt;/code&gt; , &lt;code&gt;str.format()&lt;/code&gt; , 以及 &lt;code&gt;string.Template&lt;/code&gt; . 
每种都有其优点,以及问题,
以至实践中都无法真正解决问题.&lt;/p&gt;
&lt;p&gt;刚刚准备的 PEP 建议增加一个全新的字符串格式化机制:
文本插值 (Literal String Interpolation).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://git.io/vZWZi"&gt;Python 实现 NSA 的 Simon &amp;amp; Speck 分组密码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;纯 Python 实现的
Simon and Speck block ciphers!
由美国国家安全局在限制性硬件环境中使用为目标设计的,
例如 微型控制器,或是 小型 ASICs/FPGAs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nerd.kelseyinnis.com/blog/2015/09/08/making-django-really-really-ridiculously-secure/"&gt;令 Django 真真的安全&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DjangoCon 2015 上演讲涉及的资源.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.djangoslingshot.com/"&gt;Django Slingshot - Home&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slingshot 是一套工具 ,
用来帮助大家更快/简单的掌握 Django&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-22-bryan-van-de-ven-on-bokeh/"&gt;节目 22 - Bryan Van de Ven on Bokeh&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bryan Van de Ven 
是来自 Bokeh 的项目管理器,
通过图表以及可视化工具,
帮助开发者轻松的创建有吸引力的界面.
文章说明了项目历史,
以及有趣的实用案例,以及近期进展.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyPyStatusBlog/~3/Gb67J00bbNM/pypy-warmup-improvements.html"&gt;PyPy warmup 增强&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整体上达到了 50% 的提速!
降低了 10~30% 的启动预热.
预热 时间和内存有望进一步得了也得.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://andrew.gibiansky.com/blog/machine-learning/coding-intro-to-nns/"&gt;神经网络的快速编程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此教程中, 使用 Python 的 numpy 和 Theano
来体验 机构计算.
通过相关库的简要介绍,
然后快速编码对当前数据属性进行训练
用 神经网络 实现  Logistic 回归.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/benkroop/robinhood"&gt;robinhood&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;139 Stars, 14 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 Robinhood 接口的操作,
完成免佣金自动化股票交易.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PaulSec/twittor"&gt;twittor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;64 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter 全功能后门 C&amp;amp;C 服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/benhamner/hillary-clinton-emails"&gt;hillary-clinton-emails&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;60 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用代码将
Hillary 的邮件从 PDF 原案转化为 SQLite 数据库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OrangeTux/minimal-docker-python-setup"&gt;minimal-docker-python-setup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;32 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最小的 Nginx-uWSGI-Flask-Redis 
工作桟 Docker 镜像,
仅仅 42 mb.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://asciinema.org/a/26061"&gt;Demo of Nginx-uWSGI-Flask-Redis stack. - asciinema&lt;/a&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/crisbal/Album-Splitter"&gt;Album-Splitter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持从 YouTube 下载,
将单 MP3 文件分解为专辑.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mczub/because-moe"&gt;because-moe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动漫流媒体搜索引擎&lt;/p&gt;
&lt;p&gt;anime streaming search engine&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sloria/ped"&gt;ped&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从命令行打开 Python 模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hasherezade/password_scrambler"&gt;password_scrambler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Password scrambler - 
命令行上的 &lt;code&gt;1Password&lt;/code&gt; ,
更加轻松的进行复杂口令的管理!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/semirook/snaql"&gt;snaql&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Python 中无痛使用原始 SQL&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Python 行文中 SQL 的 DSL :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{% sql &amp;#39;users_by_country&amp;#39;, note=&amp;#39;counts users&amp;#39; %}
    SELECT count(*) AS count
    FROM user
    WHERE country_code = ?
{% endsql %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;嗯哼,好象哪里有不对的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150912 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150912 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 45</title><link href="http://weekly.pychina.org/importpython/importpython-45.html" rel="alternate"></link><published>2015-09-06T18:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-09-06:importpython/importpython-45.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/45/"&gt;Import Python Weekly Newsletter - Issue No 45&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/jobboard/"&gt;ImportPython 工作板&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;importpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;亲! 俺们还是增设了工作版块.
绝对免费的发布职位消息哈.如果有需要,直接吼就好.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/swl7j2bU4p0/"&gt;eBook 评: 中级 Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近和作者聊了聊,
Muhammad Yasoob Ullah Khalid 刚刚完成了复审,
同时 Yasoob 也是 &lt;code&gt;Python Tips&lt;/code&gt; 的博主.
此书开源在 github 中,在 ReadTheDocs 编译发行 PDF 版本.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://godjango.com/blog/godjango-podcast-episode-1-interview-with-luke-cro/"&gt;GoDjango 播客第一集 - 访谈 Luke Crouch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Luke Crouch 从 Django 1.4 到 1.7 的升级说了很多事儿,
MDN 则讨论了从专有数据中心到 AWS 是个大坑!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tech.marksblogg.com/crushing-caching-cdn-django.html"&gt;Django 的崩溃,缓存和 CDN 部署&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缓存网页或是网页的一部分,是种网站加速技巧.
Minifying 标记可以协助节省内存型邻邦.
而使用 CDN 意味着你的用户可以就近下载到对应的内容.
文章在 Django 背景中阐述了各种网站加速技巧.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/128116769528"&gt;Django Girls: 更多透明度!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启动 Django Girls 并使之全面开源,一直是项目的重点.
之前,虽然代码仓库从未公开,
至今,我们坚信开源是任重道远的.
维护并持续运营类似 Django Girls 的项目,
必然越来越大,越来越难,越来越慢!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://inventwithpython.com/blog/2015/09/01/further-reading-intermediate-python-resources/"&gt;延伸阅读: 中级 Python 资源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当我们越过初级 Python 用户阶段后,
下一阶段的资源就没那么好找了,
这儿取信了所有计算机专家或是想进一步的程序猿应该 google 的:
标准库, Python 的 OOP, 黑话,流行模块...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/activestate/blog/~3/D_9HFSArQ5E/komodo-92-ide-docker-vagrant-package-installers-and-more"&gt;Komodo 9.2: 支持 Docker, Vagrant, 包安装器等等的 IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Komodo 开发团队,一直忙于增加新功能.
经过数月的努力, 新的 9.2 版本包含了....
嚓! 太多功能!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2015/09/02/automation-for-better-behaviour.html"&gt;自动化更好的行为&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 来编程, PEP8 作为官方推荐风格是毎一位程序猿都应该遵守的!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-21-jessica-mckellar/"&gt;第 21 集 - Jessica McKellar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有幸同 Jessica McKellar 交流,
谈及她在 Python 社区中的各种事迹.
作为 PSF 主管,作为 PyCon 的拓展经验,
或是作为提高入门体验的新手教练.
还讨论了 Python 性能/并发以及环境感知等开展中的工作,
当然还有 OpenHatch 中的工作体验.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CleanCut/green"&gt;green&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;245 Stars, 18 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简洁,彩色,快速的 Python 测试运行器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;兼容各种测试框架.&lt;/p&gt;
&lt;p&gt;&lt;img alt="green" src="https://raw.githubusercontent.com/CleanCut/green/master/screenshot.png" /&gt;&lt;/p&gt;
&lt;p&gt;其实吧,测试框架的问题从来不是颜色,
而是构建时是否吻合直觉...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/onyxfish/proof"&gt;proof&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;81 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;proof 用以创建优化的,可复用的,自我记录的数据分析管道&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codypierce/hackers-grep"&gt;hackers-grep&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;64 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hackers-grep 作为实用程序,
专注搜索 PE 可执行文件的指定字符串,
包含 输入/输出/调试符号...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zg/text-memorize"&gt;text-memorize&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;23 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;帮助记忆给定文本&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用演示: &lt;a href="https://asciinema.org/a/984avh6xfeaqxe8earjpg6xnn"&gt;Text Memorize - asciinema&lt;/a&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/1000mercis/flask2postman"&gt;flask2postman&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:rocket: 
专门为 Flask 应用生成 Postman 配置的工具....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yisibl/sublime-perfectionist"&gt;sublime-perfectionist&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;威力 Sublime Text 插件,
美化 CSS 用!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150907 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150906 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 44</title><link href="http://weekly.pychina.org/importpython/importpython-44.html" rel="alternate"></link><published>2015-08-28T11:11:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-08-28:importpython/importpython-44.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/44/"&gt;Import Python Weekly Newsletter - Issue No 44&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/my-list-of-python-and-sqlite-resources/"&gt;俺的  SQLite Python 资源索引&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;索引了作者 blog 中所有相关 SQLite 文章;
以及其它珍奇的 SQLite 相关资源.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;charles leifer 是位 SQLite 痴迷者 ;-)
持续贡献了多种基于  SQLite 的神奇东西.以往 周刊都有介绍.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.rackspace.com/blog/data-science-baltimore"&gt;数据科学和 Pandas;巴尔的摩市工资分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自从 2008年 McKinney 开始上手以来,
Pandas 已经成为数据科学家最流行最实用的软件组件之一.
通过 IPython/Jupyter notebook 和 Pandas 使用 Python
能令各种数据集的分析简洁/快速.
此文展示了如何基于 data.gov 提供的 巴尔的摩市工资 数据进行分析.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%20Machine%20Learning%20Notebook.ipynb"&gt;数据分析和机械学习项目 Notebook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专门为新人创建的 机械学习案例 Notebook.&lt;/p&gt;
&lt;p&gt;目标是展示 ML 项目的真实过程.
一起来完善吧&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Notebook 已经再次被解构了, 不再指移动电脑,
而是专门指向 ipynb 的 &lt;code&gt;nb&lt;/code&gt;
但是,真心无法找到一个合心的翻译: 闹书? 折腾本?&lt;/p&gt;
&lt;p&gt;看大家是否有创意翻译好.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://scrolltest.com/10-minutes-to-make-our-twitter-bot-with-tweepy-in-python/"&gt;10 分钟上手 Tweepy 运行 Twitter Bot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;twitter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter 是最流行的社交平台,支持用户分享 140 字以内的任意想法并快速传播.
用 Python 可以快速完成一个 Twitter 机械人.
通过 API 获取随机的 Chuck Norris 引用,
每分钟自动张贴到你的 Twitter 上.
详见: 
http://scrolltest.com/10-minutes-to-make-our-twitter-bot-with-tweepy-in-python/#sthash.UeWWjdXT.dpuf&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只是呢...在中国 Twitter 已经成功的从人民头脑中净化走了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://matthewdaly.co.uk/blog/2015/08/02/testing-django-views-in-isolation/"&gt;在 Isolation 中测试 Django Views - Matthew Daly's Blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能大家都听说过 TTD 中应该尽可能的隔离外部系统.
但是,总是无法明确具体怎么作?!&lt;/p&gt;
&lt;p&gt;当然,在 Django 中的 isolation 能轻易的作到!
对任意对象进行 创建/保存/检查属性.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/icgood/continuous-docs/"&gt;Python 中持续生成文档 (教程和实例)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 github 生态,进行文档的持续集成!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/127466985198/your-django-story-meet-michela-ledwidge"&gt;你的 Django 故事: 遇见 Michela Ledwidge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Michela Ledwidge 
是位艺术家,在重新导演电影和游戏间的界定.
2004年, 她就获得了 NESTA创新奖 &lt;code&gt;remixable film&lt;/code&gt; ,
其中包含了她在视觉和数字文化方面的尝试.
她也是 国防部工作室的联合创始人,一直领导多项产品的创新.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pyfound.blogspot.com/2015/08/jessica-mckellar-receives-2015-frank.html?m=1"&gt;Jessica McKellar 赢得 2015 Frank Willison Award - Python 软件基金会新闻&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Foundation News&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am extremely happy to report that this year’s Frank Willison Award was presented at OSCON 2015 to Jessica McKellar (see Award Ceremony).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.yhathq.com/posts/customer-segmentation-using-python.html"&gt;用 Python 细分客户&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章涉及内容其实比较简单.
但非常基础业务: 对客户进行细分.
核心目标是识别不同类型的客户,
进而发现如何找到更多用户的方法,然后就可以...
嗯哼! 获得更多客户!&lt;/p&gt;
&lt;p&gt;展示如何分析,使用 K-均值聚类 算法,进行客户细分的探索.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.andreagrandi.it/2015/08/23/how-to-write-a-custom-django-middleware/"&gt;如何编写 Django 中间件 | Andrea Grandi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要理解 Django 中间件的工作原理,
霰记住 Django 的基本架构和由请求和响应构成的.
中间件顾名思义就是停留在中间的组件 ;-)
详细链接中...&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joschu/cgt"&gt;cgt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;265 Stars, 13 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;计算图形工具包&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于 C++ 后端,可用 CUDA 加速的计算过程图形化分析工具!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/icgood/continuous-docs"&gt;continuous-docs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;193 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前文介绍的文档持续集成示例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spotify/postgresql-metrics"&gt;postgresql-metrics&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;73 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 PostgreSQL 数据库提取指标数据.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yabok/shadowsocks"&gt;shadowsocks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;39 Stars, 105 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼 &lt;strong&gt;https://github.com/Long-live-shadowsocks/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;LLAP SS !-)&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rfyiamcool/toproxy"&gt;toproxy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用tornado实现的高性能代理服务器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国人作品!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dufferzafar/what-to-watch"&gt;what-to-watch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;帮助选择看什么电影的脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rougier/numpy-tutorial"&gt;numpy-tutorial&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Numpy 新手教程&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Loachy/Obfuscate-SSL"&gt;Obfuscate-SSL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过SSL流量混淆&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150828 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150828 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 43</title><link href="http://weekly.pychina.org/importpython/importpython-43.html" rel="alternate"></link><published>2015-08-21T18:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-08-21:importpython/importpython-43.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/43/"&gt;Import Python Weekly Newsletter - Issue No 43&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howchoo.com/g/zdvmogrlngz/python-regexes-findall-search-and-match"&gt;Python 正则表达式 - findall, search, and match&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教程涵盖了 Py 中常见的正则表达式知识:findall, search, and match.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.quantopian.com/lectures"&gt;定量金融讲座&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当前的基于: IPython Notebooks, Backtests, and Videos&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/paulnasca/2xphases/tree/master/2xautoconvolution"&gt;Python 实现有趣的音频效果 (含实例)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 autoconvolution 的音频效果,
对输入的音频卷积本身.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythontesting.net/1"&gt;(PT001)Python 测试中的 expect - Python Testing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;播客上的测试课程.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ramiro.org/notebook/top-incomes-share/"&gt;在 Jupyter Notebook 用 Pandas 和 Matplotlib 探索项级 收入数据库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;世界顶级收入数据库
源自 Thomas Piketty 2001 年发起研究,
收集了20多个国家的海量数据.
目的是成为进一步分析和研究的资源.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/django-flat-theme"&gt;django-flat-theme 0.9.5 : Python 包索引&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;django-flat-theme 给 Django 万年不变的界面带来了全新的变化.
此主题令管理界面 UI 现代而干练&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="django-flat-theme" src="https://cloud.githubusercontent.com/assets/209663/6742226/df93e556-ceaf-11e4-98ad-7c5b4871fc04.png" /&gt;&lt;/p&gt;
&lt;p&gt;俺能说和原先一样丑嘛?!怪不得,  DjangoGirls 的MM 一直比 RubyGirls 的少...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/aug/18/security-releases/"&gt;安全版本发布: 1.8.4, 1.7.10, 1.4.22&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据 Django 的安全版本策略,
批量发布版本升级
-- Django 1.4.22, 1.7.10, 和 1.8.4. 
都修复了对应的关键安全问题.
鼓励所有用户及时升级.
当然主分支也已更新.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pyvideo.org/category/74/pygotham-2015"&gt;PyGotham 2015&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上周末 PyGotham 2015 的视频已经释放.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-19-al-sweigart-on-python-for-non-programmers/"&gt;节目 19 - Al Sweigart 为非程序员介绍 Python &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和 Al Sweigart 谈论
&lt;code&gt;用 Python 对一些无聊的事儿完成自动化&lt;/code&gt;
以及 &lt;code&gt;用 Python 来创造&lt;/code&gt;
等,
话题关注不是软件工程师的普通人如何从 Python 中获益,
为什么大众的编程体验,
对界面互动有重大意义...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythontips.com/2015/08/17/intermediate-python-released/"&gt;中级Python 发布!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼,非常自豪的宣布,经过各种折腾后,
终于这书能发布了!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;http://book.pythontips.com&lt;/p&gt;
&lt;p&gt;&lt;img alt="封面" src="https://github.com/yasoob/intermediatePython/raw/master/_static/cover.png" /&gt;&lt;/p&gt;
&lt;p&gt;开源好书! 当然 E文的...以及 Sphinx 的;-)&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/126902799878/your-django-story-meet-nicole-harris"&gt;你的 Django 故事: 遇见 Nicole Harris&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nicole Harris 是位专业的设计师及程序员
- 总是习惯钻研事物设计的一面,
接触到 Django 模板后,
进一步学习了其它框架,
顺便撸了 Python 和 Javascrip 等等.
之前在澳洲有自个儿的公司(Kabu Creative),
三年后,搬到了 UK.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/KsljpqxUD-0/"&gt;用 Python 获取屏幕的分辨率&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近在折腾用 Python 获得屏幕分辨率,
当然这不是一般的思路,而且还无法跨平台,
但是,谁让咱们想折腾呢,所以,分享各种方法.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/IntermediatePython/intermediatePython"&gt;intermediatePython&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;420 Stars, 54 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你还是初学,
这书中有 中/高级 程序员必须的好东西&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ExPHAT/twitter-sort"&gt;twitter-sort&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;285 Stars, 20 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter Sort 
排序算法库,
基于 Twitter API.
通过脚本将一堆想排序的数字
通过 tweet 咨询愿意帮忙的真人,
综合起来,将结果打印到控制回来.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bndr/pipreqs"&gt;pipreqs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;275 Stars, 13 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从真实的代码挖掘出项目真正导入的模块,
并组织为 pip requirements.txt&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/inconvergent/differential-line"&gt;differential-line&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;241 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此算法能模拟自然生长,
包含其它算法还能模拟人类大脑/植物的生长...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Deimos/SubredditSimulator"&gt;SubredditSimulator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;217 Stars, 20 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 马尔可夫链 创建自动化 subreddit 发布器.
&lt;code&gt;/r/SubredditSimulator&lt;/code&gt;
中包含的代码,
能根据评论和提交文件,
分析出最合适的回复&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ssanderson/switchcase"&gt;switchcase&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用纯 Python 实现的 Switch-Case 结构.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marklit/airline-passenger-counts"&gt;airline-passenger-counts&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;机场间商务航班乘客计数
(为最近一年的报道,通常是 2013). 
这些脚本收集的数据,
能构建多个航线间的映射关系图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Syntaf/travis-sphinx"&gt;travis-sphinx&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过 travis-ci 自动化构建/部署 Sphinx 文档的独立脚本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/beshrkayali/gifbook"&gt;gifbook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GifBook: 从视频和字幕文件生成 gif 动画!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150821 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150821 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 42</title><link href="http://weekly.pychina.org/importpython/importpython-42.html" rel="alternate"></link><published>2015-08-14T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-08-14:importpython/importpython-42.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/42/"&gt;Import Python Weekly Newsletter - Issue No 42&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/python-bindings-for-the-sqlite4-lsm-key-value-store/"&gt;Python 绑定的 SQLite4 LSM Key/Value 存储&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQLite4 文档有曰,
全新的 K/V 数据库将成为默认储存层.
于是,作者不淡定了,直接根据文档,
分析 LSM 头文件(非常小)完成编码,
变成了 &lt;a href="https://github.com/coleifer/python-lsm-db"&gt;python-lsm-db&lt;/a&gt; 发布在 github 上.
当然的,文档在 RTFD.org : &lt;a href="http://lsm-db.readthedocs.org/"&gt;lsm-db docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;喜大普奔!-) redis 毕竟是第三方软件, SQLite 可一直内置在 Py VM 中的哪!&lt;/p&gt;
&lt;p&gt;SQLite 毕竟小巧,追加新特性任性的多,
这次是 &lt;a href="https://en.wikipedia.org/wiki/Log-structured_merge-tree"&gt;log-structured merge-tree&lt;/a&gt; 基于结构 log 的树合并 ?&lt;/p&gt;
&lt;p&gt;嗯哼,此 log 非彼 log 参考: &lt;a href="http://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying"&gt;The Log: What every software engineer should know about real-time data's unifying abstraction | LinkedIn Engineering&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kevinbeaty/flask-debug-api"&gt;Flask-Debug-API: 用Flask-DebugToolbar调试你的 REST API &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask-DebugToolbar 接口一览&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kronosapiens.github.io/blog/2015/04/28/rabbitmq-aws.html"&gt;在 AWS 设置队列服务: Django, RabbitMQ, Celery &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章带领我们在 AWS 上,
用 Django, RabbitMQ, Celery 用设置任务队列.
我们可以发现各个专门文档,但是,很少有联接起来组成完成服务的整体性文档.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2015/08/10/aws-load-balancers-django/"&gt;Django 在 AWS 的负载均衡&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;aws&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近正好在 AWS 中折腾负载均衡,
虽然设置这项服务不复杂,
但是,还是有各种坑,所以,记录下来分享给大家.&lt;/p&gt;
&lt;p&gt;-&lt;a href="http://blog.djangogirls.org/post/126496144993"&gt;Django Girls 代码之冬&lt;/a&gt;
    django&lt;/p&gt;
&lt;p&gt;"... Django Girls 主邮箱经常收到的问题是各个公司来咨询是否有靠谱的程序媛.
另一方面,又是程序媛在咨询是否有靠谱的职位.
所以,我们决定在网站上发布 工作 信息!"&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pygotham.org/2015/talks/schedule"&gt;PyGotham 2015 (NYC Python 大会) 演讲日程已发布!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 NY 的话,一定要上!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.flaskapi.org/"&gt;Flask API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask API 是类似 Django REST 框架提供 web 浏览接口.
当前开发中,但是已经可用.
只是要关注新版本的发布说明,以免不兼容.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howchoo.com/g/ztk0mzq0mdy/generate-a-list-of-primes-numbers-in-python"&gt;用 Python 生成素数列表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;素敉的寻找一向用作编程挑战的题目,
这里收集了一些有趣的方式, 来提取 50 以内的素数.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/pyladies/comments/3ghj2s/your_django_story_meet_cynthia_monastirsky/"&gt;你的 Django 故事: 遇到 Cynthia Monastirsky&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cynthia 来者阿根廷的 布宜诺斯艾利斯.
现为  Python/Django  程序媛.
Cynthia 是很多技术活动的参与者: Django/Python/基础设施/建筑/持续交付/前端...
以及各种当地社区.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/a1yIx-RxQW4/python-3.html"&gt;Python 3.5.0 候选版本1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.5.0rc1 已经可下载,
预览版本,不建议用在生产环境中.
但是,作为 rc 已经足够接近最终版本了.
正式版本将在 9月中旬发布.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geerk/django_linter"&gt;django_linter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只是个 Plylint 的简单扩展,
但是,针对 Django 工程.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;连 Django 都选择了 Pylint 看来可以决定了!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/minimaxir/big-list-of-naughty-strings"&gt;big-list-of-naughty-strings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3898 Stars, 135 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;淘气字串大列表&lt;/code&gt; ~ 收集了用户输入时经常出错的字串,
包含 py 脚本和 JSON 格式数据.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kurozael/twitter-contest-bot"&gt;twitter-contest-bot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;34 Stars, 19 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轮询推内容并转发,
灵感来自 http://www.hscott.net/twitter-contest-winning-as-a-service/&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiebarrat/twitter-contest-enterer"&gt;twitter-contest-enterer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入 "Re-tweet to win"-式 内容&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karan/slashgif"&gt;slashgif&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;向 Twitter 发布 GIFs 
by doing "@slashgif coffee break".&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ThaWeatherman/flask-hashing"&gt;flask-hashing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flask-Hashing 
作为 Flask 的扩展,
提供了方便的函式来完成各种 HASH 数据处理.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xybu/onedrive-d"&gt;onedrive-d&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Microsoft OneDrive 在 linux 上的客户端.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,希望 M$ 足够大肚,不会象当前 qq 一样禁止相关接口.
)
- &lt;a href="https://github.com/MartinPaulEve/PlotSummary"&gt;PlotSummary&lt;/a&gt;
    - 12 Stars, 1 Fork&lt;/p&gt;
&lt;p&gt;PlotSummary 用来扫描指定目录的文件,
并根据文件内容词汇生成相关 词频/分布 的图表!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="JohnBarthExample" src="https://github.com/MartinPaulEve/PlotSummary/raw/master/docs/JohnBarthExample.png?raw=true" /&gt;&lt;/p&gt;
&lt;p&gt;目测不支持中文...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dufferzafar/pocketmon"&gt;pocketmon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对标记的 Pocket 文章基于时间来提醒.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150814 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 42 分钟完成快译&lt;/li&gt;
&lt;li&gt;150814 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 41</title><link href="http://weekly.pychina.org/importpython/importpython-41.html" rel="alternate"></link><published>2015-08-08T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-08-08:importpython/importpython-41.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/41/"&gt;Import Python Weekly Newsletter - Issue No 41&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-run-django-with-mod_wsgi-and-apache-with-a-virtualenv-python-environment-on-a-debian-vps"&gt;如何在 Debian VPS 中用 Apache 和 virtualenv 用 mod_wsgi 跑 Django | DigitalOcean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;apache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯哼, 用 Apache 跑起 Django 得看这个靠谱的指南&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Apache 是过气的怪兽, Django 是怪兽ing 的怪兽,
所以,难...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P0pIW5tJrRM"&gt;Clayton Parker - PDB乍整? - PyCon 2015&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pdb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;讲座深入介绍了 Python 调试工期命令以及功能.
了解如何理解调试输出,
以便更好的理解 PDB 的如何工作的.
PDB 对各级 Python 程序猿来说都是非常有价值的工具,
是的必须认真的入手用起来了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/ClickSecurity/data_hacking/blob/master/dga_detection/DGA_Domain_Detection.ipynb"&gt;用 Python Pandas, matplotlib 和 sci-kit 机械学习模块中的测算法生成域名&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this notebook we're going to use some great python modules to explore, understand and classify domains as being 'legit' or having a high probability of being generated by a DGA (Dynamic Generation Algorithm). We have 'legit' in quotes as we're using the domains in Alexa as the 'legit' set. The primary motivation is to explore the nexus of IPython, Pandas and scikit-learn with DGA classification as a vehicle for that exploration.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;都是专业领域的名词,就不翻译了.反正又是 ipynb 一个神奇的活案例
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/125749719318"&gt;你的 Django 故事: 遇到 Vivian Guillen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;周慧敏 是位喜欢把事情作到漂亮,功能整到更强的一位全桟程序媛.
同时也在折腾bitcoin,
并是 Startup Weekend 教育组织者.
开始写 Python 后,
就成为 PyLadies 圣多明各分会的组织者.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Google 翻译呢,自动识别 vivian 为周慧敏的哈.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/building-the-sqlite-fts5-search-extension/"&gt;用 SQLite 构建 FTS5 搜索扩展&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sqlite&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQLite 3.8.11.1 包含了全新的实验性的,
全文搜索引擎扩展.
不仅包含了很多加强,而且内置了 BM25 排名,
决定折腾一下,所以,有了这篇笔记,
也希望大家共同来完善这个扩展.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/08/retrying-celery-failed-tasks/"&gt;重试芹菜的失败任务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺有个项目要调用 Twitter 接口获取用户的推.
Tiwtter 虽然提供了相关接口.
涉及在后台进行网络请求,
所以,俺们就上了 芹菜 管理请求任务,
这样才能明确是否真正的完成了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3fqpys/why_was_python_written_with_the_gil/"&gt;为毛 Python 写有 GIL ?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;gil&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;全局锁(GIL) 经常作为 Python 的一个原罪来讨论.
"为什么?!"
但是作为一个一名程序猿,
更想探索 GIL 背后的逻辑...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.microsoftvirtualacademy.com/liveevents/building-websites-with-python-and-django"&gt;用 Python 和 Django 构建网站 - 完成免费实时会议系统&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拥有 Python 经验后,想立即进入 web 开发?
或还想体验其它平台的 web 开发?
无论哪种开发,
都需要前人的经验,示例,技巧来辅助学习.
加入 Christopher Harrison 和 Susan Ibach 的给力教程吧.
通过逐步操作,体验所有流行的强力的各种 web 开发工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2015/08/05/announcing-django-girls-rdu-free-coding-workshop-women/"&gt;注意 Django Girls RDU: 女性专设开发工作坊&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常高兴 Django Girls RDU 正式启动,
在 NC 三角洲将举行为期一天的女性工作坊.
Django Girls
是已经惠及 1600+ MM 的国际活动,
专门教授 MM 来写代码.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://leancrew.com/all-this/2015/08/pandas-and-cubs/"&gt;Pandas 和 Cubs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;data science&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;怎么用 Pandas 和 Matplotlib 如何
根据大联盟的历史数据来预测未来赛季的成绩...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.8/internals/contributing/writing-code/coding-style/"&gt;Django 代码风格&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;刚刚发布的 Django 风格规范,
值得遵守...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2015/08/06/announcing-caktus-open-source-fellowship/"&gt;Caktus 开源基金发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用以推动 Caktus 项目的基金,
办事处设立在 达勒姆市中心, 正在募集合作方.
正如 Django 基金会,
也在招集兼职, 进行秋季实习计划.
如果成功的话, 可能升级为全职.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/DougHellmann/~3/8lMTjAlcCSQ/pyohio-talk-on-smiley-and-iterative-development.html"&gt;PyOhio 2015 讨论 Smiley 和迭代开发&lt;/a&gt;
Yesterday I gave a talk titled “How I Built a Power Debugger Out of the Standard Library and Things I Found On the Internet” at PyOhio 2015. The slides and video are now online. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rushter/data-science-blogs"&gt;data-science-blogs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;926 Stars, 55 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据科学 blog 列表.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/puniaze/PortDog"&gt;PortDog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;71 Stars, 19 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PortDog 是利用端口检测技术的网络异常检测工具.
完全 Python 制造,
配合友好的界面,已经在 Ubuntu 15 上通过测试.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emre/relationships"&gt;relationships&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;53 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;redis 为后端,
用简单形式来描述用户关系&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="relationships" src="https://camo.githubusercontent.com/e4848c7e224c2152e40d9bcd8aaf101e8c576204/687474703a2f2f692e696d6775722e636f6d2f48616b7278764a2e706e67" /&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/m-messiah/ipgeobase_importer"&gt;ipgeobase_importer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;30 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 ipgeobase 导入为 nginx geoIP 兼容文件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/catherinedevlin/python_learners_glossary"&gt;python_learners_glossary&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Pardon jargon 的解释,
帮助 Python 新手理解 Pythonista 黑话.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chaitin/sqlchop"&gt;sqlchop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 SQL 标记和语法分析的 SQL 注入检测引擎.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mrocklin/cachey"&gt;cachey&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于缓存的时空计算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/BlackLight/Takk"&gt;Takk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;语音识别从未如此简单.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/crowdwave/serve_swagger"&gt;serve_swagger&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Swagger API JSON 创建 Falcon REST APIs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/recruit-mtl/erajp"&gt;erajp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将日期转换为 日据时代年号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/numixproject/numibot"&gt;numibot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Telegram Bot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shubham0d/crack-it"&gt;crack-it&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于字典专门用以破触各种 hash 值!
甚至于加过盐的...&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150807 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 完成快译&lt;/li&gt;
&lt;li&gt;150807 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 40</title><link href="http://weekly.pychina.org/importpython/importpython-40.html" rel="alternate"></link><published>2015-07-27T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-07-27:importpython/importpython-40.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/40/"&gt;Import Python Weekly Newsletter - Issue No 40&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cn.pycon.org/"&gt;Pycon 中国&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;已经是第5届!
由 PyChina.org 主办, 相关社区合办,今年将在北上广三城,
分别举行,官网已经开始征集分享议题, 请积极参与,营造自个儿的大会.&lt;/p&gt;
&lt;p&gt;ps:
中文版的 ImportPython Newsletter 也是 PyChina 社区主持快译的:
http://weekly.pychina.org/importpython/index.html&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-14-04"&gt;如何在 Ubuntu 14.04 中令 Django 协同 Postgres, Nginx, 和 Gunicorn on Ubuntu 14.04 | DigitalOcean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;postgres, django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详细演示如何安装/配置一系列组件,令Django 流畅运行起来&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.endgame.com/blog/examining-malware-python"&gt;用 Python 检查恶意软件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之前就曰过, 想开发格哪学习来解决安全问题,
缺乏开放和标记数据库是个巨大的隐患.&lt;/p&gt;
&lt;p&gt;这里就是立志解决这一问题的标记工作.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/introduction-to-the-fast-new-unqlite-python-bindings/"&gt;介绍全新的高速 UnQLite Python 绑定库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;cpython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UnQLite 是种无服务的 JSON 式文档 键/值 数据库.
一年前,作者用 Python 创建了这一项目,
现在用 Cython 重写了整个儿库,
完成了速度上数量级的提高.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/uzryswOBBMw/"&gt;定量分析: 使用 Notebooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是运用 Python 进行定量分析的系列blog.
本文先介绍了 IPy 的 notebook,
一个当前最流行的结构化计算工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lincolnloop.com/blog/uwsgi-swiss-army-knife/"&gt;uWSGI 瑞士军刀&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;wsgi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;uWSGI 是那种即使每个版本都在增加新功能,但是工程却没有变的臃肿/缓慢/不稳定的项目.&lt;/p&gt;
&lt;p&gt;文中分享了一些技巧来利用 uWSGI 优化你的服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2015/07/23/learning-seattles-work-habits-from-bicycle-counts/"&gt;从自行车计数分析西雅图的工作习惯&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;去年作者写文章论述了通过研究在 西雅图 自行车骑行的趋势,
以及和 天气/星期 等其它因素的关联.
现在从另外一个角度进行分析,
并构建了无监督的机械学习模型,
来进一步探索&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3e1ppr/guido_van_rossum_live_at_europython_2015/"&gt;Guido Van Rossum 在 europython 2015 的演讲&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3小时! 必看.&lt;/p&gt;
&lt;p&gt;https://www.youtube.com/watch?v=yCg3EMf9EYI&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://godjango.com/96-django-and-python-3-how-to-setup-pyenv-for-multiple-pythons/"&gt;Django 和 Python 3 用 Pyenv 完成多环境配置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要 Python 3 环境来开发 Django 应用,
但是,同时又得兼顾几个运行在 2.7 环境中的老应用.
幸运的是 Pyenv 能完成良好的环境猜测和自动切换.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.codementor.io/spark/tutorial/building-a-recommender-with-apache-spark-python-example-app-part1"&gt;用 Apache Spark 和 Flask 构建电影推荐系统 - 第一部分 | Codementor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此教程,一步步引导如何使用 MovieLens 数据集,
用 Spark 的协同过滤器完成分析,形成推荐.
主要由两部分组成:
第一个是获取和分析电影的收视率数据,并导入为 Spark RDDs.
第二个是构建推荐,并通用化为其它应用也可以使用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/07/understanding-django-middlewares/"&gt;理解 Django 中间件&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同以往 Agiliq 贡献的好文一样.
假设读者已经阅读过 Django 中间件相关文档.
这里进一步详细阐述涉及的各种关键概念.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.twoistoomany.com/blog/2015/7/16/mesos-django-and-aurora-and-circleci-too"&gt;Mesos &amp;amp; Django (以及 Aurora 和 CircleCI) — Michael Twomey&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Ireland 大会上有曰,
综合 Aurora 以及 CircleCI 让 Django 应用部署幸福起来.
这里有进一步的笔记.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://b-list.org/weblog/2015/jul/22/couple-quick-tips/"&gt;一些快速技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这天,你又花了不少时间梳理开源代码/维护/发布,以确保所有实例都用上了最新代码.
这一路,其实有很多小技巧能加速这一过程的.
那么,以 编写和发布 Django 应用为例来实践一下吧.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/avinassh/rockstar"&gt;rockstar&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1558 Stars, 96 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2分钟以内创建 Rockstar C++ 程序!
虽然和 Python 无关,但是相当有趣.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ericls/tushe"&gt;tushe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;36 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Flask 完成的web 服务 专注图库的浏览/分享.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ugo-nama-kun/DQN-chainer"&gt;DQN-chainer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;36 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 用 Chainer 实现的 Deep Q-Networks 来自动玩
ATARI 游戏.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PySide/pyside2"&gt;pyside2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;23 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pyside 在 github 的仓库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Martyn96/SpeechBot"&gt;SpeechBot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 来朗读 Telegram 文字的机械人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rosarior/django-sabot"&gt;django-sabot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在你的 Django 项目中管理可预见的错误&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ElementalCode/Elemental"&gt;Elemental&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为前端 web 技术完成的可拖放块.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryanskidmore/PyPhantom"&gt;PyPhantom&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PhantomJS 的基础接口&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;爬虫必备武器,也是无头浏览器的关键组件.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TachyonNZ/textcom"&gt;textcom&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 用 XCOM: Enemy Unknown 实现的基于文本的 Roguelike &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aehaynes/reddit_authorship"&gt;reddit_authorship&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Bitcoin 多帐号的交易检验 ,
报告全文参考 andrehaynes.me/portfolio &lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150727 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 完成快译&lt;/li&gt;
&lt;li&gt;150727 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 39</title><link href="http://weekly.pychina.org/importpython/importpython-39.html" rel="alternate"></link><published>2015-07-17T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-07-17:importpython/importpython-39.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/39/"&gt;Import Python Weekly Newsletter - Issue No 39&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/dPL7jUJwgss/get-started-with-functional-programming-in-python.html"&gt;Orielly 免费书 - 开始用 Python 进行函式编程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本书为读者展示了如何用函式编程来令项目更加易于创建和维护.
嗯哼,免费的!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;原版可爱的 Python 作者!&lt;/p&gt;
&lt;p&gt;国内下载: &lt;a href="http://zoomq.qiniudn.com/ZQCollection/pdf/eBOOK-2015-07-19.zip"&gt;eBOOK-2015-07-19.zip&lt;/a&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/news/2015/07/Python-35"&gt;Python 3.5 承诺新语法特性&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.5 核心开发者 Benjamin Peterse 曰了,
新语法特性以及新内建模块,等等,将显著提高库的效能.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是向 go 看齐的节奏哪....&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wingware.blogspot.com/2015/07/debugging-python-code-on-raspberry-pi.html"&gt;在树莓派上用 Wing IDE 来调试 Python 代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raspberry Pi 
并不是真的能跑  Wing IDE,
但是,通过远程工程的配置,可以连接到远程代码进行调试.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;坊间传说,世界上最远的调试是从地球调试月球轨道上的 LISP 应用...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.europython.eu/post/124165903022"&gt;EuroPython 2015: 指南 (移动版) 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;conference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大会新功能,
包含会场地图/完整的时间表/可创建个人日程/订阅 Twitter 标签,
可登录联络其它参会人员,
常用信息(联系人,CoC,FAQ,城市信息....)
而且能脱机使用(原生 app.)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自从 Google I/O 2012 提供了大会专用 App. 后,
这已经成为了技术大会的标准配置了.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://developers.lyst.com/2015/07/10/ann/"&gt;搜索 Approximate 最近邻居&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning    &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近邻居算法有很多,
最常见的是先分离空间为多个"桶",
然后在内进一步评估.
这令计算速度是以精确度为代价的...&lt;/p&gt;
&lt;p&gt;细节链接中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/07/getting-started-with-celery-and-redis/"&gt;芹菜和 Redis 使用入门&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;redis, celery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章论及何时应该用芹菜?为什么要用?...&lt;/p&gt;
&lt;p&gt;芹菜是 Python 世界著名的分布式计算框架,
一个原先缓慢的脚本,进入 芹菜 后能获得速度量级的提升!
芹菜又天然支持多种后端, Redis 是其中最简洁的一种.
如何配置 Redis 在不同的机器中, 通过 芹菜良好的协同起来?&lt;/p&gt;
&lt;p&gt;细节链接中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/579079-decorator-for-defining-functions-with-keyword-only/"&gt;唯一键函式修饰符 (Python)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python2.x 实施 python3's keyword-only arguments 
(即, 必须指定关键字,不受位置影响 - 参考 PEP 3102).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-15-damien-george-talks-to-us-about-micropython/"&gt;节目 15 - Damien George 曰 MicroPython&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不依赖 OS 的微型 Python 控制器.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.talkpythontome.com/episodes/show/16/python-at-netflix"&gt;节目 #16 Python 在 Netflix - [播客:跟俺说 Python]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.elliottmiller.me/2015/06/azure-ad-in-django-with-python-social.html"&gt;Elliott 开发 Blog: Azure AD 在 Django 社会化验证&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Azure Active Directory (AAD) 
已进入 Python-Social-Auth 库.
将其结合到 Django 应用中, 出乎意料的轻松!
这篇文章比库文档更加直白的说明了整个儿过程.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheEndeavour/~3/ioZwJmNKjaM/"&gt;Python 中的科学计算&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;科学计算在 Python 中迅速成熟中!&lt;/p&gt;
&lt;p&gt;上周在 SciPy 2015 大会,比去年增长了两倍!
笔者连续参加了三年, 
Jake VanderPlas 的演讲, 深刻的揭示了,
科学计算能力桟在 Python 世界的发展.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://birdhouse.org/blog/2015/06/16/sane-password-strength-validation-for-django-with-zxcvbn/"&gt;用 zxcvbn 进行 Django 的口令强度检验 | scot hacker's foobar blog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dropbox 刚刚发布了非常智能的口令强度检验库: zxcvbn
(check the bottom left row of your keyboard)&lt;/p&gt;
&lt;p&gt;在后台运行的 zxcvbn 消除了字典的依赖,
而是引入了全部的概念:
保持后端检验的同时,确保前端的及时响应.&lt;/p&gt;
&lt;p&gt;作者将具包装为了 Django 工具包,
同时满足以上两种期待.&lt;/p&gt;
&lt;p&gt;(当然,必须的,有其它 zxcvbn 实现,只是还没看到过.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.marinamele.com/taskbuster-django-tutorial/internationalization-localization-languages-time-zones"&gt;Django 教程| i18N 和 L10N &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;讨论国际化和本地化以及时区,
展示如何为我们的网站创建针对每个人的网址/语言界面.
以及如何根据时区显示本地时间的模板.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bencbartlett/Animator5D"&gt;Animator5D&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;55 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常易用的 5维 gif 动画生成器
(X,Y,Z,时间,颜色).&lt;/p&gt;
&lt;p&gt;依赖 ImageMagick 和框架的结合.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lyst/rpforest"&gt;rpforest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;27 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成随机森林投影&lt;/p&gt;
&lt;p&gt;&lt;img alt="rpforest" src="https://github.com/lyst/rpforest/raw/master/rpforest.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/narenaryan/Salary-API"&gt;Salary-API&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;芝加哥市职工工资API,
用 Python 基于 Flask 仅一小时内完成.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DrkSephy/technetium"&gt;technetium&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bitbucket Centralized 的提案追踪和报告生成器&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;K.K 发明的 &lt;code&gt;科技元素&lt;/code&gt; 终于被抢先用上了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/njsmith/sempervirens"&gt;sempervirens&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为开放数据科学, 收集实验性质数据的工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jabbalaci/screenshot.py"&gt;screenshot.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抓网页为截屏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Parkayun/pyprice"&gt;pyprice&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;股票价格指数的包装&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/captainsafia/data-analytics-course"&gt;data-analytics-course&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 桟来进行数据分析的仓库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mithodin/csv2tex"&gt;csv2tex&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 csv 数据变成 LaTeX 表格, WoW!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aktech/sympy-pycon"&gt;sympy-pycon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 印度 - SymPy 幻灯&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/centaurialpha/pireal"&gt;pireal&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关系代数的教育工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pireal logo" src="https://github.com/centaurialpha/pireal/raw/master/src/images/pireal_banner.png" /&gt;
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150720 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 完成快译&lt;/li&gt;
&lt;li&gt;150717 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 38</title><link href="http://weekly.pychina.org/importpython/importpython-38.html" rel="alternate"></link><published>2015-07-03T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-07-03:importpython/importpython-38.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/38/"&gt;Import Python Weekly Newsletter - Issue No 38&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;翻译ing...&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.startifact.com/posts/morepath-batching-example.html"&gt;用 Morepath + Jinja2 构建更好的用户界面&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Morepath 是又一个 Python web 框架,
虽然 Morepath 非常适合打造 REST API,
其实也是很好的服务应用平台.
这里来展示如何基于 Morepath 创建批处理 UI.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.zoomeranalytics.com/pip-install-t/"&gt;pip -t: 对 virtualenv 的简洁替代&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pip&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通常 virtualenv 是唯一的隔离不同 Python 项目环境依赖的方案.
现在有种神奇的替代方案.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目测受 node_model 启发.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/06/proxying-to-python-web-application.html"&gt;代理在 Docker 中运行的 Python web 应用.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺见过几个问题,都引发自在 Docker 运行的 Python web 应用,
用 Apache 难以合理代理.&lt;/p&gt;
&lt;p&gt;其实,这都是以往在主机上习惯用 Apache/mod_wsgi 进行发布的结果.
其实,现在用 Docker 已经打破了,传统的部署思路.
改进了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/V8q86BPZaOs/"&gt;Python 101: 节目 #7 – 异常捕获&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python, video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最新节目,介绍异常处理,希望大家喜欢.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://skillsmatter.com/skillscasts/6475-testing-django-applications-using-hypothesis"&gt;用 Hypothesis 测试 Django 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;David MacIver 
讨论如何用 Hypothesis 测试 Django 应用的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/06/installing-custom-python-version-into.html"&gt;在 Docker 镜像中安装定制版本的 Python.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 Linux 发行版本,内置的软件很快就会过时,
这个问题日益严重.
基于 Linux 的包管理策略,除非发行商,升级版本,否则,
我们无法通过包安装到最新版本软件.&lt;/p&gt;
&lt;p&gt;必须解决了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/122760203063"&gt;Django 故事: Iulia Chiriac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Iulia 是位全桟式 web 工程师,
以及开源爱好者.
过去三年中每一分钟都沉浸在 Python 中.&lt;/p&gt;
&lt;p&gt;之前,当然也体验过很多语言,包含 C/C++/C#/PHP 和 JAVA .
目前,就职于 总部在 Bucharest 的罗马尼亚公司 Eau de Web (http://www.eaudeweb.ro)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/jun/29/simple_tag-security-advisory/"&gt;Django 安全顾问: simple_tag 不能 auto-escaping&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文档中曰过,用以创建自定义模板的 simple_tag
修饰器,不能自动对其内容进行转义(Django 1.8).
这使得非常容易被 XSS 攻击.
具体示例链接中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/3bcfba/learning_resource_at_intermediate_to_advanced/"&gt;Python 学习中不同层次的经验和建议.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;reddit 热议中,值得关注.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jschaf/pylint-flask"&gt;用 pylint 和 flask 远离错误&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pylint-flask 是 Pylint 插件,
专注针对 Flask 应用进行分析,
基于 pylint-django 的启发.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.europython.eu/post/122845271022"&gt;EuroPython 2015: 网站义工召集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EuroPython 也是由社区志愿者组织和运行的,
当然只需要少数给力的志愿者,所以,来吧!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.smallsurething.com/python-descriptors-made-simple/"&gt;令 Python 描述简单&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Python 2.2 引入了全新的对象属性管理方法,
以便在内置库和第三方库之间,
减少 &lt;code&gt;魔法&lt;/code&gt; 情况出没.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jcjohnson/cnn-vis"&gt;cnn-vis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;180 Stars, 18 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;受到谷歌最近 Inceptionism 
博客文章的启发,&lt;/p&gt;
&lt;p&gt;cnn-vis 作为开源工具, 协助我们用 卷积神经网络来生成图像&lt;/p&gt;
&lt;p&gt;&lt;img alt="cnn-vis" src="https://camo.githubusercontent.com/2c76373d72fa266e8a4c614e4b301c48cf1c10b0/687474703a2f2f63732e7374616e666f72642e6564752f70656f706c652f6a636a6f686e732f636e6e2d7669732d6578616d706c65732f6578616d706c6531322e706e67" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/agermanidis/autosub"&gt;autosub&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;72 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为任意视频自动生成字幕文件&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;喂! 字幕组怎么办!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/harshasrinivas/cli-github"&gt;cli-github&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;71 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;github 的 CLI 版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ProfOak/ascii_py"&gt;ascii_py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;20 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ASCII 艺术创造工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pizza_in" src="https://raw.githubusercontent.com/ProfOak/ascii_py/master/Media/pizza_in.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;变成:&lt;/p&gt;
&lt;p&gt;&lt;img alt="ascii_pizza" src="https://raw.githubusercontent.com/ProfOak/ascii_py/master/Media/ayy_lmao_pizza.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dealertrack/django-rest-framework-braces"&gt;django-rest-framework-braces&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DRF(Django REST 框架) 实用工具集锦&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jwass/geog"&gt;geog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Python 中快速搞掂地理功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davecarpie/scli"&gt;scli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 curses 构建的可选择/滚动的终端列表!&lt;/p&gt;
&lt;p&gt;&lt;img alt="scli" src="https://camo.githubusercontent.com/73a473a0193f8110b1e5fd53a126255c2a984527/687474703a2f2f692e696d6775722e636f6d2f504569335139382e706e67" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/robbiebarrat/Stock_advisor"&gt;Stock_advisor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于
Yahoo_finance api 
获得公司股票基本信息,
然后综合给出购买建议.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA 无责任推荐&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lvsoft/enhanced_logging"&gt;lvsoft/enhanced_logging&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 星, 0 支&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当年就有人黑 print 哪....&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150717 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 联合完成&lt;/li&gt;
&lt;li&gt;150707 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 37</title><link href="http://weekly.pychina.org/importpython/importpython-37.html" rel="alternate"></link><published>2015-06-26T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-06-26:importpython/importpython-37.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/37/"&gt;Import Python Weekly Newsletter - Issue No 37&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pex.readthedocs.org/en/latest/index.html"&gt;Twitter 从 2011 起就用 PEX 方式将整个儿 Python virtualenv 打到一个 zip 中&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pex 包括 Python 的包管理和分发,
原先是 Twitter 内部公用服务,已经开源为独立项目.&lt;/p&gt;
&lt;p&gt;核心组件是和 .pex(Python EXecutable) 相关的 PEX 工具.
提供了类似 virtualenv 的通用虚拟环境.&lt;/p&gt;
&lt;p&gt;Twitter 已规模使用了4年!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;电影: &lt;a href="https://www.youtube.com/watch?v=NmpnGhRwsu0"&gt;WTF is PEX? - YouTube&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,就是利用了 Python 内置的 zip 无缝解压能力,
将一切随时用 PEX 折腾到可命名/可执行/可升级/可部署的 .zip 文档中.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/pmbaumgartner/LOST/blob/master/WE%20HAVE%20TO%20GO%20BACK.ipynb"&gt;LOST 演员基本分析 - IPython Notebook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipynb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不禁在想 LOST 演员们的事业发展,现在如何?!
于是基于 IMDB 数据分析了一下下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/04/integrating-modwsgi-express-as-django.html"&gt;mod_wsgi-express 集成为 Django 管理命令&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mod_wsgi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过这种集成命令,
可以直接查询 Django 的模块配置.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.doughellmann.com/~r/DougHellmann/~3/NTInBNBM7so/virtualenvwrapper-django-0-4-1.html"&gt;virtualenvwrapper.django 0.4.1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;virtualenvwrapper.django 
作为模板插件,配合 virtualenvwrapper
可以高速完成 virtualenv 的环境部署&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2015/06/02/07-load-test.html"&gt;Djangocon: 对 web 应用进行负载测试 - Yulia Zozulya&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实用 Python 来构建负载测试也很容易的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2015/06/ipython-tips-and-tricks.html"&gt;IPython 技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IPython 是种魔性交互界面.
强大到无法想象...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/SaURFg9dISo/"&gt;PyCharm 4.5.3 RC 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天 PyCharm 4.5.3RC发布了漏洞修复更新. 
发行说明中列出了从以前的PyCharm4.5.2更新所有修补程序. &lt;/p&gt;
&lt;p&gt;其中最引人注目的是:对一些Django支持的修复,主要涉及
manage.py 的持续读写.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/jun/25/roadmap/"&gt;Django线路图&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过对3000Django开发者的调查和在Django开发者邮件列表讨论,Django团队公布了特性计划列表(根据需要变化). &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://labstack.com/blog/echo-production-ready/"&gt;Echo, 一个集成路由的微型框架,1.0版本已发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;webframwork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Echo 高兴地宣布 V1.0.0 发布. 自从Echo诞生以来,我们已经经历了多次迭代,接受来自世界各地的人们的反馈,解决了Issue并接收pull-request超过100个. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一个框架轮子
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.disqus.com/post/62187806135/scaling-django-to-8-billion-page-views"&gt;扩展Django - 80亿页面浏览量| Disqus:官方博客&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每月请求已近 80亿, 45K/秒.
我们坚持使用 Django.
当然也学到了更多技巧.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yukuku/telebot"&gt;telebot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;95 Stars, 16 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Telegram机器人,可使用GoogleAppEngine快速安装&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chendaniely/2015-06-22-s2i2-git"&gt;2015-06-22-s2i2-git&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;35 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;s2i2 的 git 教学项目.
Daniel and Tommy 向学生展示 git 的各种奇迹.&lt;/p&gt;
&lt;p&gt;如此酷炫,以至 github 应该付费给我们.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexjc/shadertoy-render"&gt;shadertoy-render&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;27 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 ShaderToy 直接渲染成视频&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/TomAugspurger/engarde"&gt;engarde&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;防守数据分析库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davidcarne/pcbre"&gt;pcbre&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;集成印刷电路板逆向工程工具包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JawhnL5/Toontown-Level-Editor"&gt;Toontown-Level-Editor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Disney 的 Toontown 关卡编辑器,
基于 Panda3D 1.6.2&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/baverman/vial-http"&gt;vial-http&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 vim 准备的 http rest 工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/django-admin-tools/django-admin-tools"&gt;django-admin-tools&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扩展了 Django 的管理器.
追加了 扩展面板以及菜单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/distributed-system-analysis/es-graphite-shim"&gt;es-graphite-shim&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ElasticSearch / Graphite 插件&lt;/p&gt;
&lt;p&gt;能将 Graphite 查询转换为 ElasticSearch 映射&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emehrkay/rgp"&gt;rgp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RGP 在 Redis 基础上提供了简单的向量图数据库.
发布一组 Py 函式为界面.
可以基于顶点和边进行查询.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/plamere/pbl"&gt;pbl&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构建 playlists 的库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EugenePig/ebook-isbn"&gt;ebook-isbn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eBook 工具.
能自动从 ISBN 提取元数据并重命名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sgerhardt/TakeStock"&gt;TakeStock&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目提供股票的邮件报告.
通过抓取 NASDAQ 网站数据,
来获取股票价格等信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/emilyhorsman/codeofconductlink"&gt;codeofconductlink&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对软件社区进行追踪,自动分析出 成员的代码贡献&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼?! 国内的 &lt;a href="http://gurudigger.com/"&gt;gurudigger&lt;/a&gt; 已经折腾了很多年了
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EliotBerriot/django-dynamic-preferences"&gt;django-dynamic-preferences&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 Django 项目进行动态全局/实例配置.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rbalakit/RedditTwitterPoster"&gt;RedditTwitterPoster&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 reddit 订阅并发布为 twitter 嵌入式消息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kungsalman/jwords"&gt;jwords&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小程序,用来辅助单词记忆&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/justincosentino/markiavelli"&gt;markiavelli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Reddit bot that posts to /r/politics using text generated with Markov chains.&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150708 老高/&lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 联合完成&lt;/li&gt;
&lt;li&gt;150704 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 36</title><link href="http://weekly.pychina.org/importpython/importpython-36.html" rel="alternate"></link><published>2015-06-19T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-06-19:importpython/importpython-36.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/36/"&gt;Import Python Weekly Newsletter - Issue No 36&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/blog/post/conversation-liza-avramenko-founder-checkio-empire-code-games-python-programmers"&gt;访谈 Liza Avramenko - Python 程序猿专属游戏 Checkio, 代码帝国.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CheckiO是程序员专属游戏. 可以通过游戏提升代码质量. CheckiO已经开张快两年了,是时候推出一些新玩意儿. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2015/06/16/djangorecipe-gunicorn.html"&gt;Buildout 和 Django: djangorecipe 升级支持 gunicorn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django圈中的大多开发者都使用pip安装各种东东. 但我们公司使用的却是buildout. 快来看看buildout到底是什么东东?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nothingbutsnark.svbtle.com/python-3-support-on-pypi"&gt;PyPI 中的 Python 3 支持情况&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 PyCon2015 中, 很多有关 Python 3 的包管理讨论.
之于作者, 通过 Superpowers 来分析了 Python 3 中项目下载的分布,
对 PyPI 当前的整体兼容情况进行了分析和建议.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯哼,也是一个调整的机会...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-10-brian-granger-and-fernando-perez-of-the-ipython-project-1434193715/"&gt;节目 10 - Brian Granger 和 Fernando Perez 有关 IPython Project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IPython /Jupyter项目的核心开发人员Fernando Perez和Brian Granger的播客&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://podcastinit.podbean.com/e/episode-11-naomi-ceder-lynn-root-and-tracy-osborn-on-diversity-in-the-python-community/"&gt;节目 11 - Naomi Ceder, Lynn Root 和 Tracy Osborn 有关 Python 社区多样化&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python Community,Podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.meetup.com/seattle-python-data-science/events/223183575/"&gt;Matthew Sundquist of Plot.ly on Python / Visualization&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;西雅图Python数据科学专家Bellevue Matthew Sundquist即将为我们带来Python处理可视化的最新动态&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jorisvandenbossche/2015-PyDataParis/"&gt;PyData Paris 2015 上极赞的 "Introduction to Pandas" 演讲  [Notebook + slides]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pydata Paris 2015有关Pandas的介绍,你可以在nbviwer上看到相关的内容. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://people.duke.edu/~ccc14/sta-663/index.html"&gt;用 Python 进行统计计算&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用iPython notebook进行计算统计数据的书. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.airpair.com/python/posts/using-python-and-qgis-for-geospatial-visualization"&gt;案例 - 用 Python 和 QGIS 进行地理空间可视化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本教程将带你感受如何度过数据科学家的一天,获取,过滤,加强并将数据可视化. 我们将使用Python工具中的BeautifulSoup,Pandas和Nominatim库. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://klen.github.io/py-frameworks-bench/"&gt;Python 的 web 框架性能对比&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基准的目的不是测试部署(如uwsgi vs gunicorn等),而是测试框架本身. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;月经贴了...
其实呢,在 Py 世界,只有适合你的,没有最好的,
开始,42分钟里能上手的,就是最好的,
然后,面对长期/高负荷/大用户服务, 用 go 吧...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rkblog.rk.edu.pl/w/p/javascript-based-charts-django-made-easy-chartkick-application/?c=1"&gt;在 Django 中通过 Chartkick 轻松使用 JS 图表&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Chartkick 是种 javascript图表库,让我们看看如何在Django项目中使用它. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/1_Jv7FJTmBE/nicholas-tollervey-and-python-in.html"&gt;Nicholas Tollervey and Python in Education&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;众所周知,过去几年Python在教育事业中大放光彩(见PSF Newsblog). &lt;/p&gt;
&lt;p&gt;ThePython 社区在这方面异常活跃,并将继续保持 Python 在教育界的发展. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PyPyStatusBlog/~3/s7BbsumHImo/pypy-and-ijson-guest-blog-post.html"&gt;PyPy 和 ijson - blog 文集&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ijson issue 中&lt;code&gt;#pypy&lt;/code&gt; 标签的讨论,
由 Dav1dde 友好的进行了整理和发布, 值得追踪.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/121584829593"&gt;Django 故事: Meet Sara Gore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sora是得克萨斯大学奥斯汀分校的一名Python和大型机开发者. 虽然她工作于高等教育管理领域,但是内心认为自己还是一名图书管理员. 你可以找到她在Twitter上@saradgore. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.aeracode.org/2015/6/17/beyond-request-response/"&gt;超越 Request-Response&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 可持续发展关键点之一,就是如何可以更加吻合现代化的开发需要.
虽然极爱 Django ,
但是,如何确保项目的进度以及向后兼容间的微妙平衡,
有时,必须重新审视未来的网络交互演化,
在此尝试进行一些探讨.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/jun/16/django-software-foundation-announces-diversity-sta/"&gt;Django Software Foundation announces Diversity Statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django软件基金会(DSF)已通过社区在尝试建立社区行为准则,
明确多样性是理想的目标,
所以, DSF将资助更多活动从而促进多样性.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/WkykyCGyflY/"&gt;Python 101: 节目 6 – Comprehensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python101视频最新一集发布,本集讲述了对Python的中list,dict,set的构造的理解. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fullstackpython.com/object-relational-mappers-orms.html"&gt;Python object-relational mappers (ORMs)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ORM是一个库,在程序代码中将存储在关系数据库中的数据自动转换为对象对其进行操作. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://revsys.com/blog/2015/jun/17/django-birthday-party/"&gt;Django 生日趴&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如你所知,Django将在今年夏天迎来十岁生日,所以我们将为它举办一个party. 将是一整天的技术盛会和sprints. 敬请期待!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redbeacon.github.io/2014/01/28/Fat-Models-a-Django-Code-Organization-Strategy/"&gt;肥模式 - Django 代码组织战略&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;几乎所有的Django实例代码会引导你创建一个非常烂的代码组织结构. 如果你的项目是长期的,你将会遇到很多坑. 本文将教你跳过此坑. &lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fraser-hemp/gradify"&gt;gradify&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;917 Stars, 33 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CSS 图像渐变占位符&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/motet/baldr"&gt;baldr&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;123 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;完全用python编写的quadrotor无人机飞行模拟器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dellis23/disrupt"&gt;disrupt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;84 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python实现的终端交互工具&lt;/p&gt;
&lt;p&gt;A python "tool" for "interacting" with the terminals of "friends" and "colleagues".&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pytest-dev/pytest"&gt;pytest&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;71 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以轻松地编写小测试同时又支持复杂功能测试的测试工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aparrish/pronouncingpy"&gt;pronouncingpy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CMU发音字典的简单接口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/julesjacobs/levenshtein"&gt;levenshtein&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;17 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;levenshtein 自动简单验证的 python 实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/justanr/Flask-Transfer"&gt;Flask-Transfer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还在自行编写验证和多文件上传?是时候该换换了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dz/slack-notebot"&gt;slack-notebot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slack会议记录机器人&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;好象各种 IM 平台的 bot 都有 py 一份儿实现
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/despawnerer/summarize"&gt;summarize&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Flipboard摘要算法基于python的快速实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hmleal/django-foundation5"&gt;django-foundation5&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用Foundation5表单的Django应用!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/austinjdean/go"&gt;go&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Linux命令行使用谷歌搜索的Python工具&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;名字起的好,项目活的了,
用这种作死的名称,是不想给人用呢?还是不想给人搜呢?!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kpandya91/Fun-Interview-Challenges"&gt;Fun-Interview-Challenges&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些编程挑战赛的答案收集&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150624 老高/&lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 联合完成&lt;/li&gt;
&lt;li&gt;150619 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 35</title><link href="http://weekly.pychina.org/importpython/importpython-35.html" rel="alternate"></link><published>2015-06-12T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-06-12:importpython/importpython-35.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/35/"&gt;Import Python Weekly Newsletter - Issue No 35&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/38osar/flask_or_django_for_restful_api/"&gt;RESTful Api哪家强?Flask还是Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;RESTful Api哪家强?Flask还是Django?Reddit上各路大神讨论中!值得一看!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://reinout.vanrees.org/weblog/2015/06/03/09-restful.html"&gt;Djangocon: What it's really like building RESTful APIs with Django - Paul Hallett&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;REST&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Paul Hallett 认为自己是一名"API狂热分子". 他在开发一个卖衣服的网站,叫做lyst. 他们现有的API都是通过json-rpc的方式实现的, 他们需要一套更适用于http的API. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;又一位 van
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.jetbrains.com/pycharm/2015/05/pycharm-4-5-eap-build-141-988-introducing-python-profiler/"&gt;PyCharm 4.5: 集成Python Profiler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新版PyCharm的主要的特性是对Python Profiler的集成. 你可以很方便的使用一个带颜色的函数调用图形来查看捕获的快照和详细统计信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://late.am/post/2015/05/07/optimize-python-with-closures.html"&gt;通过闭包来优化你的Python代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Magnetic的实时竞价系统,是用纯Python编写的,经常有很大的并发量. 一个普通工作日,我们的应用程序处理高峰时,每秒有300000个请求并需要在10毫秒内完成响应. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/ZBchouAdipQ/mark-hammond-receives-distinguished.html"&gt;Mark Hammond凭获杰出服务奖&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mark Hammond. 在Windows的 CPython 安装程序中包含了对
Mark 2.x 系列版本所付出表示感谢的话语,可见他在微软平台对Python支持的工作中极具影响力,. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydanny.com/why-doesnt-python-have-switch-case.html"&gt;为毛Python中没有Switch/Case?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不像我们之前学过的其他编程语言,Python中并没有switch或case语句. 但为了达到同样的效果,我们使用了字典映射&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.galvanize.com/blog/2015/05/28/classifying-and-visualizing-musical-pitch-with-k-means-clustering/"&gt;用k-means实现分类和聚类的可视化&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;K-means算法是硬聚类算法,是典型的基于原型的目标函数聚类方法的代表,它是数据点到原型的某种距离作为优化的目标函数,利用函数求极值的方法得到迭代运算的调整规则. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/06/implementing-request-monitoring-within.html"&gt;使用WSGI服务器实现对请求的监控&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;wsgi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上一篇博文我演示了如何使用WSGI中间件来监控web请求,并对数据进行排列分析最终实现可视化. 然而更好的方法是WSGI服务器自身实现监控. 这是因为放在WSGI服务器实现中,可以避免需要设置WSGI中间件以及WSGI中间件所需的函数包装器的开销. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/8MNS9eXLEyk/"&gt;PyDev of the Week: Stephan Deibel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎本周的PyDev of the Week的嘉宾,Stephan Deibel. 他是著名Python IDE,wing的制造商,Wingware的联合创始人之一. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://impythonist.in/create-hacker-dashboards-with-python-and-pygal-with-lesser-effort/"&gt;使用Python和Pygal制作酷炫的图表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pygal
是类似
D3.js 的 SVG 动态图表库. 虽然它不如 D3.js 强大,
但是它能为炫酷的图表提供强大的API. 我们将介绍如何使用Pygal库创建炫酷的图表. 由于示例是使用flask进行演示,所以你需要具备一些flask的相关知识.&lt;/p&gt;
&lt;h3 id="_2"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;br /&gt;
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; &lt;br /&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZoomQuiet/zoomquiet/wiki/Hr4Wegenart"&gt;为艺(Wegenart)教育科技 急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自帝都 音乐教育领域 O2O 创业团队,颜值最高的创业团队;
急招 &lt;strong&gt;前端&lt;/strong&gt; 和 &lt;strong&gt;Python后端工程师&lt;/strong&gt; 若干名, 年薪280K 起,还有期权!&lt;/p&gt;
&lt;p&gt;有意者及时邮件 &lt;code&gt;zoomquiet+hr[AT]gmail.com&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pfnet/chainer"&gt;chainer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;259 Stars, 25 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;灵活的神经网络框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aledista/drf-chaos"&gt;drf-chaos&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;39 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用于测试Django Rest框架API的装饰器工具集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cielpy/WWDCVideosDownloadURLCrawler"&gt;WWDCVideosDownloadURLCrawler&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WWDC 2015视频下载工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ssut/py-googletrans"&gt;py-googletrans&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Google翻译非官方Python接口,免费!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hepwori/congratsbot"&gt;congratsbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twitter机器人,能自动点赞/回复&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jamesmawm/Mastering-Python-for-Finance-source-codes"&gt;Mastering-Python-for-Finance-source-codes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;&lt;Mastering Python for Finance&gt;&amp;gt;一书源代码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/parkouss/rcontrol"&gt;rcontrol&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过ssh实现远端任务异步执行的Python API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Mnw2212/gity"&gt;gity&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python的Git模块,内含各种魔法!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/orcasgit/django-password-validation"&gt;django-password-validation&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对Django 1.9的密码认证系统进行移植,已经支持早期的Django版本　&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fabiocaccamo/django-maintenance-mode"&gt;django-maintenance-mode&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;django-amintenance-mode展示了在使用维护模式(maintenance-mode)时候发生错误而显示的503页面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wakatime/wakadump"&gt;wakadump&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将WakaTime数据导出文件转换为任意格式的命令行工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/evildmp/DjangoConEuropeTranscripts"&gt;DjangoConEuropeTranscripts&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DjnagoCon Europe 2015内容整合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/brouberol/mojo"&gt;mojo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当Mozilla网站招聘职位有更新的时候,你将收到相关的邮件通知&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yasikstudio/devrank"&gt;devrank&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Github上开发者的分级工具 基于 PageRank 设计&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/miusuncle/HiveOpener"&gt;HiveOpener&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速打开文件或文件夹的Sublime Text3插件&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;必须用!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/konglingkai/django-restapi"&gt;django-restapi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用django构建RESTFul API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Flynn58/XKCD-Archiver"&gt;XKCD-Archiver&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据页码自动截取xkcd.com上的漫画&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;必用! 特别是在中国,
想在本地静静享受 xkcd 的各种头脑按摩?
镜像之!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150617 老高/&lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 完成&lt;/li&gt;
&lt;li&gt;150612 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 34</title><link href="http://weekly.pychina.org/importpython/importpython-34.html" rel="alternate"></link><published>2015-05-30T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-05-30:importpython/importpython-34.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/34/"&gt;Import Python Weekly Newsletter - Issue No 34&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/alternative-redis-like-databases-with-python/"&gt;Python 实现的 Redis样数据库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rlite 之于 Redis ,就象 SQLite 和 Postgresql.
意味着, 可以提供一个 Redis 功能相同的无服务器数据库,
轻易嵌入到你的应用中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/37f0s9/djangui_a_djangopowered_ui_for_python_scripts/"&gt;Djangui&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为你的应用, 提供 Django 支持的界面.
很漂亮,细节链接内部.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.endgame.com/blog/open-sourcing-your-own-python-library-101"&gt;如何正确的开源自制 Python 库&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对创建一个靠谱的 Python 开源项目,
给出了完备的建议,包含版权控制/代码包装/安装分发....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lincolnloop.com/blog/fast-immutable-python-deployments/"&gt;加速不可变的 Python 部署过程 | Lincoln Loop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pip&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 wheels 在我们服务上没有提供软件附加层的事儿,
我们非常兴奋!
因为这意味着, 在 Python 大型系统部署方面,
依然有创新空间!
我们期待着下一步的改进!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://adamj.eu/tech/2015/05/17/building-a-better-databasecache-for-django-on-mysql/"&gt;为 Django 给 MySQL 构建更好的数据库缓存&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 MySQL 完成缓存,细节链接中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2015/05/pycon-jp-2015-call-for-proposals.html"&gt;PyCon JP 2015 议题征集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;投稿截止为 7月15,
细节官网中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.caktusgroup.com/blog/2015/05/26/pypyjs-what-how-why-ryan-kelly/"&gt;PyPy.js: 是什么为什么以及如何 by Ryan Kelly (PyCon 2015 必看演讲: 5/6)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;javascript&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在研究了 Ryan Kelly 的演讲后,
确认实际可行!
直接在浏览器中运行 Python
(不是通常的以 Python 语法编写,然后转化为 js 来运行).&lt;/p&gt;
&lt;p&gt;PyPy.js 结合了两项目技术:
PyPy(用 Python 实际的 Python 解释器!),
以及 Emscripten
(LLVM 到 JavaScript 的转换器,通常用以开发浏览器中运行的游戏),
从而在浏览器中运行  PyPy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lucumr.pocoo.org/2015/5/27/rust-for-pythonistas"&gt;给 Python 程序猿的 Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当前 Rust 已经 1.0 相当稳定,
是时候向 Python 程序猿介绍 Rust 了,
本教程越过语言基础,
直接对比常见结构的不同,以及表现.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.avilpage.com/2015/05/automatically-pep8-your-python-code.html"&gt;PEP8 交给机械来照顾,人关注更高层次的吧!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PEP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对懒惰的人而言,更希望有人来自动格式化代码.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;细思恐极的是, golang 天然内置了 gofm 工具,
这就是老鸟更加洞察人心的证据嘛!?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/05/performance-monitoring-of-real-wsgi.html"&gt;对 WSGI 应用的实际流量进行监察.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;wsgi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论在生产/测试或是QA环境中,
我们都需要收集的所有 WSGI 流量导出,以便进行分析以及可视化展示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/flask/comments/3733x2/flask_web_application_development_introduction/"&gt;面向初学者的 Flask web 应用开发&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教程目标是一个简单的 TODO 系统,
基于 Flask/SQLalchemy/PostgreSQL 9.3 以及 Vertabelo,
并最终部署到 Heroku.
当然,代码无法用作生产系统,
只是用来展示 Python 开发 web 应用的思路.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Patrycja Dybka" src="http://www.vertabelo.com/_file/blog/authors/patrycja_dybka.png" /&gt;&lt;/p&gt;
&lt;p&gt;又一位MM 程序媛写的教程!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://owaislone.org/blog/modern-frontends-with-django/"&gt;为 Django 前端现代化贡献我们的力量吧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 已经足够伟大了,
但是,其前端工具链依然非常原始.
有理由怀疑,类似 GWT 是可行的...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.airpair.com/python/posts/optimizing-python-code"&gt;优化 Python 案例研究&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想撰写运行快的 Python ,
首先瞧不起知道是程序什么上花费了时间,
什么操作将拖慢你的系统?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rkblog.rk.edu.pl/w/p/squashing-and-optimizing-migrations-django/"&gt;Django 中的精简和优化迁移&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着 Django 7.1 的发布,
我们面临一组必须构建的迁移和优化工具,
必须更快的测试数据库,完成旧代码/历史的迁移和精简.
当前还比较粗糙,但是配合手工作业,
已经可以获得一个最精简的迁移,细节链接中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://elweb.co/33-projects-that-make-developing-django-apps-awesome/"&gt;能令 Django 应用卓越的 33 个项目 | elweb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个不完备的列表,
收集了口碑上佳以及亲自测试过的项目.
能切实帮助我们完成卓越的应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.podcastinit.com/"&gt;Ned Batchelder 访谈&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Podcast from 
来自 podcastinit 的播客节目&lt;/p&gt;
&lt;h2 id="new-books"&gt;New Books&lt;/h2&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Max00355/HTTPLang"&gt;HTTPLang&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;233 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTP 请求的脚本化&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;非常象 Gopher 大会上批露的,老许用 go 实现的 http 测试 DSL.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;set URL http://google.com&lt;/span&gt;
&lt;span class="x"&gt;loop 5&lt;/span&gt;
&lt;span class="x"&gt;do GET /&lt;/span&gt;
&lt;span class="x"&gt;show &lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;STATUS&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;endloop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mieubrisse/kindle-highlight-scraper"&gt;kindle-highlight-scraper&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;43 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Kindle 中高亮以及笔记的下载脚本,
json 格式的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/zzggbb/colorblocks"&gt;colorblocks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;25 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成颜色/尺寸的随机块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/linvex/DiscoverHiddenSSID"&gt;DiscoverHiddenSSID&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 13 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;发现隐藏 wifi 热点 SSID &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sakura26/killallbtn"&gt;killallbtn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个实体的解决反查水表的瞬间清除所有主机/服务/数据的
超级作品!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="大红钮" src="https://raw.githubusercontent.com/sakura26/killallbtn/master/pics/button_sample.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aschn/drf-tracking"&gt;drf-tracking&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;追踪 Django Rest Framework API 请求的工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/saimadhu-polamuri/CollaborativeFiltering"&gt;CollaborativeFiltering&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Collabrative Filtering 方法
实现的推荐引擎.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/liberapay/liberapay.com"&gt;liberapay.com&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通用捐助平台&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/xnx/penrose"&gt;penrose&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Penrose 贴画的 python 生成包.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;br /&gt;
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; &lt;br /&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150601 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 完成&lt;/li&gt;
&lt;li&gt;150530 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 33</title><link href="http://weekly.pychina.org/importpython/importpython-33.html" rel="alternate"></link><published>2015-05-22T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-05-22:importpython/importpython-33.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/33/"&gt;Import Python Weekly Newsletter - Issue No 33&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.jetbrains.com/pycharm/whatsnew/?rss"&gt;PyCharm 4.5: 集中提供所有 Py 工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCharm 4.5 包含更多生产力工具,
特别是和 Django 一起工作时...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ilian.io/pycon-sweden-2015/"&gt;PyCon Sweden 2015&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 PyCon 瑞典的感受? 就一个字: &lt;code&gt;真棒&lt;/code&gt; !
这是笔者首次参加的 PyCon,
真心希望还有下一次,
能和各种伟大的人物在一些讨论把村/宇宙和一切,感觉不能更加好了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/blog/python/fun-with-djangos-new-postgres-features/"&gt;Django 最新 Postgres 功能之趣 - Real Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文介绍了 Django 1.8 针对 Postgres 发布的最新功能:
ModelFields,
包含 ArrayField, HStoreField, 以及 Range Fields 特性.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/celery-and-the-flask-application-factory-pattern"&gt;Celery 和 Flask 应用的工厂模式&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总是有读者询问如何在 Flask 应用中,
利用工厂模式,包含进来更多的特性.&lt;/p&gt;
&lt;p&gt;Celery 一向很难被包含到现行框架中,
因为有个延迟访问的问题,
直到 工厂模式 的引入.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/may/18/interested-organizing-djangocon-europe-2016/"&gt;有兴趣来组织 DjangoCon 欧洲 2016?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DjangoCon Europe 2015 
再几周就要举行了,
但是,我们已经开始筹备明年的了!
每次筹委会都是志愿者组成的,所以,你也有机会!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://plot.ly/ipython-notebooks/survival-analysis-r-vs-python/"&gt;有关 IPython 的生存分析 : R vs. Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在此 notebook 中, 
尝试对比 R 和 Python,
作为开发语言,以及图形化平台等等方面,进行了深入分析.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.talkpythontome.com/episodes/show/8/teaching-python-at-grok-learning-and-classrooms"&gt;有关利用 Grok Learning 进行 Py 教学的广播&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;澳大利亚 已经要求高中学生必须掌握一种编程语言了?!&lt;/p&gt;
&lt;p&gt;Dr. James Curran 正在构建一个 Grok Learning 平台,
以及辅助教程,让学生们轻松的完成学习.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/opbeat/status/598174804349308928/photo/1"&gt;Opbeat 谈论 Lincoln Loop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 Pycon 蒙特利尔的视频.&lt;/p&gt;
&lt;p&gt;Peter Baumgartner (@ipmb) Lincoln Loop 创始人,
谈论堆桟技术,
以及3 种优化 Django 应用的技巧.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.wearewizards.io/comparing-the-weather-of-places-ive-lived-in"&gt;用 pandas/notebook 来分析俺住过的地方气候&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺住过3大洲4个国家,
每当人们问及时,能想起来的总是天气,
那么如何简洁的对比这些地方的气候呢?&lt;/p&gt;
&lt;p&gt;嗯啍!? 还有什么比在 notebook 上 用 pandas 快速可视化表述更加方便的呢?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2015/on-parsing-c-type-declarations-and-fake-headers/"&gt;解析 C, 类型声明以及 fake headers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pycparser 过去几年间已经流行起来了(特别是配合 cffi 使用).
就也意味着作者越来越多的收集各种邮件发送过来的提问.&lt;/p&gt;
&lt;p&gt;所以,这里提供了一篇最全面的 FAQ 集锦,你值得拥有!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/579056-run-os-command-with-timeout-on-a-list-of-files-usi/"&gt;用线程(Py的)列表文件来处理 OS 命令的超时&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过两个并行的线程文件,
当其中一个超时时,程序进入下一个,
并能编辑/追加异常处置.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lwn.net/SubscriberLink/643786/9c0bd83dff0df3b8/"&gt;Python coroutines 和异步以及等待&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 已经能创建 coroutines 来异步处理.
只是还没有提升到语言层面,
只是个类型生成器.&lt;/p&gt;
&lt;p&gt;现在提议追加两个关键词: async 以及 await,
彻底解决这事儿!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
细思恐极的是, Guido 老爹一直也是 golang-style 哪,
内置库可以自在点,但是,关键字,那是真心越少越好.
所以,....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/KRxZ8XxqVgM/"&gt;当周 PyDev: Vasudev Ram&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Vasudev Ram (@vasudevram) 作为当周 PyDev 之星,
一直在 blog 中坚把分享各种技术内容,
也是 xtopdf 的创始人.&lt;/p&gt;
&lt;h2 id="new-books"&gt;New Books&lt;/h2&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karan/slack-overflow"&gt;slack-overflow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;342 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;程序猿最好的朋友!?现在是 Slack.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joshenders/dnsdiff"&gt;dnsdiff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;199 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 DNS 进行 diff.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aldanor/pynab"&gt;pynab&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;32 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 YNAB 数据进行访问的简约 Py 库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DeliangFan/wepy"&gt;wepy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;天气查询客户端, CLI 的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/walkr/hn"&gt;hn&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在命令行中阅读 HN &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Jianqiang/embedding-matching-word-segmenter"&gt;embedding-matching-word-segmenter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自讨文 ACL-2015 的代码: "Accurate Linear-Time Chinese Word Segmentation via Embedding Matching"&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jgamblin/badactors"&gt;badactors&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建立公共 IP 黑名单&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mdshw5/simplesam"&gt;simplesam&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单的纯 SAM 解析器,以及记录对象&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pindexis/marker"&gt;marker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;终端里的书签&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/walkr/oi"&gt;oi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有 CLI 界面的,可长期运行的应用进程编辑框架&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个可以!
)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;br /&gt;
急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; &lt;br /&gt;
急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150525 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 完成&lt;/li&gt;
&lt;li&gt;150522 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 32</title><link href="http://weekly.pychina.org/importpython/importpython-32.html" rel="alternate"></link><published>2015-05-15T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-05-15:importpython/importpython-32.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/32/"&gt;Import Python Weekly Newsletter - Issue No 32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.jupyter.org/2015/05/07/rendering-notebooks-on-github/"&gt;今天 IPython notebooks 正式成为 GitHub 支持格式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方 blog 非常高兴的宣布,
在 github 所有仓库中的 Jupyter/IPython notebook (.pynb) 文档,
将直接得到渲染!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="150522-pynb-github" src="http://zoomq.qiniudn.com/ZQCollection/snap/150522-pynb-github.png" /&gt;&lt;/p&gt;
&lt;p&gt;真的!!!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.stuartowen.com/pipelining-a-successful-data-processing-model"&gt;Pipelining - 一种成功的数据处理模式 (python案例)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓 "流水线" 就是将大任务分解为更小的一系列任务,
以便并行计算,
这在 CPU 设计领域一直在蓬勃发展,
但是,对于一般计算范畴还没通用解决方案.
笔者分享了一般化的考虑.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/fAiN-iEsGBA"&gt;实现 Python 的修饰符&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;video&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;看看用函式化编程概念,如何在 Py 中完成修饰符功能.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/pub/e/3422"&gt;Webcast: 教孩子编程 之 Python 中的小乌龟&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这一网络广播中,
教你如何引导学前儿童,
用可视化交互式式环境来学习编程思想.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marinamele.com/taskbuster-django-tutorial"&gt;Django 1.8 和 Python 3: 端到端的复杂应用教程 | Hacker News&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常激动的分享大家最新的 Django 教程,
可以带领大家用 Django 1.8 在 Python 3 下面,
从头建立一个应用,
特别关注管理器的使用.
目标是每个人跟教程走下来同时也建立好了自个儿的应用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bugra.github.io/work/notes/2015-05-09/learning-lua-as-a-python-developer/"&gt;以 Python 程序猿角度来学习 Lua&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此 Lua 教程是面向 Pythonista 的,
针对各种 Lua 的特性和概念,对比 Python 中的,
以便快速建立基本概念,复用经验.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.peterbe.com/plog/closure-django-context-processors"&gt;关闭你的 Django 上下文处理器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你有复杂的网站模板要渲染时,
可能有很多自动处理的计算,
这意味着很多额外的计算,而且计算结果永远不会显示出来.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/35iamd/what_is_the_appeal_of_dynamicallytyped_languages/"&gt;动态类型语言的吸引力是什么?!(以 Python 为例)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态类型研究好在哪儿? 有人能说明白卟!?&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;至今也只有4个回复的好问题...&lt;/p&gt;
&lt;p&gt;目测好象八成,真的没有什么明显的好处...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/FTlNOgFndNo/python-2710-release-candidate-1.html"&gt;Python 2.7.10 候选版 1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python, new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯啍,欢迎下载测试&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.idiotinside.com/2015/05/10/python-auto-generate-requirements-txt/"&gt;为你的工程自动生成 requirements.txt&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;任何应用都依赖一组特定的组件才能运行.
requirements.txt 就是声明这组依赖关系的文件,
并能为 pip 理解,自动完成部署.&lt;/p&gt;
&lt;p&gt;可惜....多数情况下只能由人工编写.很不靠谱.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
必须用!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wrongsideofmemphis.wordpress.com/2015/05/08/optimise-python-with-closures/"&gt;用 闭包 优化 Python &lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dan Crosta 的分享非常有趣.
讨论了到底有多少次 Python 内部调用是不必要的,
以及如何用闭包来替代 OOP ,从而优化性能.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/WrU_HqoQEl0/"&gt;libbson 和 libmongoc 1.1.5 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;libbson是用于创建/分析和操作BSON文档的C库.
libmongoc是MongoDB的C驱动库.
用以构建与MongoDB沟通的C语言高性能应用程序.
同时也可以为其它高级语言使用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dogdogfish.com/2015/05/11/finding-topics-in-harry-potter-using-k-means-clustering/"&gt;用 K-Means 聚类算法来分析 Harry Potter 的内容主题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll open up with the money-shot – these are all of the clusters that I was able to find using the whole Harry Potter and grouping by chapter. Find the repository associated with this article in our projects list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/oreilly/radar/atom/~3/bZH8jjcd51A/topic-modeling-for-the-newbie.html"&gt;主题建模的新手&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一更加复杂的用户兴趣分析方法,
即所谓 Latent Dirichlet Analysis (LDA) 技术,
通过对一组文本的分析,得到其背后的共同主题利益.&lt;/p&gt;
&lt;h2 id="new-books"&gt;New Books&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hellowebapp.com/"&gt;Hello Web App&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Tracy Osborn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Hello Web App"
是为非程序猿设计,
会引导你完成构建 web 应用的所有过程,
不是通过特定的教程,
而是一个实际的通用实例,
由读者亲手在 Django 基础上创建自己兴趣的网站.&lt;/p&gt;
&lt;p&gt;嗯啍,请关注 &lt;/p&gt;
&lt;p&gt;http://importpython.com/blog/&lt;/p&gt;
&lt;p&gt;有作者的访谈.&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DrkSephy/django-hackathon-starter"&gt;django-hackathon-starter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;75 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个 Django 应用样板&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/trustedsec/ptf"&gt;ptf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;28 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;渗透测试框架(PTF ~ Penetration Testers Framework)
是先进的模块化测试工具.&lt;/p&gt;
&lt;p&gt;PTF 为你的测试自动安装/编译/构建所有测试,
能安装/更新到你的所有主机上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Kali89/HarryPotterClusters"&gt;HarryPotterClusters&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你应该想要的 哈利·波特集群!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jgamblin/isthisipbad"&gt;isthisipbad&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 脚本来检查 IP 地址污染问题,
基于一组流行的 IP/DNS 黑名单.
是 IP 坏了,还是其它什么问题?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/censusreporter/notebooks"&gt;notebooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收集的 Jupyter notebooks ,
有关人口普查问题的探查.
引用的是 Census 报告数据.
详细链接中有述.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/readbeyond/aeneas"&gt;aeneas&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;aeneas 收集了一组工具,
来对音频和文本进行同步.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eyadsibai/brute_force_plotter"&gt;brute_force_plotter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用傻瓜化方式快速建立数据可视化.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/saru95/gitini"&gt;gitini&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;遗失的 git 仓库初始化工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mewfree/youtube-dl-subscriptions"&gt;youtube-dl-subscriptions&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从你的 youtube 订阅下载所有最新视频&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;放心,从国内不可用.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jeffsp/ratex"&gt;ratex&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以 Flask 中间件实现的一个 web 应用,
能导入一次旅行的路线数据,
自动绘到地图上.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ashkonf/PageRank"&gt;PageRank&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 实现的 Google's 著名算法 PageRank .&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯啍?! 人家本来就是 Python 实现的哪,,,
是也乎,再制版, 原版是不给看的了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; &lt;br /&gt;
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;br /&gt;
四月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/SeaSunZh"&gt;SeaSun 珠海急招&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四月急招 10+名 有服务端开发经验的 &lt;strong&gt;工程师&lt;/strong&gt; 待遇上不封顶!&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150523 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 联合完成&lt;/li&gt;
&lt;li&gt;150515 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 31</title><link href="http://weekly.pychina.org/importpython/importpython-31.html" rel="alternate"></link><published>2015-05-07T22:22:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-05-07:importpython/importpython-31.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/31/"&gt;Import Python Weekly Newsletter - Issue No 31&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.calazan.com/using-docker-and-docker-compose-for-local-django-development-replacing-virtualenv/#.VULF_bAmduE.reddit"&gt;使用 Docker 和 Docker Compose 来替代 virtualenv 搭建本地 Django 开发环境&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 和 Flask 是众所周知的两个 Python Web框架. 
有很多项目使 Flask 对简单的 JSON 响应提高2倍,比如techempower. 
在了解过这些项目后, 真心觉得Django可以做的更好!&lt;/p&gt;
&lt;p&gt;所以, 不会讲 Docker 官网已有的各种原理知识. 
只是展示, 我是如何建立为 YouTube 音频下载的 Django 应用建立专发环境的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://revsys.com/blog/2015/may/06/django-performance-simple-things/"&gt;提升Django性能四件事儿&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;给出让你网站性能轻松提高的四件事儿. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://scrolltest.com/selenium-testcase-with-nose-in-python/"&gt;使用 Python 的 Nose 编写 Selenium 测试用例&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nose让Python测试变得更美好. 
基本上它扩展了Unittest和提供的特性,如只运行失败的测试,跳过测试用例,运行测试基于优先级,正则表达式模式等,
现在将 Selenium 结合进来, 令测试人员的生活更美好.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://in.pycon.org/cfp/pycon-india-2015/proposals/"&gt;PyCon India 2015将在十月二三四号举办!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon India,Python开发者社区为印度Pythonista举办的开发者盛会,会有大批Python大神前来.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://in.explara.com/e/pycon-india-2015"&gt;PyCon India 2015公开注册&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;票已开始预售,不要错过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fwierzbicki.blogspot.com/2015/05/jython-270-final-released.html"&gt;Jython 2.7.0最终版发布!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;jython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代表Jython开发团队,我很高兴地宣布,
Jython 2.7.0可用的最终版本在经历了一个漫长的道路后终于发布了!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;JAVA 不死,他只是慢慢....
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2015/05/update-on-psf-elections-new-election.html"&gt;更新的PSF选举 ~ 新的选举开始&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于目前的 Python软件基金会 董事会选存在一些程序上的问题,
基金会已经采取了一些措施,以确保选举是自由开放的提名,没有利益冲突的. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wingware.blogspot.com/2015/05/wing-ide-514-released.html"&gt;Wing IDE 5.1.4发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wingware 发布了 5.1.4 版本的 Wing IDE,
作为面向 Python 跨平台集成开发环境. 
Wing IDE集成了专业代码编辑器vi,emacs,visual studio 的快捷键,
以及 自动补全,信息提示,上下文联想,跳转源码,重构,强大的调试器,版本控制,单元测试,搜索,项目管理,以及许多其他功能. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mail.python.org/pipermail/python-dev/2015-May/139844.html"&gt;Accepting PEP 492 (async/await)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PEP&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢尤里一直以来的努力认真,
正是他坚持作正确的事,我们才可以投入到澄清术语和解释协同程序中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://awesome-django.com/"&gt;Awesome Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;优秀的Django项目资源列表,灵感来源于awesome-python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/351e8b/pypyjs_a_fast_compliant_python_implementation_for/"&gt;PyPy.js: 快速的,兼容Python的Web实现&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;构建快速并兼容 Python 的Web环境. 
使用 PyPy 解释器,通过 emscripten 编译,在运行时由
JIT
发出
asm.js 代码. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/355tph/5_reasons_why_python_is_powerful_enough_for_google/"&gt;Google选择Python的五个理由&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;准备创业的你. 应该选择什么语言?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.brainattica.com/rsa-with-cryptography-python-library/"&gt;Python &amp;amp; RSA 算法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;crypto&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python由很多的库提供加密服务,比如 M2Crypto, PyCrypto, pyOpenSSL, python-nss和 Botan的Python bindings. 如果你试图选择其中之一有五个标准可以评估:是否c实现,可维护性,对Python的支持,可读性和完整性. 是所有失败的"审查"的范畴. 例如PyCrypto(Python最常用加密库)在PyPy上失效. &lt;/p&gt;
&lt;h1 id="new-books"&gt;New Books&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hellowebapp.com/"&gt;Hello Web App&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Tracy Osborn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hello Web 应用程序是由一个设计师为非程序员编写的,
从启动web 应用,到真正获得用户.
每一步都有完备的指导.&lt;/p&gt;
&lt;p&gt;本书并没有使用特定的教程,
而是通过的示例来指引你通过 Python 和 Django
实现你感兴趣的东西. &lt;/p&gt;
&lt;p&gt;参考作者的采访: http://importpython.com/blog/&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tracy Osborn" src="http://static1.squarespace.com/static/547d23c6e4b0faf2ab43e004/t/54fe17f3e4b017e64ba523f3/1425938420339/?format=300w" /&gt;&lt;/p&gt;
&lt;p&gt;美女写的技术图书...&lt;/p&gt;
&lt;p&gt;当年可爱的 Python 范儿.
)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/x43x61x69/Easy-Card"&gt;Easy-Card&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;68 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在台湾大规模使用的智能卡系统, 主要用于交通. 然而和日本的PASMO卡,韩国的T-Money不同,它是通过NFC来锁定读取数据的. 换而言之,当你没空去地铁站的时候你将没法通过app等查询你卡内的余额,这是一个多么蛋疼的问题. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;悠遊卡餘額明細查詢&lt;/code&gt; ~ 嗯啍?! 台湾弟兄的作品...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rohanpai/Robinhood"&gt;Robinhood&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;37 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过Robinhood接口进行交易的Python框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/HaifeiLi/HardenFlash"&gt;HardenFlash&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修复Flash exploits和zero-days的补丁&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/decause/wordcloudbot"&gt;wordcloudbot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一种 systemd 服务,
监听 fedmsg 的 IRC 会议记录,
生成单词云, 并自动发推到 http://twitter.com/fedobot&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dcloud/marvelous"&gt;marvelous&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;绑定Marvel Comics的API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tobgu/pyrthon"&gt;pyrthon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代替Pyrsistent的工具库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marcus-oscarsson/pyqtconsole"&gt;pyqtconsole&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;QT 实现的轻量级 Python 控制台. 
通过一些例子说明如何可以轻松的将其嵌入在其他的Qt应用程序中. 
解释器可以运行在一个单独的线程,在 UI 主线程或在 Gevent 任务. 
未来也可能增加对 asyncio 的支持. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
Qt ...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mfrance0916/python"&gt;python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;个人写的生物信息学脚本&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
项目名称选择这种和语言一样的,只能说
...作的一手好死&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/saru95/GRE.py"&gt;GRE.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mac上的GRE单词学习小软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jhermann/pygments-markdown-lexer"&gt;pygments-markdown-lexer&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pygments 对 Markdown 代码进行高亮的词法解释器.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davidmogar/normalizr"&gt;normalizr&lt;/a&gt;
     1 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python对文本进行规范化的库.现有删除多余的空格,删除连字符,删除标点符号,(来自13个不同的语言)删除停用词,删除符号功能. 下一步准备实现消除口音的功能. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Qingluan/phrack_reader"&gt;phrack_reader&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方便大神们阅读phrack ezine的东东,欢迎提bug&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_3"&gt;工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; &lt;br /&gt;
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;br /&gt;
四月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/SeaSunZh"&gt;SeaSun 珠海急招&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四月急招 10+名 有服务端开发经验的 &lt;strong&gt;工程师&lt;/strong&gt; 待遇上不封顶!&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150512 spawnris/&lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 联合完成&lt;/li&gt;
&lt;li&gt;150507 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 30</title><link href="http://weekly.pychina.org/importpython/importpython-30.html" rel="alternate"></link><published>2015-05-04T18:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-05-04:importpython/importpython-30.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/30/"&gt;Import Python Weekly Newsletter - Issue No 30&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://anna-oz.tumblr.com/post/117173382150/dear-python-a-love-letter-to-python-and-the"&gt;亲爱的Python:致Python和Python社区的一封信&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;老爹推荐,你值得拥有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/blog/python/testing-in-django-part-1-best-practices-and-examples/"&gt;Django测试的最佳方式和案例 - Part 1&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;测试可以帮助你构建优秀的代码,发现错误,在documentation.In这篇文章中,在看案例之前我们将首先看一个简单的介绍,其中包括最佳实践. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.talkpythontome.com/episodes/show/5/sqlalchemy-and-data-access-in-python"&gt;本日播客: 和Mike Bayer一起通过Python使用SQLAlchemy访问数据&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sql, podcast  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本期播客我们将和Mike Bayer对话.Mike在2005年创建了SQLAlchemy,并在过去的10年里不断完善了这个令人赞叹的RDBMS ORM和数据访问层. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/117515207353"&gt;你的Django故事: 与Lieke Boon相遇&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, interview  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lieke是European Codeweek的荷兰大使,同时也是阿姆斯特丹Rails Girls和PyLadies活动的组织者.她是一名历史学家,开发者. 现在工作于VHTO,一个荷兰的女性科学技术专家组织. 你可以在荷兰的阿姆斯特丹找到她:)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydanny.com/two-scoops-of-django-1-8.html"&gt;Two Scoops of Django 1.8 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django   &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与Audrey Roy Greenfeld共同撰写,1.8版的&amp;lt;&amp;lt; Two Scoops of Django&amp;gt;&amp;gt;
内容上全部是能帮助Django的项目更好的知识. 我们引进各种提示,技巧,模式,代码片段,而且我们已经拿起多年来的技术. 而我们不知道或不能肯定的将通过世界上最优秀的专家获取他们的答案. 然后,我们将结果打包成了一本500多页的书. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/url/norvig.com/ipython/Cheryl.ipynb"&gt;用Python解决"Cheryl's Birthday"难题&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cheryl的拼图设计用铅笔解决了,这在数学史上解决最大问题的工具(虽然有些人喜欢笔,粉笔,标记,或贴在沙子上画). 但我将展示如何用另一个工具解决它:Python代码. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kieczkowska.tumblr.com/post/117227214396/asking-twitter-what-skills-are-required-from-a"&gt;从事Python工作的初级开发者必备技能是什么?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前段时间,我在PyCon2015遇到一些在网络中成长优秀的年轻人提出了这个问题,我在推特上挂出这个问题,以揭开发展成初级Python开发者的神秘面纱. 那么,到底什么是预期?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/apr/28/django-18-release-shirt/"&gt;Django 1.8 T-shirt来了&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django   &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有利润将归Django软件基金会所有,用于DjangoCon的路费和类似Django Girls集会的活动支出. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pythonspot.com/create-a-chrome-plugin-with-python/"&gt;用Python编写Google Chrome插件&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;谷歌浏览器插件是用HTML,JavaScript和CSS编写的. 如果你以前从来没有尝试过,我建议通过阅读本教程来写了一个Chrome插件. 在本教程中我们将告诉你如何用Python代替JavaScript来开发一个插件. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;别上当,就是用 iframe 嵌入一个 web 环境而已...
和 Chrome 本身是隔离的&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lwn.net/SubscriberLink/641244/5d1d6d20aeb0a647/"&gt;Python without an operating system&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Josh Triplett开始谈移植Python运行在一个没有操作系统的环境下的"笑点"是在PyCon 2015:他和他英特尔的同事们得到了GRUB引导加载程序的解释器来运行BIOS或EFI系统. 他有很多有趣的事情和一些有启发性的演示来展示. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.checkio.org/blog/python-android-getting-started/"&gt;Python for Android: 入门&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;android  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这篇文章的目的不只是要表明Python可以编写Android应用程序,而是要表明已经有稳定,流行的工具来使用你喜欢的Python来编写Android游戏和应用程序. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;除国产的 QPython 外都是作游戏的...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sowingseasons.com/blog/introduction-to-whoosh.html"&gt;开始使用Whoosh吧,一个纯Python的搜索引擎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whoosh是一种纯Python编写的可嵌入搜索引擎. 它拥有很多价值其大小的高级特性(分类,高亮,压缩等)并执行能够添加简单的高级搜索功能在较小的项目上. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这个可以有!
只是和 ES 相比有什么优势!?
以往 纯Py 的SE 有很多,但是,没有一个流行起来,为毛?!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lijiejie/GitHack"&gt;GitHack&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;55 Stars, 31 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GitHack 利用 &lt;code&gt;.git&lt;/code&gt; 文件夹的已知漏洞,
通过 &lt;code&gt;.git&lt;/code&gt; 重新构建源码树,
保持目录结构不变. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tweekmonster/moult"&gt;moult&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Moult是个实用工具,可以帮助你找到那些不再使用的包. 它的建立是为了帮助我清理项目的requirements.txt文件在项目大的修改之后. 但并非完美,但却比使用pip freeze进行打印快的多&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ybrs/pydisque"&gt;pydisque&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DISQUE 客户端,一个内存,分布式作业队列. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ryansb/disq"&gt;disq&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一 DISQUE 的 Python客户端. 使用redis-py的HiRedi实现并通过它切换Redis的指令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mishbahr/djangocms-forms"&gt;djangocms-forms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最简单灵活的Django CMS表单生成器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ziman/idris-py"&gt;idris-py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Idris的Python后台(成功Python源码,而不是字节码)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vlasovskikh/funcparserlib"&gt;funcparserlib&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于Python功能组合的递归下降解析器. 解析器组合都只是高阶函数,把分析器作为它们的参数,并将其退回的结果值. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;嗯啍! 这才是格调!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; def parse(seq):
 &amp;#39;Sequence(Token) -&amp;gt; object&amp;#39;
 ...
 n = lambda s: a(Token(&amp;#39;Name&amp;#39;, s)) &amp;gt;&amp;gt; tokval
 def make_array(n):
 if n is None:
 return []
 else:
 return [n[0]] + n[1]
 ...
 null = n(&amp;#39;null&amp;#39;) &amp;gt;&amp;gt; const(None)
 true = n(&amp;#39;true&amp;#39;) &amp;gt;&amp;gt; const(True)
 false = n(&amp;#39;false&amp;#39;) &amp;gt;&amp;gt; const(False)
 number = toktype(&amp;#39;Number&amp;#39;) &amp;gt;&amp;gt; make_number
 string = toktype(&amp;#39;String&amp;#39;) &amp;gt;&amp;gt; make_string
 value = forward_decl()
 member = string + op_(&amp;#39;:&amp;#39;) + value &amp;gt;&amp;gt; tuple
 object = (
         op_(&amp;#39;{&amp;#39;) +
         maybe(member + many(op_(&amp;#39;,&amp;#39;) + member)) +
         op_(&amp;#39;}&amp;#39;)
         &amp;gt;&amp;gt; make_object)
 array = (
         op_(&amp;#39;[&amp;#39;) +
         maybe(value + many(op_(&amp;#39;,&amp;#39;) + value)) +
         op_(&amp;#39;]&amp;#39;)
         &amp;gt;&amp;gt; make_array)
 value.define(
         null
         | true
         | false
         | object
         | array
         | number
         | string)
json_text = object | array
json_file = json_text + skip(finished)

return json_file.parse(seq)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;目测,有关特性,赖总早已自行折腾过.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SequomicsResearch/Natural-Language-Processing-with-Python"&gt;Python自然语言处理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; &lt;br /&gt;
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;br /&gt;
四月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/SeaSunZh"&gt;SeaSun 珠海急招&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四月急招 10+名 有服务端开发经验的 &lt;strong&gt;工程师&lt;/strong&gt; 待遇上不封顶!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150505 spawnris/&lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 联合完成&lt;/li&gt;
&lt;li&gt;150504 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 29</title><link href="http://weekly.pychina.org/importpython/importpython-29.html" rel="alternate"></link><published>2015-04-24T00:42:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-04-24:importpython/importpython-29.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/29/"&gt;Import Python Weekly Newsletter - Issue No 29&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://docs.quantifiedcode.com/python-anti-patterns/"&gt;反模式python迷你书&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;核心  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎各位Pythoneer !这是一本讲述Python反模式和最差实践的迷你书. 学习这些反模式将会帮助你避免这种情况出现在您自己的代码中,让你成为更好的程序员(希望). 每个模式都有一个小的描述,例子和可能的解决方案. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.talkpythontome.com/episodes/show/3/pyramid-web-framework"&gt;Python播客#3: Pyramid Web框架&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pyramid  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加入迈克尔和克里斯·麦克唐纳关于Pyramid web框架的对话. 您将了解Pyarmid是一个什么样的框架以及它和Django,Flask,Bottle等框架的差别. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/blogspot/pydev/~3/d7PzLWWGAb4/type-hinting-on-python.html"&gt;Python类型提示&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你错过了它,现在看来还有很长的线程类型提示相关PEP. 最主要的要早些时候提出正在错误的做类型检查. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://racketracer.wordpress.com/2015/04/17/customize-python-notifications-for-finding-apartments-and-close-nba-playoff-games/"&gt;Customize Python Notifications For Finding Apartments and Close NBA Playoff Games&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;web 抓取  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NBA实时比分的API已经有了,但我想做一个使用Komono的chrome扩展来实现快速抓取. 
(&lt;code&gt;注:&lt;/code&gt;我不为他们工作,他们只是有一个很酷的产品)
. 首先,我们必须抓住我们认为很重要数据的ESPN NBA主页. 其中包括主队的名字,团队名称,分数,得分时间. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://caremad.io/2015/04/a-year-of-pypi-downloads/"&gt;PyPI一年下载的分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一年多前我们开始归档所有PyPI生成的日志,今天我们会看看这些日志,看看各种事情发生了变化. 这些数据解析自从PyPI下载文件的工具的user agenet,因为它的可靠性依赖于这些数据的可靠性. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pip 使用 Py 版本统计" src="https://caremad.io/images/a-year-of-pypi-downloads/stacked-py-pct.png" /&gt;&lt;/p&gt;
&lt;p&gt;是也乎,(￣▽￣), 果断是 Py2 赢了!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stefan.sofa-rockers.org/2015/04/22/testing-coroutines/"&gt;使用pytest进行测试&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;testing  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pytest为Python是一个很棒的测试包. 它让编写测试真的很容易,测试失败的报告功能非常有用. 然而,目前(版本2.7)并不在很大程度上帮助你测试(asyncio)协同程序. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.sqlalchemy.org/blog/2015/04/16/sqlalchemy-1.0.0-released/"&gt;SQLAlchemy 1.0.0发布&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最新发布&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.reddit.com/r/Python/comments/32rwxu/animated_3d_plots_in_python/"&gt;Python在3D动画情节上&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;visualization  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这里,我将演示如何使用Python和matplotlib创建这些可视化动画. 我所有的源代码可以在IPython笔记本可以找到. 最后,我们将生成数据可视化的动画. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/59CppxtXJHw/"&gt;本周PyDev: Noah Gift&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;采访&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对Noah Gift的采访.&lt;/p&gt;
&lt;h2 id="_2"&gt;新书&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/books/511/automate-the-boring-stuff-with-python-practical-programming-for-total-beginners/"&gt;Python自动化测试:实用编程初学者总额&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Albert Sweigart  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在使用Python进行自动化测试那些无聊的东西 ,您将学习如何使用Python编写做什么分钟将带你小时做手工程序. 一旦你掌握了编程的基础知识,您将创建的Python程序,轻松进行自动化的实用和令人印象深刻的壮举. 即使你从来没有写过一行代码,你可以让你的电脑做繁重的工作.  ImportPython与笔者的采访 - 阿尔伯特Sweigart我们的博客. 随意问的问题笔者在评论部分. &lt;/p&gt;
&lt;h2 id="_3"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LuminalOSS/credstash"&gt;credstash&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;148 Stars, 7 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个在云端进行证书管理的小工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wapiflapi/villoc"&gt;villoc&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;101 Stars, 7 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;堆操作的可视化&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/laike9m/ezcf"&gt;ezcf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;68 Stars, 4 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置文件导入的工具. ezcf意味着配置方便,它允许您导入JSON / YAML / INI / XML到py文件. 是非常有用当你从这些格式需要阅读的时候是非常有用的,尤其是阅读配置文件. &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
嗯啍,的确是非常实用的模块,
只是人类至今无法找到一个通用的,
开发语言无关的配置文件格式,
实在只能是醉了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SirCmpwn/hooks"&gt;hooks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;31 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;响应github的web hook请求并执行相应命令的服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spoqa/import-order"&gt;import-order&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;30 Stars, 2 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对进口辞典编纂的顺序进行排序&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/willf/segment"&gt;segment&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个基于频率和Viterbi算法的文本分割工具如:"#TheBoyWhoDied" =&amp;gt; ['#', 'The', 'Boy', 'Who', 'Died']&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
细思恐极! 这是代码分析的重心工具哪!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/reddragon/is-dirty"&gt;is-dirty&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 1 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个简单的关键词过滤分类器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JoshData/python-email-validator"&gt;python-email-validator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个强大的Python3.x电子邮件的语法验证库.&lt;/p&gt;
&lt;h2 id="_4"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/SeaSunZh"&gt;SeaSun 珠海急招&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四月急招 10+名 有服务端开发经验的 &lt;strong&gt;工程师&lt;/strong&gt; 待遇上不封顶!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; 
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
5月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150426 &lt;a href="https://gitcafe.com/spawnris"&gt;spawnris&lt;/a&gt; 通过 PR 完成&lt;a href="https://gitcafe.com/CPyUG/weekly/commit/13160ba3c8216f1ade4a1b3e4f17f0de4e5a198b"&gt;13160ba3&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;150423 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 28</title><link href="http://weekly.pychina.org/importpython/importpython-28.html" rel="alternate"></link><published>2015-04-16T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-04-16:importpython/importpython-28.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/28/"&gt;Import Python Weekly Newsletter - Issue No 28&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/G-uKNd5TSBw"&gt;Guido老爹在PyCon 2015的演讲&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python仁慈的独裁者在PyCon2015生动的演讲.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/emptysquare/~3/DHsGy7A3DUs/"&gt;PyCon 视频: "最终通过:异步测试"&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类Tornado的异步框架如何制定单元测试策略:在你不知道结果何时返还的时候你如何对它验证?这就是我的pycon 2015要说的Tornado的测试模块. 你也可以阅读我的文章的主题或看视频&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.analyticsvidhya.com/blog/2015/04/pycon-montreal-2015-data-science-workshops/"&gt;Pycon2015 蒙特利尔 教程- 用Python动手学习数据科学&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我很高兴,我能腾出时间去通过观看这些PyCon上的视频,这一直是一个巨大的学习对我来说. 本次活动分为两部分:教程(作坊)或会谈. 作坊形式的目的是提供3个小时实践上的会话里,老师还要充当调解人. 在这篇文章中,我已录制了一系列的视频,你可以从PyCon2015看到. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pyformat.info/"&gt;PyFormat.info&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你想知道的关于Python字符串格式化的一切&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3CwJ0MH-4MA"&gt;我Python中的小Rust-y: 来自Mozilla的Dan Callahan的介绍 PyCon 2015 - [29:18]&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rust是来自Mozilla的新的系统编程语言,结合了强大的编译快速切准确的性能... 它可以像使用ctypes一样!让我们来学习下如何使用Python调用Rust函数,跟C语言说再见吧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/32p4ef/brett_cannon_how_to_make_your_code_python_23/"&gt;Brett Cannon - 如何写出兼容python2/3的代码 - PyCon 2015&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你知道Python 3是Python 2的改进升级,你想要使用它. 不幸的是你遗留的Python 2的源代码却需要保持兼容. 别担心!本讲座将告诉你,你可以使用各种工具帮助你解决这些繁琐的工作,重新塑造你的Python2代码. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tkwZ1jG3XgA"&gt;James Bennett - 深入Django - PyCon 2015 - YouTube&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个超出了大多数教程教程,;这意味着开发者已经知道一点关于Django,想真正了解框架的内在的勇气. 本教程将不涉及编写代码或应用程序;相反,它将会剖析项目的运作和本身的API,以及所有绑定的组件和各级堆栈. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/pyladies/comments/329uxs/world_domination_i18nl10n_a_pycon_15_talk_by/"&gt;统治世界: i18n/l10n - 一个PyCon '15演讲来自Sarina Canelake (视频+幻灯)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django, pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你有没有听说过国际化(i18n)?知不知道这意味着什么?也许你的项目已经有使用i18n来处理,但是你有一种挥之不去的感觉,你可以做得更好. 本演讲将讲解如何构建一个基于i18n的Django项目的基本知识(原则适用于任何项目!),如何进行本土化的过程(本地化)更顺利. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IGwNQfjLTp0"&gt;我也在PyCon!我的演讲是关于哈希,Bloom Filter和安全&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哈希函数,我们的可信赖的朋友,和链表或递归一样至关重要,但它并不总是得不到相同程度的认可. 我们将谈论一下哈希函数和包含哈希的数据结构,庄严的BloomFilter,和具有安全隐患散列加密. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/attribution_link?a=_UzeuPDLeos&amp;amp;amp;u=%2Fwatch%3Fv%3DhIJdFxYlEKE%26feature%3Dshare"&gt;演讲 - Pycon 2015&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jacob Kaplan-Moss在PyCon2015额演讲&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgxzjK6GuOHVKR_08TT4hJQ"&gt;Pycon 2015 开始上传&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python中的变量名和值的行为很容易被混淆. 在Python的许多地方难以辨别,特别是如果你正在使用其他编程语言. 在这里,我将解释它是如何工作的,和现在的一些事实和神话的路上. 引用调用?按值调用?答案是明确的!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://threebean.org/blog/pycon-2015-part-i"&gt;PyCon 2015回顾(第一部分)&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们几个来自Fedora的员工在过去的一周参加了在蒙特利尔的Pycon. 会议的部分已经过去,明天开始冲刺,与此同时,这里有一些我整理的会议中的集锦:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wf-BqAjZb8M"&gt;Raymond Hettinger - 超越 PEP 8 -- 最美代码的最佳实践 - PyCon 2015&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从十年Python的咨询,培训,代码审查,并作为核心开发中提取出的精华. 学会避免一些的PEP 8风格指南的危害,了解什么是真正重要的创造美丽的理解的代码. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/32qhve/modules_and_packages_live_and_let_die_by_david/"&gt;David Beazley在PyCon 2015的演讲"模块和包:沿用还和弃用"&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有的Python程序员都使用import语句,但是你真的知道它是如何工作的,什么才是被允许?本教程的目的就是让你深度了解模块,封装,和导入相关的一些可恶的问题. 当我们看完,你终于就可以舍弃掉你那百万行的微框架了!&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/towry/bin-packing"&gt;bin-packing&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;45 Stars, 2 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;装箱算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ulope/pyformat.info"&gt;pyformat.info&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;42 Stars, 5 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python拥有很赞的字符串格式化功能已经不是一年两年了,但是相关的文档技术性和理论性太强了.这个网站试图通过实例来告诉我们如何使用覆盖了新旧风格的常用字符串格式化的API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CoreSecurity/impacket"&gt;impacket&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;34 Stars, 6 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Impacket是个使用网络协议进行工作的工具集合&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OneSourceCat/scan-framework"&gt;scan-framework&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 21 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个漏洞扫描框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/python/asyncio"&gt;asyncio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 3 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个给Python3.3使用的asyncio模块.从Python3.4开始,asyncio已经被纳入标准库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/strib/scipher"&gt;scipher&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 3 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个学术性的消息编码器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gianlucaborello/cassandradump"&gt;cassandradump&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个灵感来源于mysqldump的数据导出工具,增加了对数据的分片和分块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ipconfiger/torasync"&gt;torasync&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将任务放在后端的进程中异步的去执行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rhiever/reddit-twitter-bot"&gt;reddit-twitter-bot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个将Reddit上浏览的文章自动转发到Twitter的Python机器人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/CIRCL/email-abuse"&gt;email-abuse&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个能对邮件进行复查,分析并生成报告的多功能软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/paambaati/daily-dilbert"&gt;daily-dilbert&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抓取Dilbert漫画每天的内容并发送到邮件列表的简单爬虫
Simple scraper that picks up the day's Dilbert comic strip and sends it to an email list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ottatiyarou/django-email-registration-demo"&gt;django-email-registration-demo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个使用Django实现的通过提供邮箱和密码,发送验证码到邮箱验证注册的demo.&lt;/p&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; 
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
四月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/SeaSunZh"&gt;SeaSun 珠海急招&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四月急招 10+名 有服务端开发经验的 &lt;strong&gt;工程师&lt;/strong&gt; 待遇上不封顶!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150421 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 进行标点清查, Pelican 编译发布&lt;/li&gt;
&lt;li&gt;150420 gaojunteng 完成翻译, spawnris 接受 PR&lt;/li&gt;
&lt;li&gt;150416 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 27</title><link href="http://weekly.pychina.org/importpython/importpython-27.html" rel="alternate"></link><published>2015-04-10T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-04-10:importpython/importpython-27.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/27/"&gt;Import Python Weekly Newsletter - Issue No 27&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.talkpythontome.com/episodes/show/2/python-and-mongodb"&gt;俺的播客聊 Python : Python 和 MongoDB&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;mongodb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次节目嘉宾是来自 MongoDB 的 Jesse Davis.
Jesse 是几个流行开源库的维护人,
包括 Mongo 的 Py 驱动库: PyMongo .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/31pcor/power_up_your_virtualenv/"&gt;提升 virtualenv&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;virtualenv&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2012 年俺发现了 virtualenvwrapper,
然后就变成了俺的首选工具.
至今每天第一个命令就是: mkvirtualenvis .
在这儿分享一些基于 virtualenv 的工作流.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其实现在流行的是 pyenv 了,将环境和工程分离,可以随意装配.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/humiaozuzu/awesome-flask"&gt;很赞的 Flask 资源及插件列表&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含书签和贡献.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/El5bzWiRejE/"&gt;PyCharm 4.5 EAP 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 JetBrains PyCharm 而言是兴奋的一天,
第一个 PyCharm 4.5 公开预览版(第141.583次构建)可以下载了!
放在 EAP(Early Access Preview) 目录.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.checkio.org/blog/games-chance/"&gt;Python 中的游戏机会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;德州扑克是标准卡牌游戏的变种,
两张填起来,其它5张公开,基于这些,你得决策怎么赢.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2015/04/manage-python-script-options.html"&gt;管理 Python 脚本选项&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有更好的方式来管理 Python 命令行参数嘛?!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/115670880808"&gt;你的 Django 故意: Meet Agata&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Agata 是 10Clouds 的软件工程师,
也是位傲骄的 Django Girls Wroc 教练.
毕业于华沙大学的电子和计算机工程技术系.
毕业后不得不开始编程时,很反感的.
幸好华沙Python社区的程序猿们感化了她,
最终 Python 这门美好的语言, 多拥有了一位美丽的程序媛. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2015/04/pgconf-2015-nyc-recap.html"&gt;PgConf 2015 NYC 重温&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺刚刚从 NY PGConf 2015 回来,
真心是段奇妙的经历,
在此俺尝试分享有所触动的见解/想法.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.wefearchange.org/2015/04/creating-python-snaps.html"&gt;创建 Python Snaps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又涌现出很多有趣的技术;
pex 创建可执行的 Python 单一应用文件,
配合原子的 Snappy Ubuntu Core ,
能传送系统更新或轻量应用部署到云或是其它环境中.
这令我们有更多的姿势快速完成 Python 基础部署.&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/theseoafs/shittydb"&gt;shittydb&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;61 Stars, 18 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯啍,快速 KV 存储.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ChrisBeaumont/soupy"&gt;soupy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;50 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;易折腾的 web 数据包裹.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/libextract/libextract"&gt;libextract&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;26 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自在的提取文章文本.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/biesnecker/cleveland"&gt;cleveland&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;17 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单 asyncio-based actors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phith0n/python-xss-filter"&gt;python-xss-filter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 HTMLParser 的原生 HTML 净化器,
清取所有 javascript .&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;内什么, 现在没有动态 JS 输出的网页,不多了...&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Hardtack/Flask-aiohttp"&gt;Flask-aiohttp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 aiohttp 的异步 Flask .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/korfuri/django-prometheus"&gt;django-prometheus&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Export Django 
针对 Prometheus.io 的监测指标 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/filcuc/SendMail"&gt;SendMail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小脚本, 用 Google OAuth 2.0 认证, 用你的 google 帐号发送邮件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rackerlabs/ansible-hadoop"&gt;ansible-hadoop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Ansible 进行 hadoop 的最佳实践.
这组 Ansible 剧本能快速创建 Hadoop 集群
(Hortonworks 数据平台).
帮助在 Rackspace 云环境中构建可运行的环境.&lt;/p&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; 
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
四月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="http://weekly.pychina.org/importpython/importpython-why"&gt;为毛又来个 Py 周刊? |蠎周刊 |汇集全球蠎事儿 !-)&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150412 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150410 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 26</title><link href="http://weekly.pychina.org/importpython/importpython-26.html" rel="alternate"></link><published>2015-04-04T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-04-04:importpython/importpython-26.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/26/"&gt;Import Python Weekly Newsletter - Issue No 26&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bits.citrusbyte.com/protecting-a-python-codebase/"&gt;Python 代码库保护&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的语言本质使代码仓库的保护变成异常复杂.
作为一种解释语言,
源代码应该有种保护机制,以便安全执行.
作者在此文中描述如何试图找到到种机制来有效的
保护 Python 代码库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/zqHWETobnx8/"&gt;PyCharm 4.0.6 RC 已可用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这天, PyCharm 4.0.6 RC 发布漏洞修复版.
发布说明中包含详细说明:
主要是针对 Django 的 ORM 检查,
为 ManyToManyField 的 bug 修复.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/ObAFl6CPM8w/"&gt;功能聚焦: 用 PyCharm 进行远程开发&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;周五快乐, 亲们, PyCharm 已经支持了远程开发,
为了展示,使用了个简单的 Flask web 应用开发/调试.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
还是够复杂的,,,
至少要配置十几处.
IDE 去死去死!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/LincolnLoop/~3/iorgEgsweiQ/"&gt;高性能 Django 基础设施预览&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;咱们用 Salt 进行配置管理有三年了.
近几周,我们在 Salt 之上折腾出一种 可复用/可扩展 的系统,
包含了我们多年来所有来自客户的经验教训.
能在约一刻钟的时间里,
帮助任何人建立/发布出一个完备的 Python 应用网站:
包含 负载均衡,网络加速,高速缓存,数据库,任务队列...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/04/introducing-modwsgi-express.html"&gt;介绍 mod_wsgi-express.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;apache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;和传统的 &lt;code&gt;mod_wsgi&lt;/code&gt; 最大的区别就是:
&lt;code&gt;mod_wsgi-express&lt;/code&gt; 能
使用 &lt;code&gt;pip install&lt;/code&gt; 命令,
直接从 PyPi 安装, 
甚至于可以追加到 'requirements.txt' 文件中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/meet-scout-a-search-server-powered-by-sqlite/"&gt;接触 Scout, 用 SQLite 驱动搜索服务&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;sqlite,text search&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在俺 SQLite 冒险的经历中,
俺被迫使用 SQLite 的全文搜索折腾出一个
RESTful 搜索引擎.
可以认为是穷人的 ElasticSearch
~ 嗯啍,非常非常穷的那种.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/wC01hCZ8GtY/for-shes-jolly-good-psf-fellow.html"&gt;PSF 研究员识别程序&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;该PSF研究员识别程序的目的是:
管理不断增长的全球 Python 社区以及成员.
当然,想掺合,先通过提名再说了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/03/getting-started-with-django-tastypie/"&gt;Django tastypie 入门&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;rest&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django tastypie 
是个辅助完成 RESTful 接口的库.
这是篇很靠谱的入门教程.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/apr/01/release-18-final/"&gt;Django 1.8 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过几个月的折腾, Django 团队高兴的按计划发布了 1.8,
明确是 LTS ~ 长期支持版本!
这意识味着,专注安全和数据保护的这一版本,
将至少进行三年的持续支持.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.untrod.com/2015/03/how-celery-chord-synchronization-works.html"&gt;Celery 是如何解放同步任务的?!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;celery&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Celery 是 Python 界中一种强大的异步任务管理平台.
基本模式是在同步任务代码中,
将任务(以序列化消息的形式)
推送到消息队列中,
( Celery 中的 "broker", 可基于丰富的技术
~ Redis/RabbitMQ,Memcache 或是其它数据库)
而工作进展,则分布式的从队列中提取并执行.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/pub/e/3388"&gt;Webcast: 用 Python 在 GCP 上构建可扩展的 web 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;webcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在幻灯中,
Google 工程师及 OREILLY 作者
Dan Sanderson 同学,
展示 Google Cloud Platform 作为 Python 开发平台,
如何 构建/部署/管理 一个可扩展的 web app.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.oreilly.com/pub/e/3386"&gt;Webcast: 用 Python 和 Ansible 构建实效网络自动化体系&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;webcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Wednesday, April 15, 2015
(Time 10AM PT, San Francisco
1pm - New York | 6pm - London | 10:30pm - Mumbai | Thu, Apr 16th at 1am - Beijing | Thu, Apr 16th at 2am - Tokyo | Thu, Apr 16th at 3am - Sydney 
)
&lt;img alt="kirk_byers" src="http://cdn.oreillystatic.com/images/people/154/kirk_byers.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;将分享如何使用 Py+Ansible 
自动化各种网络任务;
包括配置模板,收集网络设备信息,并执行批量配置更改...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2015/03/getting-started-with-redis-py/"&gt;学习 redis-py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python,redis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此文, 展示了如何
通过 redis-py 在 py 脚本中使用各种 redis 命令.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fwierzbicki.blogspot.com/2015/03/jython-27-release-candidate-1-available.html"&gt;Jython 2.7 发布第一个候选版本!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;jython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然是候选版本,
但是,已经非常接近最终正式版本! &lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thampiman/reverse-geocoder"&gt;reverse-geocoder&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;947 Stars, 36 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速,离线反向地理编码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ReCaptchaReverser/InsideReCaptcha"&gt;InsideReCaptcha&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;187 Stars, 10 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 ReCaptcha 系统逆向出来的
新 ""captchaless"&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jsvine/spectra"&gt;spectra&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;142 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简易色阶和颜色转换&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://github.com/CleanCut/green"&gt;Green&lt;/a&gt;
    - 141 Stars, 10 Fork&lt;/p&gt;
&lt;p&gt;Green 是种测试框架,
可类比为 nose/trial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ottogroup/palladium"&gt;palladium&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;86 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;预测分析服务 的架设框架.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sontek/bulby"&gt;bulby&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;75 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;phillips hue lightbulb 的管理库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/manugarri/cron-metrics"&gt;cron-metrics&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;57 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Python 中进行系统监控以及定期任务管理.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jdowner/gist"&gt;gist&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;29 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gist 的命令行工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/deepankarb/fontawesome-to-android"&gt;fontawesome-to-android&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;能将字体中超赞的图标,
转换为 png 图片,
并安置到 android density buckets
中的 py 脚本.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/logandhead/ReactiPy"&gt;ReactiPy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Compile React Components Server Side using Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/SlightlyCyborg/Email-Autoresponder"&gt;Email-Autoresponder&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;嗯啍,俺撸了个 AI 来自动应答邮箱中重复性的问题.
事实上俺不怎么用邮箱的,
所以,俺时常问朋友们,如果有一个能阅读他们邮件的 AI,
接下来想作什么?!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
细思恐极! 这个谁都需要哪!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rietveld-codereview/rietveld"&gt;rietveld&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代码复审, 架在 GAE 上的.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
Guido 老爹遗作!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kylef/jsonschema-test"&gt;jsonschema-test&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从给定的 JSON 概念文本,
自动编写测试并运行.&lt;/p&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmSzHr"&gt;猎豹深圳团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; 
四月急招 N 名有服务端开发经验的 &lt;strong&gt;gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...
四月急招 5+ 名有服务端开发经验的 &lt;strong&gt;Pythonista/gopher&lt;/strong&gt;!&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150404 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150403 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 25</title><link href="http://weekly.pychina.org/importpython/importpython-25.html" rel="alternate"></link><published>2015-03-20T21:12:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-03-20:importpython/importpython-25.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/25/"&gt;Import Python Weekly Newsletter - Issue No 25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.toptal.com/python/beginners-guide-to-concurrency-and-parallelism-in-python"&gt;Python 中的并发和并行初学指南&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;线程只是众多并发程序构建的姿势之一.
此文,描述了在 python 中构建并发的多种策略,
以及适用场景.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="multiple processes" src="http://www.toptal.com/uploads/blog/image/954/toptal-blog-image-1426661499995.jpg" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单进单线, 自然流程&lt;/li&gt;
&lt;li&gt;多进单线, 原子事务&lt;/li&gt;
&lt;li&gt;单进多线, 烧脑控制&lt;/li&gt;
&lt;li&gt;消息总线, 恢复自然&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/cv-ch89BeaU/psf-python-job-board-relaunched.html"&gt;PSF 的 Python 工作榜恢复!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;差不多停了快一年,
终于 Python 职位公告板原地满血复活!
新系统完全整合到  python.org 中.
职位提供方,可以自由注册一个帐户,自主登录并提交招聘启事,
通过 PSF 的求职团队评审后即可上榜.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/blog/post/free-community-run-python-job-board"&gt;免费运行 Python 职位 Free Community Run Python Job Board&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;job market&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非官方 Py 职位板是完全免费和社区驱动的.
此工作板内容从 git 仓库自动生成,并用 github-pages 发布.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://marcobonzanini.com/2015/03/17/mining-twitter-data-with-python-part-3-term-frequencies/"&gt;用 Python 分析 Twitter 数据 (Term Frequencies)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是系列中第三篇了,
通过数据的采集和整理,终于可以折腾点结论出来了,
对讨论进行长期的频率分析,从中提取有意义的方面.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.giantflyingsaucer.com/blog/?p=5541"&gt;安装 Apache Kafka 并使用 Py 3 进行通讯&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python3,apache,kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Kafka 已经有很多应用案例了,在笔者的工作中也用上了.
虽然在很多 "云" 场景中, Kafka 获得了认可,但是,想构建运行起来一直不是容易的事儿,
于是,笔者想出了一个方法,可快速将 py 3 接入...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@unary/django-views-automated-testing-with-selenium-d9df95bdc926"&gt;用 selenium 对 Django views 进行自动化测试 — Medium&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,Selenium&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Selenium 乃自动化测试套件,对 web 应用程序的自动化交互测试提供了丰富的接口,
当然可以用来测试 web 应用/网页抓取 等等枯燥的测试案例.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.caktusgroup.com/blog/2015/03/16/why-rapidsms-SMS-applications/"&gt;为毛 RapidSMS 专注短信应用开发?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先,什么是 RapidSMS ?
开源,Django 扩展的 web 应用框架,
支持文本信息处理的,完全开源的.
自动根据收到短信触发回应,
并设计为一组可插抜的模块代码.兼顾从前端到后端.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="UNICEF-Project-Mwana-Caktus-Group" src="https://caktus-website-production.s3.amazonaws.com/media/blog-images/UNICEF-Project-Mwana-Caktus-Group-ICT4D.JPG" /&gt;&lt;/p&gt;
&lt;p&gt;世界上没有 wifi 的国家海了去的, SMS 大有可为的!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/113785663798"&gt;你的 Django 故事: 遇到 Caroline Simpson&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Caroline 是位爱 Python 的程序媛.
她在 International Governance Innovation 中心工作.
创建了本地的 Python 用户组,吸引爱好者来共同折腾.
当然的,喜欢有趣的新技术.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/pystats/comments/2z624k/introduction_to_statistics_using_python/"&gt;介绍用 Python 进行统计&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python,statistics&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺在自个儿的领域中进行数据统计,
但是,经常受挫于两件事儿:
1) 没有足够的统计,
2) 相关图书只提供了理论背景,从来不给实际的帮助.&lt;/p&gt;
&lt;p&gt;针对以上,俺完成了这本书(无论在手上还是电脑中),
都将解决以上两个问题.
嗯啍!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lifehacker.com/the-programming-skills-jobs-and-company-types-that-pa-1692152608"&gt;Python 已为 C++ 后,第二高薪职业&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;job market&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;漂亮的数据可视化支撑!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.informit.com/articles/article.aspx?p=2320938"&gt;实效 Python 第40条: 协同程序同时运行多种功能&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;concurrency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然 Python 的线程有各种问题,
但是,总是能解决的,这令你的程序看起来同时具有多种功能.
Brett Slatkin 将其体验分享在了
实效 Python 第59条: &lt;code&gt;写出更好的 Python 程序&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.skilledup.com/articles/intermediate-python-development-the-next-steps/"&gt;中阶 Python : 下一步&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你已经通过艰难的方式学习了 Python.
比如上 Codecademy.
现在你的兴趣有所下降,
好象对编程的兴趣在减少.
哪里有超越 初级 的课程?
想变成 Pythonista ? 这儿有些中阶课程,可以挑战自我.&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/spasmilo/electrum"&gt;electrum&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;516 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bitcoin 的瘦客户端 client.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lhartikk/AstroBuild"&gt;AstroBuild&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;368 Stars, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 planet alignments 完成部署.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/brennerm/PyTricks"&gt;PyTricks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;53 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收集 Python 相关的冷门编程技艺和特性.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/juliarizza/easy_store"&gt;easy_store&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;20 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是 web2py 模型的电子商务/其它存储平台的支持框架.
目标就是最快获得一个可用的电子门店..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/quodlibet/quodlibet"&gt;quodlibet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;全平台音乐库管理/播放 库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jrfonseca/gprof2dot"&gt;gprof2dot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将分析输出为 dot 图谱文件.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="gprof2dot sample" src="https://github.com/jrfonseca/gprof2dot/raw/master/sample.png" /&gt;&lt;/p&gt;
&lt;p&gt;跨语言的哪! 将各种标准的分析结果,
用 伟大的 &lt;code&gt;Graphviz&lt;/code&gt; 图形脚本输出为漂亮的自动排版的关系图谱!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dhilipsiva/webapp-checklist"&gt;webapp-checklist&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;web 应用的程序猿,在网站发布前,应该考虑的所有事务的检验表!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
最实用的一种作弊条了 
居然有中文版!(好象是伟大的 google 自动翻译的)
;-)&lt;/p&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; 
最后一周急招5名 gopher/pythonista !&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;150323 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150321 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 24</title><link href="http://weekly.pychina.org/importpython/importpython-24.html" rel="alternate"></link><published>2015-03-14T14:41:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-03-14:importpython/importpython-24.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/24/"&gt;Import Python Weekly Newsletter - Issue No 24&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/ywC7fki6avU/"&gt;功能聚焦: 用 Pycharm 的 intentions 来重构 Py 代码&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycharm&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCharm 的 代码 inspections 和 intentions 最大的不同在:
虽然目标都是改进代码质量,
但是 intentions 是直接动手, 
当然,可能自动修订的都是好的...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
细思恐极, PyCharm 也终于走到这一步了,,,,
也上了俺的黑名单了!-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/mar/09/security-releases/"&gt;安全及提案发布,Django 家的&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,security release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 团队刚刚发布了多个版本 
-- 1.7.6 以及 1.8.b2
可从 PyPI 以及官方下载到.
建议用户尽快升级,
因为包含多处安全相关的增强.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.henryhhammond.com/pandas-formatting-snippets/"&gt;Pandas 格式化技巧&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;大爱 IPython 和 Pandas,
但是,想输出漂亮的报表总是要折腾一下的,
这里收集了一些常用片段,可以帮忙.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://evennia.blogspot.com/2015/03/documenting-python-without-sphinx.html"&gt;不用 Sphinx 组织 Python 文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当前,嘦看到 "Python" 以及 "文档" 出现在同一先段落中,
肯定也包含 Sphinx 这个关键词了!
虽然 Sphinx 组织文档很好,
但是....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheMouseVsThePython/~3/yU5oyDUsrKs/"&gt;Python 101 半价!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从三月开始,
如果使用代码: &lt;code&gt;march15&lt;/code&gt; 将享受半价优惠.
书的目标读者是初级用户,
但是,有 3/2 的内容也是面向中级的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://intermediatepythonista.com/classes-and-objects-ii-descriptors"&gt;中阶 Python: 描述符&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Descriptors 是个广泛用在 Python 核心代码,
却显得深奥的概念.
此文很好的总结了,作为一名靠谱的 Python 程序员,
至少应该在自个儿的工具箱中包含的有关技巧.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/113170919528/your-django-story-meet-cea-stapleton"&gt;你的 Django 故事: 遇到 Cea Stapleton&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cea 的编程经验起源自私人网站的构建,
以及形式语言的深迷.
哲学有关的经验(语言和形式逻辑特别是哲学)
已经永久性的影响了她的代码.
当前,她在 威斯康星大学麦迪逊分校 攻读 计算机科学硕士,
同时, 应用她的技能,帮忙完善图书馆管理框架.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/rlabbe/Kalman-and-Bayesian-Filters-in-Python/blob/master/table_of_contents.ipynb"&gt;Python 的卡尔曼和贝叶斯过滤器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然的, 使用 IPython notebook 组织的,
还有比这种形式更好的学习渠道嘛!?
可运行的文章!
随时可以修订代码印证理解.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/03/safely-applying-monkey-patches-in-python.html"&gt;Python 中的 Monkey 补丁.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Monkey 补丁的用途远不只是问题修复.
虽然常见的使用方式都是描述修订,
并应用模拟库来协助单元测试的运行.
另一个不常见的情况是为现有应用追加仪表盘,
以追加监察功能.&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/joelpx/reverse"&gt;reverse&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;166 Stars, 17 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reverse engineering for x86 binaries (elf-format). Generate a more readable code (pseudo-C) with colored syntax. Warning, the project is still in development, use it at your own risks. This tool try to disassemble one function (by default main). The address of the function, or its symbol, can be passed by argument.&lt;/p&gt;
&lt;p&gt;对 x86 二进制逆向工程(ELF格式)
生成具有可读性的代码(伪-C,有彩色语法).
注意! 该项目仍处于早期发展, 用在实际工程中有风险.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gutworth/httpswatch"&gt;httpswatch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;67 Stars, 21 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTPSWatch 专注追踪网站的 HTTPS 支持情况.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/OffensivePython/Nscan"&gt;Nscan&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;60 Stars, 16 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nscan 是受 Masscan 和 ZMAP 启发,构建的高速 互联网扫描和优化工具.
使用自己完成的精简版 TCP/IP 协议.
使用原始套接字发送TCP SYN探测,
但不依赖 SYN Cookies, 
所以,不用等待反馈检验,
这使之比同类工具扫描的要快.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thomashuang/white"&gt;white&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;43 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anchor-cms 样的 Blog CMS 系统,
拥有 Anchor-cms 主要功能,
但是,用 Python 完成.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/venmo/slouch"&gt;slouch&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个轻型框架,
专门用来实现 Slack 的命令行扩展.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geowurster/gj2ascii"&gt;gj2ascii&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持在命令界面生成
ASCII 编码的 GeoJSON.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyCon Asia-Pacific 2015" src="http://zoomq.qiniudn.com/CPyUG/PyCon2015China/pycon-apac2015-logo.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycontw.blogspot.tw/2015/02/pycon-asia-pacific-2015-in-taiwan-save.html"&gt;亚太Py大会 6-5~7 在台北举行!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://tw.pycon.org/2015apac/en/call-for-proposals/"&gt;PyCon APAC/Taiwan 2015 - Call for Proposals&lt;/a&gt; 议题召集已经释放,想去宝岛体验社区交流的,可以下手了!&lt;/p&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;/p&gt;
&lt;h3 id="_4"&gt;回收&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ilian.io/automated-deployment-with-ubuntu-fabric-and-django/"&gt;用 Fabric 在 Ubuntu 上自动部署 Django&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,deployment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;几个月前,俺只是体验 Fabric 一个简单的脚本来自动化创建一个 Django 项目.
现在,已经变成一个值得推广的全功能栈的 Django 工程部署自动化框架了.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
3年前的老文...
经举报,下架 ;-)&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150315 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150314 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 23</title><link href="http://weekly.pychina.org/importpython/importpython-23.html" rel="alternate"></link><published>2015-02-27T20:20:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-02-27:importpython/importpython-23.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/23/"&gt;Import Python Weekly Newsletter - Issue No 23&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2015/02/24/optimizing-python-with-numpy-and-numba/"&gt;真实世界中的Py优化: NumPy, Numba, 和 NUFFT&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;performance&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经常见到各种不成体系的优化教程,
这里,将描述整个儿优化过程,介绍这一的算法,即&lt;strong&gt;非均匀快速傅立叶变换&lt;/strong&gt;(NUFFT)
从一个相对简单的 Python 实现开始,
从 Numba 获得帮助,
再接近高度优化后的 Fortran 实现.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.quantopian.com/posts/research-looking-for-drift-an-event-study-with-share-buybacks-announcements"&gt;Finance Event Study in iPython Notebook (Quantopian)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;ipython&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之前, 已经分享过 IPython notebook 上进行股票回报交易详细的过程,
现在,在相同环境中,
可以对一次股票回购事件,进一步挖掘研究了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.gmludo.eu/2015/02/macro-benchmark-with-django-flask-and-asyncio.html"&gt;Ludovic Gasc (GMLudo): 微比对 Django, Flask 和 AsyncIO (aiohttp.web+API-Hour)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,flask,async-io&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天,建议你认真对比一下 HTTP 守护进程,
在 AsyncIO/falsk/django 之上实现的效果.
对于那些没有按照 AsyncIO 标准实现的,
aiohttp.web 
是基于 aiohttp 的轻量框架,
类似 Flask 只用很少的层,
实现了 AsyncIO 样的 http.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/O86y2zJoWyQ/psf-community-service-award-goes-to.html"&gt;Django Girls 获得 PSF 社区服务大奖&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;PSF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"决议, Python 软件基金会2014年四季度社区服务奖, 
授予 Ola Sitarska 以及 Ola Sendecka 姐妹
发起的 Django Girls 活动,
经过可观的发展,已经在十几个国家蓬勃发展起来."&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://intermediatepythonista.com/object-orientation-in-python"&gt;中级行者: Classes 和 Objects 第一部分&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本教程, 忽略了类和对象编程的基础,
专注提供更好的 Python OOP 方面的理解.
如果想尝试新式类,
应该从其超类开始理解.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://treyhunner.com/2014/03/migrating-to-django-1-dot-7/"&gt;同时支持 Django 1.7 和 South - Trey Hunner&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;想迁移包含 Django 和 South 的应用?
并加入 Django 1.7 的支持?!
此文完备的描述了如何作到这些.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/feb/25/releases/"&gt;Django 1.8 beta 1 和 1.7.5 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这天, Django 团队同时发布两个版本, 1.8 b1 包含 预览/测试包,
在进入第二阶段前,给我们机会先尝试一些 1.8 的变化.
另外,又发布了 1.7 系列的 bug 修复版 1.7.5 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-343/"&gt;Python 3.4.3 释出!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 3.4.3 相对
3.4.2 包含了很多修订以及小特性.&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlexEne/CCrush-Bot"&gt;CCrush-Bot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;108 Stars, 9 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python 制造的 bot 
专门来玩 candy crush&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rodricios/autocomplete"&gt;autocomplete&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;87 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点赞32!
模拟人类如何预测哪些人将会说什么,
即 实现 [Bing,Google,Yahoo,等等]
的 "自动完成功能".
只需要机械学习的库,就能快速达成,
详情链接中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/antiboredom/audiogrep"&gt;audiogrep&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;57 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对音频文件创建 "超级切片" ,
利用 CMU Pocketsphinx 完成语音识别.
用 pydub 将所有功能粘合起来,
从而能对 音频进行文字搜索.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shuoli84/peach"&gt;peach&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;22 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Peach 是文件下载缓存服务,
解放你的时间来创新,而不是等待.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lettergram/Email_Analysis"&gt;Email_Analysis&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;邮件中都有什么词?
俺想知道,于是就有了这个分析器!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jdfreder/ipython-pip"&gt;ipython-pip&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持用 pip 来安装 IPython notebook 的扩展&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geekpradd/PyLyrics"&gt;PyLyrics&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pythonic 的歌词获取器,
从 lyrics.wikia.com .&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alphapapa/pyza"&gt;pyza&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Songza 的命令行客户端,
调用 VLC 来播放音频. &lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyCon Asia-Pacific 2015" src="http://zoomq.qiniudn.com/CPyUG/PyCon2015China/pycon-apac2015-logo.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycontw.blogspot.tw/2015/02/pycon-asia-pacific-2015-in-taiwan-save.html"&gt;亚太Py大会 6-5~7 在台北举行!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://tw.pycon.org/2015apac/en/call-for-proposals/"&gt;PyCon APAC/Taiwan 2015 - Call for Proposals&lt;/a&gt; 议题召集已经释放,想去宝岛体验社区交流的,可以下手了!&lt;/p&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150305 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150228 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 22</title><link href="http://weekly.pychina.org/importpython/importpython-22.html" rel="alternate"></link><published>2015-02-20T20:20:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-02-20:importpython/importpython-22.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/22/"&gt;Import Python Weekly Newsletter - Issue No 22&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://vdist.readthedocs.org/en/latest/"&gt;vdist, 通过 virtualenv, Docker 和 fpm 为 Python 应用构建 OS 包&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;virtualenv&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注构建干净,自包含的 OS 包,
给 Python 应用,
综合使用了  virtualenv, Docker 和 fpm ,
并用 Jinja2 来渲染展示模板.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.idiotinside.com/2015/02/13/get-number-of-likes-of-a-facebook-page-using-graph-api-in-python/"&gt;Py 调 Graph API 来获得 fb 上点赞数目&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;facebook&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;教程中,展示了如何获得 facebook 页面上的点赞数据,
虽然还没有官方 SDK,
用 Python 调用 Graph API REST 方法即可.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pydanny.com/python-decorator-cheatsheet.html"&gt;Python 修饰器作弊条儿&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python,decorator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总是记不住修饰器的写法?!
不用四处找了,收藏这个就对了.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
目测 dash 中就有?
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.tryolabs.com/2015/02/17/python-elasticsearch-first-steps/"&gt;Python + Elasticsearch.介绍/基础教程.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;elasticsearch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Elastic{ON}15&lt;/code&gt;,
首届 ES 大会就要来了!
因为 ES 令大家看到了更多的可能,
趁机为 Python 开发者介绍 ES 的简单实例,
展示怎么开始...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codefisher.org/catch/blog/2015/02/10/python-decorators-and-context-managers/"&gt;Python: 技巧/诀窍和常识 - 第2部分 - 装饰和上下文管理&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;两周前,发布了此系列第一篇文章,
这周,聚焦到更加深入的领域.
首先是修饰器,当然没有包含所有技巧;
然后针对上下文管理,也只给了一个案例;
再次提醒代码都在  gist.github.com.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://howchoo.com/g/mjkwmtu5zdl/getting-started-with-django-testing"&gt;Django 测试入门 - howchoo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,testing&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然编程有日子了,
但是作者最近才实施测试.
所以,文章是真正的基础,对于有经验的可以跳过相关部分.
对于其它的,首先是整体的概述,希望有所帮助&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/feb/18/djangocon-eu-2015-update/"&gt;DjangoCon Europe 2015 update&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2015's DjangoCon Europe 在威尔士的 Cardiff 进行,
5.31~6.5,整整6天,
官网刚刚更新了内容.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/111378603928"&gt;成为 Django Girls Patreon!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;短短7个月,Django Girls 教授了
包含 欧洲/非洲/亚洲/澳大利亚/北美 超过670位程序媛.
并越预期的收到了超过 3000 个应用!
免费开源教程有 30000 位读者,
平均阅读了350次! ~ 真心赞!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pyvmmonitor.com/"&gt;PyVmMonitor: 全新 Python 分析器&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;debugging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyVmMonitor 的目标很单纯:
成为最好的 Python 程序分析途径&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2w7h7f/how_is_the_demand_for_python/"&gt;在家/自由职业 Python 开发者需要什么?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;job market&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;引发自 reddit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fwierzbicki.blogspot.com/2015/02/jython-27-beta4-released.html"&gt;Jython 2.7 beta4 发布!&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;非常感谢 Amobee 的赞助,
令这个版本爽快的发布了!&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/krisfields/django-baker"&gt;django-baker&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;68 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django Baker 想助你加速项目的启动和运行.
嘦给定一个或一组项目名称,
Baker 就能自动生成 视图/表单/url/管理/模板...
所有生成文件都是 pep-8 兼容的.
(当然有几个规则是不同意的...比如说,最大行长)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bollwyvl/nosebook"&gt;nosebook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;39 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IPython 3 notebooks 的插件,
自动探知 nose 测试案例.
协助你确保文档/代码一致性,
并支持多格式文档以及测试套件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AlessandroZ/LaZagne"&gt;LaZagne&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;38 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LaZagne 是开源密码挽救工具,
通过各种手法(明文,API,定制算法...)
为本地软件找回你忘记的口令.
已经支持最常用软件,此刻在 windows 12 以及 linux 平台上可 挽救 22款软件的口令.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="lazagne" src="https://github.com/AlessandroZ/LaZagne/raw/master/pictures/lazagne.png" /&gt;&lt;/p&gt;
&lt;p&gt;细思恐极...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jbowen7/carrot"&gt;carrot&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 Django 打造的 芹菜 替代品.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mmerickel/pyramid_services"&gt;pyramid_services&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pyramid 的服层.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/davisfreeman1015/SocialAuthDjangoTutorial"&gt;SocialAuthDjangoTutorial&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;适合初学者的 Django SNS 认证教程,
将逐一教授如何
从你的应用中 注册/登录 
facebook,titter, google.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mmetince/captchasec"&gt;captchasec&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Captchasec 是验证码测试器.
使用 de-captcher.com 作为 OCR 服务后背.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bartvm/fuel"&gt;fuel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对机械学习的流水线框架.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/motherapp/sqlite_sql_parser"&gt;sqlite_sql_parser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;脚本能从 sqlite3 .dump 文件中导出兼容 MySQL 的 SQL 文件.&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://github.com/SaiWebApps/StockWatcherAPI"&gt;StockWatcherAPI&lt;/a&gt;
    - 2 Stars, 0 Fork&lt;/p&gt;
&lt;p&gt;通过金融/头条新闻等等渠道,为用户综合指定股票的信息.
通过这个接口,
提交股票编号,
返回一个标准 Py 字典,包含所有相关财务数据.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="PyCon Asia-Pacific 2015" src="http://zoomq.qiniudn.com/CPyUG/PyCon2015China/pycon-apac2015-logo.png" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycontw.blogspot.tw/2015/02/pycon-asia-pacific-2015-in-taiwan-save.html"&gt;亚太Py大会 6-5~7 在台北举行!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://tw.pycon.org/2015apac/en/call-for-proposals/"&gt;PyCon APAC/Taiwan 2015 - Call for Proposals&lt;/a&gt; 议题召集已经释放,想去宝岛体验社区交流的,可以下手了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个靠谱的微信群引发的: &lt;a href="http://wiki.zoomquiet.io/pythonic/MinimalistProgramStart#_5"&gt;极简编程导念 | Zoom.Quiet Personal Static Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;工作&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cheetahmobile/CMBM/wiki/BmGzHr"&gt;猎豹广州团队急召&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来自 &lt;a href="http://www.cmcm.com/zh-cn/cm-backup/"&gt;猎豹移动 - 全球最大的移动工具开发商&lt;/a&gt; ...&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150304 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150228 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 21</title><link href="http://weekly.pychina.org/importpython/importpython-21.html" rel="alternate"></link><published>2015-02-13T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-02-13:importpython/importpython-21.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/21/"&gt;Import Python Weekly Newsletter - Issue No 21&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.ionelmc.ro/2015/02/09/understanding-python-metaclasses/"&gt;Python metaclasses 理解&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;元类一直是 Py 中很有争议的话题,
很多用户在着意避免使用.
作者认为, 这很大程度上是因为其属性太过任性不好解释定位规则和流程.
其实,你嘦理解几个关键概念就可以上手的.
嘦能运用元类,
就能完成更好的接口.你值得尝试.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blaag.haard.se/PyCon-Sweden-Call-For-Proposals---Less-Than-a-Week-Left"&gt;PyCon Sweden 的议题征集只余一周了&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pycon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上次 PyCon 瑞典非常成功,
今年能更好.
议题征集将开放到 2.16 号,
会场迁移到 斯德哥尔摩市中心滨水区的 Hilton Slussen 大酒店,
日期定在梦幻般美好的春天,
5月12-13号,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/110542266858"&gt;你的 Django 故事: 遇到 Emily Manders&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,interview&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Emily 进入 web 开发前,是 PM 以及 UX,
她设计过临床的 IVR 试验系统,
教授过 Py 初学者,
出席过 CHI,
领导过精益用户研讨会,
调研了日本的 CAD 用户....
目前专注为 Django 提供国际化模板.
并为 Django 文档维护在作贡献.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arunrocks.com/django-design-patterns-and-best-practices-book-coming-soon/"&gt;Django 设计模式及最佳实践 - 好书来也&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有大事儿哪,
在上次 PyCon 有提及,
题为 "Django 设计模式及最佳实践" 的书,
已完成首校,将在三月上市,
可以先在这儿预订.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.toptal.com/django/installing-django-on-iis-a-step-by-step-tutorial"&gt;在 IIS 上安装 Django: 手把手教程&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽然 Django 广泛运行在 Liunx 平台上,
并没有什么机会必须跑在 IIS 下.
不过, Toptal 工程师 Ivan Voras 发布了怎么在 IIS 上部署 Django 的详细教程,
给 M$ 的真爱们.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://code.activestate.com/recipes/579019-python-ast-to-xml/"&gt;转换 Python AST 到 XML ( Code Snippet )&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;转换 Python AST 到 XML 文档,
以便其它语言使用.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;AST ~ 抽象语法树(abstract syntax tree), 
其实就是一个语言语法的规则描述,
有了 Py 的 AST, 意味着我们可以用其它语言来理解 Py 脚本,
并用原生语言环境来最终运行.&lt;/p&gt;
&lt;p&gt;PS:&lt;/p&gt;
&lt;p&gt;代码片段来自 activestate.com 的 recipes 仓库,
这条已经是第 579019 个了!&lt;/p&gt;
&lt;p&gt;PPS:&lt;/p&gt;
&lt;p&gt;这个 AST 的输出,完全没有第三方依赖,
使用 Py 内建模块就完成了,
这也是 为什么有 PyPy 项目的动因.
)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Eyepea/API-Hour"&gt;API-Hour&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;API-Hour 是种轻易守护进程框架.
专注建立能长期稳定运行的髙响应/简单/强力 守护进程.
其中 API-Hour Starter Kit (Cookiecutter) 为你的服务创建 HTTP 守护.
通过 API-Hour 你可以快速将同步 IO 的服务,
变成多守护进程运行, 为生产环境上线作好准备.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
在 CPyUG 列表,最近有一个线索讨论: &lt;code&gt;Py是否能开发7x24小时运行的守护服务?&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这类 daemon 框架很好的回答了这类疑问.
嗯啍, &lt;code&gt;눈_눈_&lt;/code&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mardix/deployapp"&gt;deployapp&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Deployapp 用来在 virtualenv 中部署多个 Py 网站/应用.
其实也支持你来部署 PHP/HTML 应用,
并通过 Supervisor 来调度.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lukedmor/ghmarkdown"&gt;ghmarkdown&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对 GitHub-flavored markdown 的完全命令行工具.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="ghmarkdown live show" src="https://camo.githubusercontent.com/0d0e0635dc5c3aca3d9f9c23c8a3dce0a1a33111/687474703a2f2f692e696d6775722e636f6d2f57554357704f4d2e676966" /&gt;&lt;/p&gt;
&lt;p&gt;可以理解为单文件静态网站生成器.
活的.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shbhrsaha/dictaphone"&gt;dictaphone&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可随时断/续的命令行录音工具.&lt;/p&gt;
&lt;p&gt;-&lt;a href="https://github.com/vdmitriyev/services-to-wordcloud"&gt;services-to-wordcloud&lt;/a&gt;
    - 6 Stars, 7 Fork&lt;/p&gt;
&lt;p&gt;专注的小工具,
爬数据分析并组织为 单词云.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/raulcd/meteora"&gt;meteora&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Py 完成的 web 应用性测试工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/miguelgrinberg/two-factor-auth-flask"&gt;two-factor-auth-flask&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文章 "用 Flask 进行双步身份验证"
的实验代码.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/federicotdn/python-wikiquotes"&gt;python-wikiquotes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检索任何 Wikiquotes 页面.&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jianshu.com/p/b2f77285266c?comment=159685#comment-159685"&gt;小米运维—互联网企业级监控系统实践 - 简书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;哗! go+py 当前最时尚的组合!
管理端同时提供了 php/node 版本!
真心用心了.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dongweiming.github.io/blog/archives/ji-jiang-zai-bpugfen-xiang/"&gt;分享ipython notebook - 小明明s à domicile&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;BPUG 的小伙伴, 深入折腾了 IPython notebook 爽到飞溅出自个儿的教材来
值得学习!
当然的视频在墙外.
)&lt;/p&gt;
&lt;h1 id="_3"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150213 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150213 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 20</title><link href="http://weekly.pychina.org/importpython/importpython-20.html" rel="alternate"></link><published>2015-02-06T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-02-06:importpython/importpython-20.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/20/"&gt;Import Python Weekly Newsletter - Issue No 20&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangotricks.blogspot.com/2015/01/performance-bottlenecks-in-django-views.html"&gt;Django 技巧: 如何找到视图的性能瓶颈?&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一旦有长期运行的 Django 项目,
就得开始持续的性能优化了,
经验是先定位瓶颈, 
用更加地道的代码替换,
然后用 DB/缓存/其它技术来消解之.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://ipython.org/ipython-doc/dev/whatsnew/version3.html#release-3-0"&gt;IPython 2.4 以及 IPython 3.0b1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.X 将是 IPython 最后一个独立版本系列,
未来专注和语言无关的组件升级
(notebook, qtconsole, ..)
由名为 &lt;code&gt;Jupyter&lt;/code&gt; 的全新项目统领.
而 Python 相关的
(交互 Shell, 内核, 并发...)
还在 IPython 下持续&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.endpoint.com/2015/01/a-few-postgresql-tricks.html"&gt;PostgreSQL 技巧集&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;postgres&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺们刚刚遇到了点有趣的状况,
并用靠谱的技巧摆平了,
自然得分享出来.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
只有两条...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.monkeylearn.com/kimono-monkeylearn-sentiment-analysis-with-machine-learning-and-web-scraped-data/"&gt;用 Python 通过抓取网页数据用机械学习来进行情感分析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas,machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Kimono Labs, 对分布式结构数据,
以 MonkeyLearn 提供的机械学习能力,
将数据转化为概念结论.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kimono 是智能 web 爬虫,将网站数据变成 API 来调用
MonkeyLearn 是个平台,专注从文本中挖掘相关数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheWellfireInteractiveBlog/~3/kpJQuyT_Dyw/"&gt;如何使用 Django 的 Proxy Models&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;proxy 模块其实是 Django 中最关键的功能了, 
但是,关注不多?!
作者分享了如何不用变更 DB 就获得干净的接口数据.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/dGvUHnM1kK8/django-girls-warsaw-carrot-coding.html"&gt;Django Girls 华沙编程工作坊&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PSF 支持的工作坊,
为 华沙的 Django Girls 活动捐助了 1千刀.
虽然不多, 但是能产生足够的影响.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://wingware.blogspot.com/2015/01/wing-ide-51-released.html"&gt;Wing IDE 5.1 发布&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;new release&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wingware 发布 Wing IDE 5.1 版本!
作为一种跨平台全部功能 IDE,
包含 vi/emacs/VS 键绑定,
自动完成, 调用提示, 上下文敏感编辑器,
跳至定义, 使用定位, 重构....
以及版本控制/单元测试/内置搜索/项目管理.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
很久没有听到这位的消息了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.syncano.com/advanced-concepts-flask/"&gt;flask 的先进理念&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A lot of the concepts we mention in this article can be found in Armin Ronacher's presentation on advanced Flask patterns. Mr.Ronacher did great job enumerating the concepts. Advanced Flask concepts are used to build applications that scale, so let's talk a little bit about what scaling an application means.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
参考 &lt;a href="http://blog.zhgdg.org/2014-08/et-hoa9-summary/"&gt;HOA.9 LitePyCon | GDG Livin ZhuHai Life;-)&lt;/a&gt;  赖总 "python web dev 的困惑与突破" 
就是分享的这方面的成果呢.
不应该拼框架,
而应该是一个可以产生次级市场的杀手级运行环境.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.python-course.eu/python3_memoization.php"&gt;Python &amp;amp; Memoization&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;core python&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Memoization 可以由程序猿编程实现,
但是,有的编程语言,比如 Python 就任性的内置了这种能力!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;...细思恐极, 首次知道这一老概念
&lt;a href="http://en.wikipedia.org/wiki/Memoization"&gt;Memoization - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单说就是 沈游侠惯用的技巧,
将髙频使用的函式,干脆将执行态压入数据对象中,
以便不用初始化就能使用.&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/109880858623/your-django-story-meet-magdalena-noffke"&gt;你的 Django 故事: 遇见 Magdalena Noffke&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Magdalena 是位柏林的 Python web 程序媛,
她对开放数据,数据可视化,
以及公民科技很有兴趣,
在大学里,她就开始使用 Python 了.
所以开发 Web 应用时自然想找个基于 Python 的,
于是选择了 Django.&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/regebro/supporting-python-3"&gt;supporting-python-3&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;149 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又来一个, 指点你怎么转向 Py3 的书.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lukasschwab/stackit"&gt;stackit&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;100 Stars, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;智能 Stack Overflow 问题查询
的 CLI 工具!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="stackit" src="https://camo.githubusercontent.com/ed0b4a52cad6a555e8088ae12d964e7d9947e8e8/687474703a2f2f692e67697068792e636f6d2f33726758424132716f416177483662416a4b2e676966" /&gt;&lt;/p&gt;
&lt;p&gt;程序猿只要 CLIL.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bintoro/overloading.py"&gt;overloading.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Py3 中对函式进行重载.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/klen/muffin"&gt;muffin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Muffin -- 基于 Asyncio 协议桟的又一个 web 框架
(&lt;code&gt;可惜还处于早期状态&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bcho/donkey"&gt;donkey&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cron 样的简洁工具库,
用来定期执行任务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jgeskens/django-tinyschedule"&gt;django-tinyschedule&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Django 实现的进行日程管理的小应用&lt;/p&gt;
&lt;h2 id="dama"&gt;DAMA&lt;/h2&gt;
&lt;p&gt;(&lt;code&gt;大妈私人无责任播报&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.ch-linghu.me/article/idiomatic/handout_cn.html"&gt;像Python专家一样编程: 道地的Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;精译自: &lt;a href="http://python.net/~goodger/projects/pycon/2007/idiomatic/handout.html"&gt;Code Like a Pythonista: Idiomatic Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大妈收藏了有4年多了,一直想翻译的,
结果还是给老行者给翻译了,,,
严正推荐!&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;h1 id="_3"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150206 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150206 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 19</title><link href="http://weekly.pychina.org/importpython/importpython-19.html" rel="alternate"></link><published>2015-01-31T17:07:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-01-31:importpython/importpython-19.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/19/"&gt;Import Python Weekly Newsletter - Issue No 19&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://codefisher.org/catch/blog/2015/01/27/python-tips-tricks-and-idioms/"&gt;Python 技巧和行话&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐的原则, 部分是提醒自个儿要用,
另外原因就是, 的确已经包含了自个儿知道的所有靠谱技巧&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
蠎周刊也曰了.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.caktusgroup.com/blog/2015/01/26/were-launching-django-code-school-astro-code-school/"&gt;我们推出了 Django 代码学校: Astro Code School&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 DjangoCon 和 PyCon 都讨论过,
如何更好的解决社会社会上对高质量 Django 工程师持续增长的要求?&lt;/p&gt;
&lt;p&gt;推出官方的正式学院!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://maryrosecook.com/blog/post/a-practical-introduction-to-functional-programming"&gt;函式编程的实用介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 来进行超赞的函式编程说明,&lt;/p&gt;
&lt;p&gt;是也乎. 蠎周刊 也曰了 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.caktusgroup.com/blog/2015/01/27/Django-Logging-Configuration-logging_config-default-settings-logger/"&gt;Django 日志配置: 默认配置是如何误导你的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;日志数据的处理一向是种折磨;
此文可以为你下一个 Django 应用找到最好的配置,
提示: 别用默认的.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
蠎周刊 也曰了.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/109195409088"&gt;你的 Django 故事: 遇见 Claudia Vicol&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Claudia 供职于  Marktplaats.nl ,
总部设在荷兰阿姆斯特丹的 Marktplaats.nl
当荷兰最大的分类广告网站;
隶属 eBay 公告集团的.
Claudia 当前用 Scala 和 JAVA 编程,
用 Python 进行接口测试,
以及进行开发工具开发.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/blog/python/the-most-diabolical-python-antipattern#.VMesPZO7mKs.reddit"&gt;最恶毒的 Python 反模式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总是有很多方式来编写恶意代码.
但是,在 Python 中,只有一种最恶毒.
我们两位工程师折腾很久也没彻底解决一个神秘的 Unicode 漏洞问题,
当然,最终幸运的发现了方法.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://developer.rackspace.com/blog/how-did-we-serve-more-than-20000-ipython-notebooks-for-nature"&gt;我们是如何为 2万 普通读者提供 IPython notebook 服务的?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tmpnb 是种全新的 notebook 派生服务,
以 Docker 为后端,
为每个用户分配唯一路径提价沙箱空间来运行 notebook 镜像.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/TheGlowingPython/~3/Rue9fwHU0Ns/forecasting-beer-consumption-with.html"&gt;用 sklearn 预测啤酒销售趋势&lt;/a&gt;
machine learning&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此文展示了如何基于 sklearn 的线性回归模式实现简单的预测模型,
基于思想是过去的数据是未来预测的最好指标.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/gijMwWmDsuY/2015-psf-news-blog-post-3-psf-brochure.html"&gt;PSF 手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;早在 2011 PSF 就发布了手册,
虽然 Python 已经是门成熟且应用广泛的语言,
但是,在科技界之外知之甚少,
为解决这一严重阻碍 Python 发布的问题,
宣传手册,从此诞生.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.defuze.org/archives/331-a-more-concrete-example-of-a-complete-web-application-with-cherrypy-postgresql-and-haproxy.html"&gt;在 Docker 容器中一个完备的 web 应用,包含 CherryPy, PostgreSQL 和 haproxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者介绍了一个简单而完备的 web 应用,
两个服务+数据库+负载均衡.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.fedoraku.info/2015/01/import-python-indonesia-edisi-perdana/"&gt;来自 Bagus Aji Santoso 的印尼版 Import Python 周刊&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bagus Aji Santoso, 当前是西 JAVA 万隆市 UPI 的学生 (印尼教育大学计算机系),
在他的 blog 中开始了周刊的翻译.
当前 第18期, 是他的第一期.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
很哈拉呢...印尼的官方语言就是 E 文哪.)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/juanpabloaj/pip-init"&gt;pip-init&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;20 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用以生成简单的 setup.py 文件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Wiredcraft/docker-builder"&gt;docker-builder&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker 构建脚本 - 建立容器层次&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pudo/normality"&gt;normality&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 文本规范化库,
ad-hoc 文本分析的应用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pedrovanzella/Flask-DODDNS"&gt;Flask-DODDNS&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Digital Ocean V2 版 API 基础上动态 DNS 的Flask 实现&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ustun/django-react-integration"&gt;django-react-integration&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个&lt;br /&gt;
django-react 展示实现项目&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yjmade/django-pgjsonb"&gt;django-pgjsonb&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 的 Postgres JSONB 字段支持.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/gtaylor/python-gotalk"&gt;python-gotalk&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 实现的 Gotalk&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="什么是Gotalk" src="https://github.com/rsms/gotalk/raw/master/doc/gotalk-comic.png" /&gt;&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/miguelgrinberg/flask-live-coding-webcast"&gt;flask-live-coding-webcast&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仓库包含作者在 &lt;code&gt;O'Reilly&lt;/code&gt; 网络直播节目: "写个web应用"
中涉及的所有代码.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thekindlyone/fbadmin"&gt;fbadmin&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 selenium 和 phantomjs 完成的 facebook 群管理工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jakevdp/gatspy"&gt;gatspy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Py 完成的天文时序生成工具&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150131 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150131 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 18</title><link href="http://weekly.pychina.org/importpython/importpython-18.html" rel="alternate"></link><published>2015-01-23T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-01-23:importpython/importpython-18.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/18/"&gt;Import Python Weekly Newsletter - Issue No 18&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://impythonist.wordpress.com/2015/01/18/implementing-activity-streams-in-django-web-framework/"&gt;在 Django 框架中实现活动流&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收集 Twitter 中 website.Like 的所有内容,
展示为类似 Gitlab 仪表盘或 LinkedIn 中的活动流.
一个用户专用一个流,
此文详细描述了怎么折腾的.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/events/cl9lgl8bkpqabdgbnpdp0eko0h4"&gt;Python 性能剖析 - Google HOA 公告&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1/22 下午,在 Google Hangout 空中视频中,
工程师分析了过往几年间 Python 的各种性能问题,
并在视频结束部分进行了QA.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://intermediatepythonista.com/the-function"&gt;蠎人中阶技法: 函式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的函式表现为命名/匿名/表达式.
函式是 Python 中的第一公民,
这意味着其实没有什么可以限制函式的使用.
本质上, 函式完全可以表现的和任何值对象一样,
比如 字串/数字.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/jan/16/django-18-alpha-1-released/"&gt;Django 1.8 alpha 1 发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同以往, 都是在 beta 后才发布,
alpha 里程碑的版本发布,标志着又一个完整的特性冻结了.
此版本更加接近最终发布版.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://eli.thegreenplace.net/2015/the-scope-of-index-variables-in-pythons-for-loops/"&gt;Python 循环中的索引值域&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺直接囧掉的, 试想以下函式作了什么?&lt;/p&gt;
&lt;p&gt;def foo(lst): 
    a = 0 
    for i in lst: 
        a += i 
    b = 1 
    for t in lst: 
        b *= i 
    return a, b&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
血淋淋的挖入运行时的汇编代码哪..
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nedbatchelder.com//blog/201501/coveragepy_for_django_templates.html"&gt;Coverage.py 更好的 Django 模板&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过长期的折腾,
终于 coverage.py 支持了 Django 的模板.
通过插件,
用 coverage.py 实现了可用的 Django 模板.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2t541k/retiring_python_as_a_teaching_language/"&gt;放弃 Python 作为教学语言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;论及为什么 Javascript 是种更好的教学语言?
并分析作为教学语言时, Python 有什么缺点.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
又一位被 pip 桑了心的老师,
而且学生们的第一要求是写个游戏...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tonysyu.github.io/pypath-magic-v03.html"&gt;用 &lt;code&gt;pypath_magic&lt;/code&gt; 来作为你的 Python 环境路径呵 (v0.3)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pypath-magic 为模块和包配置路径给出了一个简洁的管理界面.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
必然的, CLI 的 ;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pbpython.com/visualization-tools-1.html"&gt;Python 可视化工具纵览&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Python 世界,对于可视化, 当然也有很多选择.
这对选择困难症患者而言太痛苦了!
所以,作者进行了充分的对比.
用各种框架完成个简单的柱图来分析.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
其实使用面向浏览器的 JS 可视化框架也一样的
;-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://realpython.com/learn/python-first-steps/"&gt;进入 Python 第一步&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Derrick 为各种 Python 社区回答了这一月经帖.
认真解答了可能所有行者被问到次数最多的问题:
"如何开始使用 Python?"
他和 Michael Herman 基于真实的 Python 开发团队的经历,
给出了答案.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
简单的说:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;珍惜生命
远离M$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;另外,可以参考: &lt;a href="http://wiki.zoomquiet.io/pythonic/MinimalistPyStart"&gt;极简 Python 上手导念 | Zoom.Quiet Personal Static Wiki&lt;/a&gt;
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dev.stephendiehl.com/numpile/"&gt;来写 LLVM 专用 Python 吧!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目标是完成一个 Numba 样的 Python 编译器.
不完备,但是,演示出了如何针对 LLVM 进行思考,
可以解析相当于 Python 语言子集的自制 DSL ,
并和现行和洕计算库(比如 NumPy/SciPy)兼容!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://weeklypythonkr.tumblr.com/"&gt;ImportPython Weekly 宇宙国版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;哗!
Ayun Park 发布了韩语版本的
蠎加载周刊!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
大妈独自坚持了8周,当前只有 2~10 期没有翻译,
倡议大家共同快速完成,
通过: &lt;a href="https://gitcafe.com/CPyUG/weekly/pull?state=all"&gt;合并请求 · CPyUG/weekly - GitCafe&lt;/a&gt;
也好向官方申请中文版本的链接过来
!-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@rodkey/deploying-a-flask-application-on-aws-a72daba6bb80"&gt;在 AWS 上部署 Flask 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;端到端的实案,
用了 Amazon 的 Elastic Beanstalk 和 RDS. &lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/breenmachine/httpscreenshot"&gt;httpscreenshot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 7 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTPScreenshot 能高速抓取大量网络的截图.
工具目标是快准狠, 并能相互 oppose.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mapio/prettytable-mirror"&gt;prettytable-mirror&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;prettytable 仓库的镜像 (on Google Code)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bfontaine/freesms"&gt;freesms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;免费的短信推送模块,
基于 &lt;code&gt;Free Mobile SMS API&lt;/code&gt;
当然,你得先注册有关服务.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/narenaryan/django-activity-stream-tutorial"&gt;django-activity-stream-tutorial&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简单的教程,
却能极大的提升我们使用 Django 仪表盘的功力&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/galarant/jonahnator"&gt;jonahnator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jonah Peretti 式语录发生器.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
用 bower 玩了很多前端技巧来发布.
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lepture/flask-alchemy"&gt;flask-alchemy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正如其名,
基于 SQLAlchemy 的 declarative_base,
专门为 Flask 开发,
对 主-从 东西方的数据库集群给予强力支持!&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150123 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150123 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 17</title><link href="http://weekly.pychina.org/importpython/importpython-17.html" rel="alternate"></link><published>2015-01-16T17:17:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-01-16:importpython/importpython-17.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原文: &lt;a href="http://importpython.com/newsletter/no/17/"&gt;Import Python Weekly Newsletter - Issue No 17&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2015/jan/13/security/"&gt;Django 安全发布.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天 Django 团队释放出多个版本
-- Django 1.4.16 , 1.6.10, 1.7.3
-- 作为安全版本发布在 PyPI ,以及专用的下载页面.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonSoftwareFoundationNews/~3/iRT_FYnRNbs/python-events-calendars-please-submit.html"&gt;Python 活动日历 - 敬请关注你的 2015 年活动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PSF 目前公布了两种日历:&lt;/p&gt;
&lt;p&gt;Python 活动日历 - 包含各种偏重与 Python 以及相关技术的大会和大型活动.&lt;/p&gt;
&lt;p&gt;Python 用户组日历 - 包含各种社区成员活动以及其它小型活动.&lt;/p&gt;
&lt;p&gt;值得关注!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.dscpl.com.au/2015/01/important-modwsgi-information-about.html"&gt;即将发布的 Apache httpd 中有关 mod_wsgi 的解读.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你在 将发布的 Apache httpd 2.4.11 中使用
&lt;code&gt;mod_wsgi&lt;/code&gt; 4.4.0-4.4.5 版本,
可能引发崩溃,
这里分析了为什么.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2sed0g/porting_to_python_3_book_campaign/"&gt;移植到 Python 3 图书战役&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们都爱 Python 3.
&lt;code&gt;迁移到 Python 3&lt;/code&gt;
第三版,
是本好书,
这有个活动,得到了预览版,
正在招募贡献者来改进,
你,值得掺合!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2s9203/summary_of_matplotlib_backends_in_ipython/"&gt;介绍用 matplotlib 作为 ipython notebook 的后端和 FuncAnimation 完成图表动画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 IPython notebook 中,
以 matplotlib 为后端进行图表展示时,有三种模式:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;简单图表
FuncAnimation 动画
交互式 IPython 图表部件
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tmarkovich.com/2015/01/11/teaching-quantum-chemistry-with-ipython/"&gt;用 iPython Notebooks 教授量子化学&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们的学生,
掌握足够的 Python 知识后,
能写出足够复杂的分子式, 
并代入自己有兴趣的问题中, 解释结论.
这真是个伟大的成果!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/PythonInsider/~3/eb3JkcqpXBQ/ironpython-275-released.html"&gt;IronPython 2.7.5 发布.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IronPython 2.7.5 终于发布了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://doodle.com/ngdeesgbr6dcx3f5"&gt;2015 Python FOSDEM Beer 和 餐厅活动&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Aperos Python Belgium" 将于1.31 号 星期6 布鲁塞尔 举行.
在 Delirium 咖啡一层,
Impasse De La Fidélité 4, B-1000 Brussels.
如果你是 &lt;code&gt;FOSDEM&lt;/code&gt; 成员,
可以在  Python devroom (H.1301 房间) 
闪电演讲之后
见到我们.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/107597215478"&gt;你的 Django 故事: 遇见 Carol Willing&lt;/a&gt;
interview&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Carol 目前是类似 OpenHatch 的开源项目的的积极贡献者,
也是 PyLadies圣地亚哥 的协办人,
以及硬件和软件的独立开发人.
同时喜爱 编织艺术/音乐/自然与基于Arduino的可携带智能硬件.
她正在主持一个开放硬件项目:
帮助家庭,协同富有同情心的支者,
照顾 阿尔茨海默氏症 患者.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.coursera.org/course/pythonlearn"&gt;所有人的编程课 (Python) - MOOC in Coursera.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的 Coursera 课程.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2sbs39/the_winding_path_toward_python_proficiency/"&gt;Python 曲径通幽.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于初学者,
好象有很多道路来学习,
有的通过大学课程,
有的通过参加训练营,
有的死看书.
但是,通常都迷失在其中,丧失耐心.
这里给出相对合理的,可实现的学习路径图来.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.daveoncode.com/2013/09/23/effective-tdd-tricks-to-speed-up-django-tests-up-to-10x-faster/"&gt;实效 TDD: 加速 Django 测试 (提速10倍!)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此文作者分享的各种技术,能令 Django 测试运行变得非常快!
(有个测试案例包含250个用例,~5秒跑完, 而不是以往的 50 秒,即加速了10倍!-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.calazan.com/adding-responsive-tables-no-scrollbars-to-your-django-app-with-datatables/#.VLXnvK3oNSc.reddit"&gt;用 DataTables 向你的 Django 应用中追加响应式表格(非卷动).&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DataTables 是个 jQuery 表格插件,
有很多特性.
将之用在 Django 应用中(GlucoseTracker),
很不错,
但是,对于手机浏览时,很难受,
所以,作者将之 响应化了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://djangogirls.gitbooks.io/djangogirls-tutorial/"&gt;Django Girl 教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此书是有关如何开展一次 &lt;code&gt;Django Grils&lt;/code&gt; 活动的教程.
男子汉们应该看看.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cdn2.carlcheo.com/wp-content/uploads/2014/12/which-programming-language-should-i-learn-first-infographic.png"&gt;(信息图) 应该先学哪种语言. Python 正好是最值得的一个.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Infographics PNG.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nafiulis.me/making-a-static-blog-with-pelican.html"&gt;如何基于 Pelican 发布 blog - 深入教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pelican 支持你生成静态 blog.
作为静态网站,
所有页面是用 blog 生成器生成的.
这意味着你得将整个网站上传到服务器.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2s9qit/speedup_pip_install/"&gt;加速 &lt;code&gt;pip install&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 Windows 开发者能用 pip&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/karan/joe"&gt;joe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;146 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; 的 CLI 工具,
为你的情况自动生成神奇的 &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/HelloZeroNet/ZeroNet"&gt;ZeroNet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;112 Stars, 12 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 Bitcoin crypto 和 BitTorrent 网络
进行分布式 web 网站发布.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="ZeroNet" src="https://camo.githubusercontent.com/6bfe0288417433decc2c126bfa21c64b7ae53fb3/687474703a2f2f692e696d6775722e636f6d2f51615a6855436b2e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;这是不再需要 DNS 发布网站的节奏哪,,,&lt;/p&gt;
&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nstamplecoskie/KeyboardCAD"&gt;KeyboardCAD&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专门用来生成 FreeCAD 文件,进行键盘定制的工具,&lt;/p&gt;
&lt;p&gt;http://www.keyboard-layout-editor.com/&lt;/p&gt;
&lt;p&gt;可以根据此文件制造任意键盘&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/thomashuang/solo"&gt;solo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于 Gevent &amp;amp; Webob &amp;amp; Routes 的又一个 web 框架&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
国货!
&lt;img alt="avatars0" src="https://avatars0.githubusercontent.com/u/1823391?v=3&amp;amp;s=460" /&gt;&lt;/p&gt;
&lt;p&gt;同时也有同名的国货:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/kuangyh/solo"&gt;kuangyh/solo&lt;/a&gt;
)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/thomashuang/dbpy"&gt;dbpy&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;灵感来自 webpy 和 drupal,
通用数据库抽象层,
可以良好和配合 tornado 或 其它 web 框架,
值得体验!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;国货, 推荐二连发!
刚刚在 CPyUG 列表中释放,
就翻译为 E 文被推荐了!
事实反复教育我们,
想让更多的靠谱程序猿来用自个儿的作品,
给 E 文文档吧!
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wbond/vat_moss-python"&gt;vat_moss-python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;挪威增值税数字服务处理
的 Python 版本支持库,
支持进行 VAT MOSS 的核算,
给出税号,就完成自动化汇率/发票税率, 以及货币的计算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/clowwindy/iOS-Python-Project"&gt;iOS-Python-Project&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 开发 iOS 应用的实例.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
作者是 SS 团队成员,
目测也是天朝人...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edouardklein/unix2web"&gt;unix2web&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 web 页面上进行各种 UNIX 的过滤操作,
比如,从 .doc 生成 .pdf&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/edavis/pandoc-opml"&gt;pandoc-opml&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pandoc-opml 
能基于 pandoc
从 Markdown 中生成 OPML&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150116 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150116 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时 7 分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 16</title><link href="http://weekly.pychina.org/importpython/importpython-16.html" rel="alternate"></link><published>2015-01-09T20:20:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-01-09:importpython/importpython-16.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/210" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/newsletter/no/16/"&gt;Import Python Weekly Newsletter - Issue No 16&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.djangogirls.org/post/106894578478"&gt;你的 Django 故事: 遇见 Ana Krivokapi?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ann 是 Red Hat 的工程师,
也是 &lt;code&gt;@OpenStack Horizon&lt;/code&gt; 核心贡献者,
自行车手以及魔方教练.
是在 柏林首次掺合 &lt;code&gt;Django Girls&lt;/code&gt; ,
&lt;code&gt;@infraredgirl&lt;/code&gt; 可以发推给她.
在业余时间折腾 Django,
不过,下两个项目已经准备真正上 Django 了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://falconframework.org/"&gt;Falcon - 极简 Python WSGI 框架&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Falcon (&lt;code&gt;猎鹰&lt;/code&gt;) 遵从 REST 架构风格,
这意味着你可以将所有事物,
视为资源和状态的转换,并自然映射到 HTTP 元语上.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="silhouettes" src="file:///Users/zoomq/mnt/%E5%BF%AB%E7%9B%98/zScrapBook/zqPythonic/data/20140105010924/flight-silhouettes.gif" /&gt;&lt;/p&gt;
&lt;p&gt;旁的不说,这设计是用心了..
只是用 &lt;code&gt;Class&lt;/code&gt; 来组织用户代码就...
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pawelmhm.github.io/python/pandas/2015/01/01/python-job-analytics.html"&gt;用 Pandas 来分析 Python 职位市场&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作者新坑,
用 Pandas 结合就业市场的公开数据,
来分析 Python 方面的趋势.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
够 bigger,
但是和天朝无关...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/LincolnLoop/~3/xFT-Rzte1NU/"&gt;在你的 Django 项目中集成前端工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;类似  Grunt 和 Gulp
的前端工具越来越普及,
已经令前端代码不能再视作静态的了,
CSS/JS模块的预处理已经成为标配,
Browserify 甚至于 coffeescript 也在兴起,
在 &lt;code&gt;Lincoln Loop&lt;/code&gt;
我们就将 Gulp 结合到了 Django 中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/setting-up-elasticsearch-with-basic-auth-and-ssl-for-use-with-python/"&gt;配置 ElasticSearch 用 Python 使用基本 Auth 和 SSL &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;涉及 ElasticSearch 
如何使用自制签名,
完成互联网访问.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pycharm/~3/e73S5go3PNg/"&gt;PyCharm 发布 4.0.4 更新&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;随着 2015 第一周即将过去,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PyCharm 团队兴奋的发布了
PyCharm 4.0.4 build 139.1001 .
包含了很多改进:
IPython notebook 的集成
调试器
嵌入式本地终端
git/svn 的支持
类引用的反射
支持 Lettuce
CSS 支持&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;等等,我们关注的好物&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://slott-softwarearchitect.blogspot.com/2015/01/the-python-challenge.html"&gt;Python 挑战赛&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于 &lt;code&gt;Python Challenge&lt;/code&gt; 什么是重要的?
那就是不仅仅只 Python !
任何编程语言,都可以来挑战.
俺已经发现用 Pillow 能更好的解决问题 7和11,
俺肯定类似 PIL/Pillow 的工具包, 对任何语言都一样重要.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feeds.doughellmann.com/~r/DougHellmann/~3/XjEQZFVLnHg/virtualenvwrapper-4-3-2-enhancements-to-virtualenv.html"&gt;virtualenvwrapper 4.3.2 -- virtualenv 的增强&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;virtualenvwrapper 是 virtualenv 的一组扩展.
用以创建和清除虚拟环境,
来配合你的工程管理流程,
令你进行多项目开发时,不会引入依赖的冲突.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
大妈的体验是: 用 &lt;code&gt;pyenv&lt;/code&gt;
而且, &lt;code&gt;pyenv&lt;/code&gt; 也可以嵌入 virtualenvwrapper 命令的)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bugra.github.io/work/notes/2015-01-03/i-wish-i-knew-these-things-when-i-first-learned-python/"&gt;多期望学 Python 时就知道这些事儿&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有时,俺发现总是在问自己&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为毛俺总是不知道在 Python3 中可以这么简单的 "做" 这事儿?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每毎俺四处寻求方案时,
总能发现比之前知道的更加优雅/高效/无虫的代码,
这才只是开始,
慢慢的才进一步知道,要追求的是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可用/简单/可维护 的代码!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2015/01/pycon-2015-schedule-announced.html"&gt;PyCon 2015 议程释放!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyCon 2015 的日程已经可访问!&lt;/p&gt;
&lt;p&gt;教程的时间表已经上线好几周了,
还制作了海报反馈良好.
最重要的部分也已完成:
用5个房间调度好了 95 位讲者!&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sphinx-doc/sphinx"&gt;sphinx&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;29 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;没人不知道这模块吧!
官网: http://sphinx-doc.org/.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jsvine/markovify"&gt;markovify&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;21 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pythonic 的可扩展的 马尔可夫链发生器.
主要用以构建 Markov 模式的大型语料库,
生成随机的句子,
当然,理论上,可以用以其它应用.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fooying/3102"&gt;3102&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;域名/ip 
模糊测试工具
用来挖掘漏洞, http://www.fooying.com&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/szpytfire/django-api-tools"&gt;django-api-tools&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
前期 蠎周刊 已经报道过了.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/chilcote/edify"&gt;edify&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 OS X 系统管理员非常有用的脚本,
能存储和显示 CLI 参数的简短说明.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/nestordeharo/mysql-python-class"&gt;mysql-python-class&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个用来连接 MySQL 数据库的模块,
获得查询结果,
诸如: SELECT (一或多条), INSERT, UPDATE, DELETE.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rmuslimov/homeimages"&gt;homeimages&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 SD 卡中同步所有照片和视频&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jcomo/immut"&gt;immut&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个不可变对象库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bfontaine/k"&gt;k&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的枚举类型支持库.&lt;/p&gt;
&lt;p&gt;(`是也乎: 
有道是...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;名字起的好
项目活的了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这种单字母的项目名称,就是自绝于搜索引擎哪,无人知简直是必须的哪.
)&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150109 用时 51 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150109 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 15</title><link href="http://weekly.pychina.org/importpython/importpython-15.html" rel="alternate"></link><published>2015-01-03T15:15:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2015-01-03:importpython/importpython-15.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/newsletter/draft/15/"&gt;Issue 15&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/7df2176d1067ab71eb3f42d0fbf7b7ed3fe13dc7?source=www.airpair.com"&gt;Django vs Flask vs Pyramid: Python Web 框架选择&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎&lt;/code&gt;: 蠎周刊早已曰过)&lt;/p&gt;
&lt;p&gt;Ryan built three identical apps in Django, Flask and Pyramid to illustrate the strengths and weaknesses of each one of them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/0e1df236ae20aeaf23b11909aedcd615e814e954?source=pythonfasterway.uni.me"&gt;Python - 细微的性能提高&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些提高代码运行速度的建议.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/41d80d16a0509387d8161ecbd49fb7358efe7734?source=www.davidketcheson.info"&gt;用 MapMyFitness 和 Pandas 改进马拉松训练&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 iPhone 上的 MapMyFitness (MMF) 来追踪里程和速度,
通过 API Jason Sanford 完成了这一 Python 前端,
可以轻松的通过 Pandas 进行探索!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/94cce063476e459710067f28e90be9337981a031?source=ains.co"&gt;事儿不该介神奇 - Flask 和 @app.route - 第一部分&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Things which aren't magic", 
这一系列文章,通过分享流行开源软件的 API ,
来从源语言角度分析,为什么!
第一部分, 分析了 Flask 为毛出现了
&lt;code&gt;"@app.route()"&lt;/code&gt;
这种形式,以及显露函式的思考.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/31f8e37f28e6253d801a2597a3a3d526dc9572ba?source=ains.co"&gt;事儿不该介神奇 - Flask 和 @app.route - 第二部分&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二部分, 则调髙难度,
加入网址可变参数的能力支持,
在文章末尾我们将能支持预期的各种变化.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/5051ea34d27ce6168983eb101009c722292e2772?source=blog.djangogirls.org"&gt;你的 Django 故事: 遇见 Claire Reynaud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Claire 是位 iOS 和 Django 程序媛. 
她是法国 Saint Etienne 的自由职业者,
起初作为 JAVA 程序员在 Trango 工作,一个虚拟化办公公司.
后来进入了瑞士的 Epyx 公司,
在那里她遇见了 iOS 和 Django.
可以自行 flow 她 @ClaireReynaud&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/49f5f80db162ef146b57568825ee2a0d146330cd?source=blog.ionelmc.ro"&gt;可怕的选择: MySQL | ionel's codelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺现在大量使用 MySQL, 
才发现,俺得照顾令人惊讶事儿.
基于 Django 和 MySQL 5.5 的背景,
对比 PorstgreSQL 的体验,这实在是可怕的经历.
俺不得不进行的各种折腾,以便令 MySQL 的行为更像一个真正的数据库.
(当然,针对 Django)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/fda184262fc41e49f6f7f41f89c9c3b9d0457139?source=speedfulpanic.net"&gt;愉快的和 Python 一起玩函式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 实在是种非常任性的语言,
允许我们进行各种范型的开发,包含函数式编程.
和过程式编程不同,
函数式编程甚至于明文禁止改变一个共享状态,
必须显式的调用改变元素的函式...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/3d6fd7bb56134419e4351994191288523037d424?source=nodotcom.org"&gt;Python Twitter 教程 - 5 步实现通过 Python 发推&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一步步教会你使用 Python 完成脚本化的发推.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/9669baa0a90cb0329e220eb0f7a074edef826211?source=programmingcomputervision.com"&gt;用 Python 实现计算机视觉&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jan Erik Solem 的新书已经完成草稿:
"Programming Computer Vision with Python"
(截止 2012-3-12)以 创作共用许可发布.
注意: 此版本不包含最后的修订.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PCV&lt;/code&gt; 是基于此书发布的纯 Python 库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/ccf8cbe90aeecbc771a4594719bc10b203b640b7?source=tech.oyster.com"&gt;用 Python 的 &lt;strong&gt;slots&lt;/strong&gt; 在内存中保存 9G 数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认情况 Python 用字典来保存对象的实例属性,
但是,此对象在编译时,只有很少的几个固定属性,
当你创建一百万个对象时,就显的浪费内存了.
不过,实际上你可以告诉 Python 不用字典,
而只分配固定空间的属性集,
通过 &lt;code&gt;__slots__&lt;/code&gt; 来声明...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/aa75dac13c51e1e08fb9e990eac6dd216fac402b?source=www.reddit.com"&gt;PyBoxes 教程 / 游戏的物理驱动.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本的物理引擎模拟 风/液体/圆的抗锯齿绘制(用 GFXGraw)/ colors.Goals 控制等等,
描述类似 Pymunk 的物理库,
如何应用在 PyGame 中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/a5e05213b5e6467f92139cea2f6c4e9fe2301f2f?source=github.com"&gt;又一个 awesome Django 列表,包含应用/项目/资源.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Title says it all :)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/5227bf7f1cebfa5e6ce7f0d98736409f68072cdc?source=birdhouse.org"&gt;用 Angular.js 来展示 Django 用户消息&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django 的消息框架是个优雅的方案,
但是,俺从未使用它在 Django 网站上显示用户消息,
比如得芇 成功/失败/信息,
以便引导用户进一步操作.
直到...&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/24f1cc20b803aea58990a35553aadf61f615712c?source=github.com"&gt;relational&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;40 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQL-Alchemy 样儿更加人性化的 ORM&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/2935d9a0a3fe6ff15a1f12fdf7b52766eee2bf83?source=github.com"&gt;quicksafe&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;quicksafe 是个很小的脚本,
提供了一个 GUI 的文本编辑界面来管理加密的笔记.
并存储在脚本自身.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/287abd7c13defa7536e283c3efcb549b6a8e5a43?source=github.com"&gt;pollywog&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在正则表达式上将 Python 语法糖用起来,好味道!&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="camo" src="https://camo.githubusercontent.com/e31877f0c3809a9103c32aefc9b5cb1dcd110dd0/687474703a2f2f6d656469612e636861726c65736c65696665722e636f6d2f626c6f672f70686f746f732f70313431393832323431352e31392e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;logo 太任性了,和代码一样...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pollywog&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;
&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;raw_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Enter a URL: &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;simple_url_re&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;You entered a valid URL&amp;#39;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;That URL appears to be invalid.&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/410a68c5d593a23d3cd4d6f530258f994e024401?source=github.com"&gt;twizhoosh&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Twizhoosh 聪明的私人 twitter-bot,
纯 Python 写成,
主要用以改良可读性并快速增补功能.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/e2ec92bf31342b1776bd4673ad4b2844ba26250d?source=github.com"&gt;walrus&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个轻量的 Redis 工具.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/252e316b402a9e1efa23c5789a0c69bb89af82b8?source=github.com"&gt;django-descriptors&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Django 模型和字段中使用描述符来加强.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/cfd8240764b5ab5c8ac283709ee82c3ab1fa81d1?source=github.com"&gt;zeroless&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然也,又一个 ZeroMQ 的包装,
不同 pyzmq,
力求接近 C++ 的实现,
目标是分布式系统用的最爽!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/e1506bff755aaee5a37eb9a672bca275552243ff?source=github.com"&gt;python-taipei-metro&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Taipei MRT interchange route python library. Must see for our ImportPython Users from Taiwan.&lt;/p&gt;
&lt;p&gt;台北捷运转乘路线Python库!
必须有来自台湾的 ImportPython 亲们哪...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
先汗一个, 大陆的 Pythonista 不是不想作哪,
而是根本没有这种公共服务的接口,无从包装哪,
而且, &lt;code&gt;合法爱国&lt;/code&gt; 是铁律...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/042f32bf164fd9d7d725e12078547caa2d291893?source=github.com"&gt;Machine-Learning-Tasks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 实现的简单 KNN 算清, COS 相似度, Logistic 回归...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/ba297c3890dfa0dae235c54dd1dd13f92ac8f6a8?source=github.com"&gt;python-libshorttext&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LibShortText 是种高性能短消息分类器,
针对 标题/提问/句子...
脚本提供了一个简单的方式来安装此库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/eb422620428be6c4d2fab84d74da4a6a709e41e7?source=github.com"&gt;spotify-backup&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速导出你所有 Spotify 播放列表.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/538a9f11a9a25d3ae2915cd1133c25f9a72e14ad?source=github.com"&gt;GetUserAgent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;允许你从已知用户代理中随机抽取.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/f119f60ec5d740267a9ecfe6d25114d9b2752910?source=github.com"&gt;PyDictionary&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyDictionary 是兼容 Python 2/3 的字典库,
能翻译/同义/反义,
使用 Google 获得含义完成翻译,
通过 thesaurus.com 获得 同义/反义.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
废的,在天朝...)&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#BigData&lt;/code&gt; 相关工作,2015 哪儿找? IT PM 职位有 &lt;code&gt;#BigData&lt;/code&gt; 要求的 &lt;code&gt;#Python&lt;/code&gt; http://t.co/HRIs96E9k2 http://t.co/wmmyjm7qOv&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://twitter.com/kdnuggets/status/550377408814387200"&gt;@kdnuggets&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;国货&lt;/h1&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150104 用时 51 分钟完成快译.&lt;/li&gt;
&lt;li&gt;150103 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 14</title><link href="http://weekly.pychina.org/importpython/importpython-14.html" rel="alternate"></link><published>2014-12-27T18:18:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-12-27:importpython/importpython-14.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/newsletter/draft/14/"&gt;Issue 14&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/6b86e87342d1ffde10d78241b591332a6837c0ff?source=feedproxy.google.com"&gt;eBook 预览: Flask 框架Cookbook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;flask,book review&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Packt 出版社刚刚发送俺了一份复本,
是 Shalabh Aggarwal 写的 "Flask Framework Cookbook" 电子版,
值得关注.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/c3e8dde1e669b0aae197cf80042817d9eab78977?source=www.rkblog.rk.edu.pl"&gt;面向 Django web 程序猿的简要 Docker 容器介绍&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docker 是种能隔离应用运行的环境.
使用 Linux 容器可以将软件层从基础体系中分离出来.
不在依赖硬件虚拟环境,比如 Virtualbox.
Docker 能在帮助开发者完成 web 应用的开发和服务部署,
让作者展示怎么来的..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/7fd138567117c0a5aaa484e8431f2a5c10236e64?source=mike.tig.as"&gt;pdb - 在 Django 中进行 Python 调试.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django,pdb,debugging&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一个使用交互式调试环境来折腾你的应用的简要概述,
并提供了实例表述了最基本的调试情景,值得由此入门.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/608702fc4920934473e6f2cb97b8f3d749fe486e?source=blog.ionelmc.ro"&gt;在 M$ 中编译 Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;windows&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如何在 Windows 中通过 VS 的Python 扩展用 C++ 完成编译?
而且兼容 Py 2.x 和 3.x&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/8038e707fb1aa448f827c63537a2b6fa28d88745?source=www.gregreda.com"&gt;将 SQL 对 pandas 进行双向解析&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;pandas,sql&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当俺开始学习 pandas 时 (并从后台数据库的背景),
发现将 SQL 和 pandas 并列等价对比时,能加速理解,
重要的是,这种形式,适用俺的工工作流.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/fc186fe3cf9bf4a9838d5a238640c0b0d08bef0e?source=shahriar.svbtle.com"&gt;Python's &lt;code&gt;NotImplemented&lt;/code&gt; Type&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;exception&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;上周的蠎周刊已经曰过了,,,很神奇的数据类型..)&lt;/p&gt;
&lt;p&gt;This post discusses Python's NotImplemented built-in constant/type; what it is, what it means and when it should be used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://importpython.com/click/track/a63acf3afd6a77e38ce715cc683c238359006c28?source=blog.djangogirls.org"&gt;你的 Django 故事: 遇见 Dori Czapari&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;django,interview
Dori 是布达佩斯 Allmyles 的程序媛.
她参加了 Berlin 第一届 Django 程序媛工作坊,
现在是 Django Girls 阿姆斯特丹 的教官,
布达佩斯 Django Girls 的组织者.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://importpython.com/click/track/562b178dd710d08f238fe37e3e8710aab2426dd9?source=feedproxy.google.com"&gt;来自 Packt 的 $5 Python 图书&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ebook&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Packt 出版社联系了俺,
说他们能在各大平台上以 5$ 发信 电子书和视频,
目测他们有很多不同的 Python 和 Python 相关好物,统一 5$ ,值得一看.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/b2ce6f32869b26c455d5585a39caf12f42d53179?source=www.digitalocean.com"&gt;如何在 DigitalOcean 上 Nginx 身后用 Gunicorn 作服务器发布 Python 应用&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;gunicorn,wsgi,nginx&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很赞的手册,
将 Python WSGI 应用的部署说了个通透.
如果你想使用 Gunicorn 作为 Web 服务器来部署,
此文必须看哪.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/41b99ea928c2df4262afb23f18fb491bc37550eb?source=benkurtovic.com"&gt;混淆 "Hello world!"&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt; 上周蠎周刊就曰过了,的确很 brain break 的思路.)&lt;/p&gt;
&lt;p&gt;How complicated can one make print "Hello World" ?. This entry got first place in this Code Golf contest to create the weirdest obfuscated program that prints the string "Hello world!". The Author decided to write up an explanation of how the hell it works. So, here's the entry, in Python 2.7.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/57ebdf0ad4f6daeebcdcd321a1e0268c3c0aadac?source=wordaligned.org"&gt;Why zip when you can map ?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果你有一组列表,想合并后输出,
当然可以用 zip.
只是别忘了,咱们还有 map 哪,
这货天生就是并行的,能接受多个对象输入!
根本用不到 zip 出场的了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/73d36edef0a7ca8f75da1c46416590a89cf75f09?source=medium.com"&gt;Django 2014 的开发失误&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;django&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;俺花了点时间,
以 Django 为背景, 从发展的角度再思考2014...&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
绝对髙能,这种级别的吐糟就不是俺能理解的了,
请高人点评...)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/941e60c9ea66b89e2995ed3092158eaa569d6e72?source=github.com"&gt;eatiht&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;114 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从 html 文档提取文章内容的小工具.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
又一个,随着 H5 的发布,以及各种 AJAX 的折腾,
早年类似工具都无力化了,
记得 好看薄 创始人的老婆都写过一个类似的.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/a8eed0ae73150fdc747d959f280ddbc8b7b8c9e6?source=github.com"&gt;loggy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修饰器样的日志工具,
每当函式调用时激发.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/16bad88b336baca30be908e05ff17bfb3e840a6a?source=github.com"&gt;MetalAPI&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;15 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;the Metal Archives(http://www.metal-archives.com/) 的 REST 接口,
世界上最大的重金属音乐百科式全书资源库!
此接口可从 "Encyclopaedia Metallum" 查询到所有重金属乐队的元数据,
包含专辑/成员/从属...
现在所有 metalhead hackers 或是 data enthusiasts
能开发各种赞的事儿了!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/efe4b656beeac705f67a9a7bbf3fdc57b9882663?source=github.com"&gt;KindleGate&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;12 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;KindleGate 是个简单的 Flask 应用,
通过 Calibre 的 "ebook-convert" 命令行应用,
自动将 &lt;code&gt;*.epub&lt;/code&gt; 图书,转换为 &lt;code&gt;*.mobi&lt;/code&gt; 格式,
以供 Kindle 实验浏览器下载.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/e1ef8354beded0cd00a8ba64db02fef193db38c6?source=github.com"&gt;s3plz&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;友好/极简的接口,
用以对 Amazon S3 写入/读出 Python 对象.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/38434d5e17387c553c25210eb9e76ca171bb0ac7?source=github.com"&gt;pymdstat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解析 /proc/mdstat 文件的 pythonic 库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/c340af62d671b92ebe97e195b31257799385d66b?source=github.com"&gt;PyChess&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pygame 象棋, 国际的. &lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python: 从函式表中提取对象来调用函式  http://t.co/b4xaeEvgs6 http://t.co/hcDQs9KEG7 &lt;code&gt;#Python&lt;/code&gt; via @dv_geek&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://twitter.com/Python_Quest/status/548043013620916225"&gt;@Python_Quest&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;国货&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/retsyo/libbpg-py"&gt;retsyo/libbpg-py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;全新 &lt;a href="http://bellard.org/bpg/"&gt;BPG 图像格式&lt;/a&gt; 的纯 Py 实现!
作者在 CPyUG 列表中公开,自个儿曰没想出用什么...&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141221 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;141221 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 13</title><link href="http://weekly.pychina.org/importpython/importpython-13.html" rel="alternate"></link><published>2014-12-19T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-12-19:importpython/importpython-13.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/newsletter/draft/13/"&gt;Issue 13&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/09bc9e4d2ce0e61cf07d0dcf2d9a5fb606d0512f?source=www.giantflyingsaucer.com"&gt;构建扩展性足够好的 Python 3 REST 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开发者经常在一行代码没写前, 就陷入讨论如何扩展应用,
当然,这有助思考每个应用的可扩展性....&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/1fcd20104c53bcf03b5b886634608eaa2e3c0f5d?source=www.revsys.com"&gt;性能12日&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能有关性能你怎么着都知道一些技巧,
可惜, 可能你根本没有学到真正有用的,
尽管有丰富的在线信息,
但是,我们依旧被爱好者的无知而惊讶....&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
是有12节的系列分享,刚刚完成了前8篇,
不过,有关 web 应用的整体效能建议,
mozilla 等等有完备的 checklist 值得收藏!)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://importpython.com/click/track/4390bbe29543d39609809400af224c6190a869e7?source=www.djangoproject.com"&gt;Django 官网全新设计&lt;/a&gt;
The Django project is excited to announce that after many years, we're launching a redesign of our primary website. Have a look.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://importpython.com/click/track/181cebdb4d179e84b805005ee5fa3ae232382352?source=www.airpair.com"&gt;别在 Python 中折腾的事儿&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是帮助Pythoneer 从 trolls 们营救出来的手册.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
看一次乐一次...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;Premature optimization is the root of all evil 
(or at least most of it) in programming.&amp;quot; -- Donald Knuth
&amp;quot;过早优化是一切罪恶的根源(在绝大多数情况中)在编程&amp;quot; ~ 高德纳
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/a228b436aa7b25ca8f3fff4064edf309be57c060?source=blog.djangogirls.org"&gt;你的Django 故事: 遇见 Susan Tan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Susan 是位 Piston 的程序媛,
在三潘一家云计算公司.
Susan 很喜欢 Python 的 web 应用框架,
她是基于 Django 的应用 www.openhatch.org 核心提交者,
同时也在用 Rotten Tomatoes 来折腾.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/3871148d6d23f1ad9b0b9482af1bff2d740154b7?source=medium.com"&gt;json vs simplejson vs ujson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;蠎周刊也曰了.)&lt;/p&gt;
&lt;p&gt;Without argument, one of the most common used data model is JSON. There are two popular packages used for handling json?—?first is the stock json package that comes with default installation of Python, the other one is simplejson which is an optimized and maintained package for Python. The goal of this blog post is to introduce ultrajson or Ultra JSON, a JSON library written mostly in C and built to be extremely fast.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/1c7c390b1f46d39276aa99e77da2598fd3038ae9?source=gabrielelanaro.github.io"&gt;如何用 ast 从 python 文件中提取文档字串?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关 ast 模块的具体案例,
问题来了: 什么是 ast ?
简单的说,这是个神奇的模块,
用来理解 python 代码语法的,
能将 代码分解为语法成分,
理解了她就可以基于 Py 开发自个儿的 DSL 了,
又有问题了: 什么是 DSL ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/b2bba807ac155be3c91104121dbd30a89bca6a92?source=engineroom.trackmaven.com"&gt;Making a Mockery of Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mocking 是这样一种技术,
通过伪造模块的外围环境,来纯化我们的测试过程,加速测试,
这里探讨了 Py 世界中的 Mocking 技术.
分享如何令我们测试的多快好省.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/74491167a316bcf2bd6a22cf9766cd83cb308624?source=www.reddit.com"&gt;应该用哪种 Python 代码检查器?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有很多包可用的了 pylint, pyflakes, pep8, 和 pep257,
看起来 pep8 和 pep257 一样好,
但有些功能是包含在其它工具中的了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/94ade11fe6521ef9549a9a40932be4fe6094c770?source=github.com"&gt;Mochi a programming language using Python3 Interpreter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;蠎周刊曰了,这是个神奇的语言,值得期待)&lt;/p&gt;
&lt;p&gt;Mochi is a dynamically typed programming language for functional programming and actor-style programming. Its interpreter is written in Python3. The interpreter translates a program written in Mochi to Python3's AST / bytecode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/97b5660ac9f5b6f5f27ea89eddfa8701a04951a0?source=migrateup.com"&gt;The Python Concurrency Story, Part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;未来是并发的,理解现代操作系统中的并发原语,不仅仅令你成为更好的 Python 程序猿,
而且有助于余生里掌握每一个语言更好的开端.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
无法直视的广告辞哪,为了余生,跟了!-)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/f72fd9156811eef16bbe9e4bd28e7f30ae440573?source=github.com"&gt;qutebrowser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;129 Stars, 16 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;蠎周刊也曰了,纯geek 的浏览器, 小白退散!-)&lt;/p&gt;
&lt;p&gt;qutebrowser is a keyboard-focused browser with with a minimal GUI. It's based on Python, PyQt5 and QtWebKit and free software, licensed under the GPL. It was inspired by other browsers/addons like dwb and Vimperator/Pentadactyl.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/1afb1846ffbd711807f26ff6a4781f707c63c639?source=github.com"&gt;Dshell&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dshell是网络取证分析框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/693a6a2c2ab5be9a6c3482387f3478ebd0f56bbe?source=github.com"&gt;img-data-encode&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在图像中嵌入数据,
发源自俺的小嗜好, 想探知,在不改变图像视觉效果基础上,
能的混入多少数据?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/dc6baf85e16f35bd6e05cd3a619d2eda3363acef?source=github.com"&gt;django-quill&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轻松嵌入  Quill.js 在 Django 管理器界面中.
Quill 是免费/开源的 WYSIWYG 编辑器.
通过接口你可以定制满足你的需要.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/af9d4e0414a09bf07251e8b507f506293574e6f5?source=github.com"&gt;ansible-playbook-digitalocean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对 DigitalOcean 的简单 Ansible 剧本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/d992d78b7ecbb95bb7244b2b29160ace45ea4fa3?source=github.com"&gt;elasticsearch_dsl&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用Python 实现的 针对 Elasticsearch 的 DSL&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
哗咧! 需要!收!)&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;俺到底应该用 Py2 还是 Py 3? &lt;code&gt;#python 综合对比表:&lt;/code&gt; http://t.co/uwje8l8LOq&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://twitter.com/_marcelo_d/status/545723728869728256"&gt;@_marcelo_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="B5JOXCoIAAEjlrC.png(PNG 图像,459x303 像素)" src="https://pbs.twimg.com/media/B5JOXCoIAAEjlrC.png" /&gt;&lt;/p&gt;
&lt;p&gt;答案是这么的无法直视...
)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;14121 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;141221 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 11</title><link href="http://weekly.pychina.org/importpython/importpython-11.html" rel="alternate"></link><published>2014-12-11T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-12-11:importpython/importpython-11.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue11.html"&gt;ImportPython Newsletter Issue 11 - 4th December&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://agiliq.com/blog/2014/11/character-encoding-and-unicode/"&gt;字符编码和伟大的 Unicode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所有 Python 程序猿总有一天会遇到这个问题的.
读这篇文章吧,开开天眼.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.unixmen.com/introduction-python-args-kwargs-beginners-part-1/"&gt;为小白介绍 Python 的 &lt;em&gt;args 和 &lt;/em&gt;*kwargs – 第一部分&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对 Python 函式参数的 &lt;code&gt;*args&lt;/code&gt; 和 &lt;code&gt;**kwargs&lt;/code&gt; 变参形式, 
是很多新人困惑的地方,此文进行了详进的论述.
并给出了很多实用建议.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://h3manth.com/new/blog/2014/descriptor-decorator-in-python/"&gt;Python 中的修饰和描述符&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Decorators 和 Descriptor 
是 Python 中两个独立的功能,
而且,一起运用时,最爽!&lt;/p&gt;
&lt;p&gt;-&lt;a href="http://blog.dscpl.com.au/2014/12/hosting-python-wsgi-applications-using.html"&gt;基于 Apache/mod_wsgi 模块用 Docker 来部署 Python WSGI 应用.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目测这是第一篇, 用 Docker 部署 Apache/mod_wsgi 发布的 Python 应用的文章,
为此作者还提供了预先包装好的镜像.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
不过, Apache/mod_wsgi ? 你确定是认真的?)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/extending-sqlite-with-python/"&gt;用 Python 扩展 SQLite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;蠎周刊曰过了...&lt;/p&gt;
&lt;p&gt;SQLite is an embedded database, which means that instead of running as a separate server process, the actual database engine resides within the application. This post describes how to extend SQLite with Python, adding functions and aggregates that will be callable directly from any SQL queries you execute.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jibreel.me/blog/4/"&gt;用 Signals 和 Redis 进行简单分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Signals 能对你指定的部分代码暴露 hook 出来,
这儿有一些实例, 展示如何对 Django/Flask 应用,
通过 hooks 对网站运行进行分析.&lt;/p&gt;
&lt;p&gt;-&lt;a href="http://blog.djangogirls.org/post/104071168043/your-django-story-meet-patrycja-szablowska"&gt;你的 Django : 遭遇 Patrycja Szabłowska&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Your Django Story&lt;/code&gt; 系列文章,
这期是 程序媛 的极赞介绍.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://maxberggren.com/2014/11/27/model-of-a-zombie-outbreak/"&gt;在瑞典/挪威/芬兰僵尸爆发模型分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;疾病传播模式的研究,
造型为某种虚构的僵尸爆发;-)
当然, 可读性来自 numpy 和数据科学技巧.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.infoq.com/news/2014/12/ipython-notebooks"&gt;IBM, Databricks, GraphLab 支持 Notebooks 问以建立预测应用!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为毛应该学习 IPython?
因为 notebook 已经成为新型电子表格,可运行的那种.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pycon.blogspot.com/2014/12/whats-so-special-about-sprints.html"&gt;sprints 有啥特殊的?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;什么是 sprints?
在 PyCon 之后,
大家周一~四,每天进行的冲次开发,
可以进行 功能增加/bug修复/应用|库移植.&lt;/p&gt;
&lt;h2 id="_2"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dboudwin/prygress"&gt;prygress&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进度条&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/shreyashirday/FacebookSearcher"&gt;FacebookSearcher&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;9 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动识别 fb 消息中的 url/电话号码/邮件地址...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/fijal/jitpy"&gt;jitpy&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;8 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CPython 中嵌入 PyPy 的库.瞬间提速 20x&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pyloque/ssdb-ya"&gt;ssdb-ya&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;8 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又一个 ssdb 的 Python 客户端.
用来替代 Redis 的 NoSQL 数据库.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/someus/TextRank4ZH"&gt;TextRank4ZH&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;6 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TextRank 可以从文章中提取摘要和关键字,
TextRank4ZH 则是能用 TextRank 的算法处理中文文章.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/bee-keeper/django-invitations"&gt;django-invitations&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为 django-allauth 集成的邀请模块.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Vilsol/SkypeBot"&gt;SkypeBot&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用来记录开发交流的 Skype 机械人&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marcwebbie/pysswords"&gt;pysswords&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pysswords 用 scrypt 加密本地文件.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mazlumagar/delete_tweets"&gt;delete_tweets&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用 Python 删除推文.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sarunks/python-requirements-generator"&gt;python-requirements-generator&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扫描所有目录和文件,自动生成安装模块依赖描述文本&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
这个异常有用哪!-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eyalzek/price-alert"&gt;price-alert&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;私人比价助理!
当商品价格低于事先设定时,立即邮件提醒
(已测试过 Amazon 可用)&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/importpython/status/539742644759707649"&gt;社区成员/管理员应该有什么素质? 例如 为毛知识应该分享?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@importpython&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/slashdot/status/540206177930334208"&gt;学习哪种语言收益最大? 目测是 Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;@slashdot &lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
无法同意更多!-)&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141208 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;141207 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 12</title><link href="http://weekly.pychina.org/importpython/importpython-12.html" rel="alternate"></link><published>2014-12-11T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-12-11:importpython/importpython-12.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/newsletter/draft/12/"&gt;ImportPython Newsletter Issue 12 - 11th December&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/98e6c60dcb6e7795a962959a9b9720732db7bdee?source=agiliq.com"&gt;理解 Python 的 unicode, str, UnicodeEncodeError 和 UnicodeDecodeError&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过人为引发各种有关错误, 来理解这堆错误的差异和根本原因.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
有时,也可以大吼一声  &lt;code&gt;Py3大法好&lt;/code&gt;)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/32eddea3528009551538b6d8349fb7d6a3fa522d?source=www.djangounderthehood.com"&gt;Django Under The Hood - 视频和幻灯.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django: Under the Hood 
又一个伟大的 Django 式发布,
社区发布了各种资料来忽悠大家使用...
包含各种视频和幻灯,
来自: Andrew Godwin, Armin Ronacher, Jannis Leidel, Tom Christie, Daniel Pyrathon, Anssi.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/375dbb71c06c6b700c0ec4694b6f5c04bf055de1?source=blog.jetbrains.com"&gt;IPython Notebook 嵌入 IDE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;几周前发布的 Pycharm 4 已经能嵌入 IPython notebook 了.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/4713f8b55436838c64dc5ab4d208c3a9e906c300?source=www.drdobbs.com"&gt;Python 中测试失败时&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;单元测试是好的,
但是,具体到测试失败时,应该怎么处置?
此文给出了详细的分析和建议.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/9564211c4aec4cabcf73f39d5ca305c5f9420869?source=handlebarcreative.tumblr.com"&gt;用 Docker 来部署 Django 应用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"以往所见各种有关介绍,都不是针对完备的一个 Django 应用的,
此文首次对 syncdb 和 collecstatic 命令进行全面阐述. "&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/d8d49ed2abc1c212956e82fc544b124f79658d49?source=docs.python.org"&gt;将代码从 Py 2 移植到 Py3 的手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文目标是如何更好的同时支持两种版本的运行环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/c5b55fc92857bd490a988d9c57bf02cbf0ce9bc9?source=www.chicagodjango.com"&gt;django-nocaptcha-recaptcha 介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本周 Google 发布了 &lt;code&gt;reCAPTCHA&lt;/code&gt;,
所以,我们将其折腾到了 Django 中.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/bb734234ff85b32889f066a0a57d94ffe3b3b398?source=blog.kevinastone.com"&gt;Django 模型说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Django 中如何能更加简洁的描述数据模型来包含更多业务?
利用内置的 Python 描述协议,
可以轻松的完成一个专用 DSL 来作这事儿.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/8c453057cbd053cfb7b0a21553263bc158a4c1b5?source=www.codeproject.com"&gt;配置 Raspberry Pi 来折腾 Python 和 C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文旨在帮助初学者上手,
快速建立 树莓派环境来开始 Py 和 C 的开发.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/d0b7ed787707b6f59c9a11f879f412048767a132?source=feedproxy.google.com"&gt;设计 PyMongo 时4个令人桑心的决策&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回顾当初的决定引发了多大的麻烦,
痛定思痛, 在 PyMongo 3.0 时,将全面解决的设计问题,
作为一个 悲伤的墓志铭故事,在此一述.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
"copy_database" 引发的血案...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/d6ac46d0ceaf64f354fdb5b6e80318b059a505c0?source=www.paypal-engineering.com"&gt;10 大企业 Python 传说&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"I joined PayPal a few years ago, and chose Python to work on internal applications, but I've personally found production PayPal Python code from nearly 15 years ago. Here are the 10 myths I've had to debunk the most in eBay and PayPal's enterprise environments." - Mahmoud Hashemi&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
蠎周刊也曰过...)&lt;/p&gt;
&lt;h2 id="_2"&gt;项目&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/a67f19f32d629ee2a8860a32bfce031f1035b124?source=github.com"&gt;musicmood&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;31 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运用 机器学习 根据心情给歌曲分类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/61601cde9042168dbe018e66e504e786fa3fb0e7?source=github.com"&gt;docker-resource-reporter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;16 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将 Docker 资源情况汇总到 InfluxDB&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/30fd84bfeb2562e46b01ff70ccd2ed21b8d828b3?source=github.com"&gt;theano_alexnet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;14 Stars, 5 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Theano-based Alexnet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/8619766fefed256cc9f92f3f121556516e4a9ca6?source=github.com"&gt;django-storages-redux&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;10 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;django-storages 的 Py3 兼容模块,
来自 bitbucket 已经上传 PyPi&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/31b5b40da29ba4fdda34ef4ed2a439e04fa5dff6?source=github.com"&gt;suponoff&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;9 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;Supervisor On/Off:&lt;/code&gt;
又一山寨的 web 控制界面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/6e16a10cd7cf140413d85040fb01089eca427b6c?source=github.com"&gt;TiUIiOSDocumentViewerExtended&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Titanium iOS 文档察看器的小扩展&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/fbadb62b9ff2aa499e1246c413b2aec0456749c2?source=github.com"&gt;python-ocr&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的字符识别(OCR)&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
当然的不支持中文
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/9102c8bb984ad0e54e8e9129a45cc0f84099e672?source=github.com"&gt;butterfield&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 版本的
Slack 机器人框架,
使用 asyncio 和 Slack 的 &lt;code&gt;实时消息接口&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
哗!-)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/38e85024c5a8526e655008668b366634a36451aa?source=github.com"&gt;py-simple-udp-proxy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只是用来折腾的非常简单的一个 udp 代理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/540a124c3fc60f2b0925a0cf843d11367ed01fde?source=github.com"&gt;django-initialcon&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;专注生成彩色小图标,
用以 Django 应用中用户的默认头像.&lt;/p&gt;
&lt;p&gt;(&lt;code&gt;是也乎:&lt;/code&gt;
&lt;img alt="是也乎" src="https://camo.githubusercontent.com/085cf8fb7b5f29c0d8b15263f59c11177f919139/68747470733a2f2f7261772e6769746875622e636f6d2f62657474736d6174742f646a616e676f2d696e697469616c636f6e2f6d61737465722f646f63732f5f7374617469632f696d616765732f70332e706e67" /&gt;&lt;/p&gt;
&lt;p&gt;嗯嗯嗯,就是 GMail 客户端界面中常见的哪种,
很实用 ;-)
)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://importpython.com/click/track/0ee5871c16abe1f87fb7c5e2e10df6fa0ed33d28?source=github.com"&gt;mit-ocw-dl&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;2 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个命令下载所有 MIT-OCW 的课程&lt;/p&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;很高兴 micropython 发布新版本!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://twitter.com/gvanrossum/status/542031362580955138"&gt;@gvanrossum&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;得绝对明确: 从版本控制系统安装 pip ,是每个项目的必须义务. 这是个&lt;code&gt;反模式&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://twitter.com/jezdez/status/543047818181898241"&gt;@jezdez&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141215 用时 42 分钟完成快译.&lt;/li&gt;
&lt;li&gt;141213 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 10</title><link href="http://weekly.pychina.org/importpython/importpython-10.html" rel="alternate"></link><published>2014-11-27T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-11-27:importpython/importpython-10.html</id><summary type="html">&lt;p&gt;ImportPython
&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://importpython.com/static/files/issue10.html"&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-279rc1/"&gt;Python 2.7.9rc1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 2.7.9rc1 是下一个Python2.7 系列bug修复版的候选版本的首选.   这个修复版将包含几个空前的变化. &lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/Prooffreader/Misc_ipynb/blob/master/top_10_python_idioms.ipynb"&gt;10个真希望我早点学会Python技巧&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用ipython notebook 来展示了基本的python使用技巧.  对于python学习和有python编程经验的人都是很好的文章. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lincolnloop.com/blog/rate-limiting-nginx/"&gt;用Nginx来限速&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用一个明确的阀值来限制请求的速率和阻止某些请求. 使用nginx本身来实现相对于使用框架要简单的多. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://irisbeta.com/article/245366784/the-django-request-response-cycle/"&gt;Django 请求响应循环&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结Django请求响应过程中发生了什么. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lukeplant.me.uk/blog/posts/handling-django%27s-get_query_set-rename-is-hard/"&gt;处理 Django的查询重命名是很困难的&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django1.6中处理查询 (get_query_set) 的重命名是很棘手的事情 - 比表面看起来还要难.  Luke Plant 说明了原因?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://therealkatie.net/blog/2014/nov/17/teaching-python-your-pjs/"&gt;在睡衣中教Python&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在学习python遇到的挑战.  其中一些在面对 Python 本地用户组的时候也遇到了. 读读这边文章看看 Katie 是怎么克服这些困难的. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bugra.github.io/work/notes/2014-11-24/trend-estimation-via-hodrick-prescott-filter/"&gt;通过Hodrick普雷斯科特过滤器来预测趋势&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Data aggregation from different sources and from many people make time-series analysis crucially important in these settings. Detecting
trends and patterns in time-series signals enable people to respond these changes and take actions intelligibly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@paulcolomiets/the-future-of-asynchronous-io-in-python-ce200536d847"&gt;Python 异步 IO 的未来&lt;/a&gt;  »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Support of asynchronous I/O in Python is decent. Author talks above looking beyond putting a queue for tasks that consume longer cpu cycles or have to wait for I/O. The articles looks at the Python Async world through the spectacle of Software Architecure of Today that rely upon Microservices.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jvns.ca/blog/2014/11/27/pydata-nyc-i-gave-a-machine-learning-talk-yay/"&gt;PyData NYC (我做了一个Pyhton机器学习的演讲,哦也)&lt;/a&gt;  »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另一篇关于 PyData NY 大会的博客. Julia Evans 在大会上分享了她在机器学习领域的经验. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.matthieuamiguet.ch/blog/apache-log-analysis-haskell-python"&gt;使用Python 和 Haskell 分析 Apache 日志&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;好书&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythonforengineers.com/pythonforengineersbook/"&gt;Python工程师之书&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;众筹成功之后发布的新书 - &lt;a href="https://www.kickstarter.com/projects/513736598/python-for-science-and-engineering"&gt;https://www.kickstarter.com/projects/513736598/python-for-science-and-engineering&lt;/a&gt;[第一次看到众筹python的书]&lt;/p&gt;
&lt;h2 id="_4"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scrapinghub/dateparser"&gt;dateparser&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;240 Stars, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;python 解析可读的日期&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mengskysama/BurstLink"&gt;BurstLink&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;131 Stars, 21 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于Twisted的伪造连接代理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alex-sherman/python-jrpc"&gt;python-jrpc&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;45 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个基于JSON RPC v2.0 的python 远程调用框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ToadKing/wii-u-gc-adapter"&gt;wii-u-gc-adapter&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;33 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在Linux上使用Wii U GameCube Adapter 的工具&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/stripe/topmodel"&gt;topmodel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;33 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;二元分类器的评价标准,所以你不必&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Willseph/RaspberryPiThermostat"&gt;RaspberryPiThermostat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;20 Stars, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用Python 和 PHP编写基于树莓派的恒温器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JonathanSalwan/abf"&gt;abf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;抽象操纵二进制格式 -  ELF, PE and Mach-O format&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lepture/captcha"&gt;captcha&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;18 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个验证码库,可以产生声音和图像验证码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/justmarkham/python-data-science-workshop"&gt;python-data-science-workshop&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;13 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;工作台: 数据科学中使用Python&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/coinkite/offline-multisig-python"&gt;offline-multisig-python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;12 Stars, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sign bitcoin multisig transactions (P2SH spends) from your Coinkite shared accounts, using this simple python program&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Cleisthenes/cleisthenes"&gt;cleisthenes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个开源免费的投诉管理系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/scrapinghub/crawl-frontier"&gt;crawl-frontier&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;6 Stars, 2 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个灵活前言的web 抓取框架&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aoqfonseca/scheduler_tweet"&gt;scheduler_tweet&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;定时发tweet的 Django 应用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Zeioth/django-dual-authentication"&gt;django-dual-authentication&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;允许验证用户名或者是邮箱地址&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/suselrd/django-social-publisher"&gt;django-social-publisher&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3 Stars, 1 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用allauth 令牌简单的提交到社交网站. 几种媒体类型(图片,视频,文本)和 几个频道(脸上,推特等)&lt;/p&gt;
&lt;h2 id="_5"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/gvanrossum/status/537678882217132032"&gt;Guido van Rossum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 2.7.9 发布候选 1 --  新的安全特性,请测试&lt;/p&gt;
&lt;h2 id="_6"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rg3?tab=repositories"&gt;Ricardo Garcia&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;aka rg3 是他开发的一款很受欢迎的用来下载 youtube 视频的python脚本 - https://github.com/rg3/youtube-dl 和 在Slackware Linux.发行版 slackroll 包或更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Ricardo" src="https://avatars0.githubusercontent.com/u/53487?v=3&amp;amp;s=100" /&gt;&lt;/p&gt;
&lt;h2 id="_7"&gt;忙加载更新&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://importpython.com/terms-conditions-privacy"&gt;条款和条件,隐私政策&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我们已经更新了条款,条件和隐私政策&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="_8"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="http://importpython.com/blog/post/why-another-python-newsletter"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141207 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141207 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>为毛又来个 Py 周刊?</title><link href="http://weekly.pychina.org/importpython/importpython-why.html" rel="alternate"></link><published>2014-11-27T00:00:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-11-27:importpython/importpython-why.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/blog/post/why-another-python-newsletter"&gt;Why Another Python Newsletter ?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have been subscriber of Python Weekly for a long time and lately Pycoder's weekly. Both newsletters do a tremendous job. Have learned a lot from the links they share every week. Then why launch Yet Another Newsletter ?.&lt;/p&gt;
&lt;p&gt;The problem with both these newsletters and pretty much every other newsletter is "It's a one size fits all" approach.&lt;/p&gt;
&lt;p&gt;Assume a freshman learning Python and a Professionally with 5+ years of Python Development experience. They both have different needs. Links they click reflect their interest. Wouldn't it be great if a newsletter content could adapt to what they like and change accordingly ?. That's what ImportPython intends to do.&lt;/p&gt;
&lt;p&gt;Import Python Newsletter launched a month back at Pycon India as part of the lightning talk. Approach was to learn till the first 10 issue how users behave and what links/articles they click/read. Based on the learning roll out a content recommendation engine. One that decides what content goes in which newsletter.&lt;/p&gt;
&lt;h2 id="what-are-the-parametersdocument-features-that-recommendation-engine-takes-into-account"&gt;What are the parameters/document features that recommendation engine takes into account ?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Click History. Terms that appear in the article that user reads.&lt;/li&gt;
&lt;li&gt;Length of the article.&lt;/li&gt;
&lt;li&gt;Preference to sections ? Articles ? Projects ? Videos ? Tweets ?.&lt;/li&gt;
&lt;li&gt;No of clicks per newsletter reflects consumption appetite.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="how-do-we-know-if-the-recommendation-engine-is-doing-its-job"&gt;How do we know if the recommendation engine is doing it's job ?&lt;/h2&gt;
&lt;p&gt;It's difficult to assess per user unless one can get feedback over a period of time. However click through rates will offer insight into how efficient the algorithm is ?. Also Average open rate being higher then other newsletters or industry standard is another benchmark to compare with.&lt;/p&gt;
&lt;p&gt;Issue 10th is the last "One size fits all" version of importpython.com. Issue 11th to 20th will see rollout of the recommendation engine to a subset of subscribers. The subset of users are those who are subscribed from issue one. Every week the subset grows until 20th issue when all users as of today would have a recommended newsletter.&lt;/p&gt;
&lt;p&gt;Tweet&lt;/p&gt;
&lt;h1 id="_1"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;Pycoder's weekly 已经坚持了很长时间,作的也很好.
(当然的,大妈也坚持翻译了下来: &lt;a href="http://weekly.pychina.org/"&gt;|蠎周刊 |汇集全球蠎事儿 !-)&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;那么问题来了, 为毛我们还需要另外一个周刊呢?&lt;/p&gt;
&lt;p&gt;简单的说, 世界没这么简单,不同层次的行者,需要不同的信息...&lt;/p&gt;
&lt;p&gt;引擎对文章的推荐参数有这么几个方向:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击&lt;/li&gt;
&lt;li&gt;长度&lt;/li&gt;
&lt;li&gt;类型&lt;/li&gt;
&lt;li&gt;阅读偏爱 (newsletter 打开的情景,以及再次点击...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么问题来了, 推荐引擎这么来靠谱嘛?&lt;/p&gt;
&lt;p&gt;所以, 我们要尝试其它的方式来推荐,
从 Issue 10 开始,将结束这种单一结构的内容, 
具体的我们折腾的来..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141202 用时 7分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141202 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 9</title><link href="http://weekly.pychina.org/importpython/importpython-9.html" rel="alternate"></link><published>2014-11-20T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-11-20:importpython/importpython-9.html</id><summary type="html">&lt;p&gt;ImportPython
&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue9.html"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.takipiblog.com/clojure-at-scale-why-python-just-wasnt-enough-for-appsflyer/"&gt;Why Python Just Wasn't Enough for AppsFlyer&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At AppsFlyer we actually started our code base in Python. Two years later this wasn't enough to handle the growing number of users and requests. We started to encounter issues like one of the critical Python processes taking too long to digest the incoming messages, caused mainly by string manipulations and Python's own memory management system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://bugra.github.io/work/notes/2014-05-12/pydata-silicon-valley-2014/"&gt;PyData Silicon Valley 2014&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Detailed Recap of PyData 2014 conference.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.tompurl.com/2014/11/19/is-using-virtualenv-really-a-good-idea-for-production-django-applications/"&gt;Is Using Virtualenv Really A Good Idea For Production Django Applications?&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A New Django developer raises questions on the default production workflow that's followed in the Django Community.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythonforengineers.com/build-a-reddit-bot-part-1/"&gt;Build a Reddit Bot Part 1&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Five Part Series on Building a Reddit Bot. Part 1 and 2 are complete. The Bot currently reads posts from reddit and replies to the post.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://gondor.io/blog/2014/11/17/how-run-flask-gondor/"&gt;How To Run Flask on Gondor&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gondor offers Managed Python hosting with command-line deployment and support. Here is how to run flask based apps.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://feedproxy.google.com/~r/Pythonmeme/~3/OcGBkVvDis0/"&gt;Flask for the Masses&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web Development Flask for the Masses - Flask Step By Step Tutorial.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://scottsievert.github.io/blog/2014/05/14/Scientific-Python-tips-and-tricks/"&gt;Scientific Python Tips and Tricks&lt;/a&gt;  »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This guide aims to ease that process a bit by showing tips and tricks within Python for those coming from MATLAB background.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/oauth-authentication-with-flask"&gt;OAuth Authentication with Flask&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Complete Flask application that implements "Sign In with Facebook" and "Sign In with Twitter" functionality.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://maps.ramiro.org/notebook/usa/county-health-rankings/"&gt;USA County Health Rankings IPython Notebook&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IPython notebook for creating CSV files used for choropleth maps that show health rankings data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakevdp.github.io/blog/2014/05/05/introduction-to-the-python-buffer-protocol/"&gt;An Introduction to the Python Buffer Protocol&lt;/a&gt;  »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python buffer protocol, also known in the community as PEP 3118, is a framework in which Python objects can expose raw byte arrays to other Python objects. This can be extremely useful for scientific computing, where we often use packages such as NumPy to efficiently store and manipulate large arrays of data.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://developer.rackspace.com/blog/openstack-orchestration-in-depth-part-2-single-instance-deployments"&gt;OpenStack Orchestration In Depth, Part II: Single Instance Deployments&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/tetsuo/hypervault"&gt;hypervault&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;20 Stars, 1 Fork
Postgresql connection manager for scalability freaks.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/letsencrypt/lets-encrypt-preview"&gt;lets-encrypt-preview&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;477 Stars, 33 Fork
An ACME client that can update Apache configurations (developer preview)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/trustedsec/meterssh"&gt;meterssh&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;44 Stars, 20 Fork
MeterSSH is a way to take shellcode, inject it into memory then tunnel whatever port you want to over SSH to mask any type of communications as a normal SSH connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jpadilla/django-rest-framework-oauth"&gt;django-rest-framework-oauth&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork
OAuth support for Django REST Framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/PerArneng/fortune"&gt;fortune&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;25 Stars, 2 Fork
A way to generate very small docker images based on dynamically linked binaries&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Agerrr/Automated_Music_Transcription"&gt;Automated_Music_Transcription&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;23 Stars, 2 Fork
A program that automatically transcribes a music file with polyphonic piano music in .wav format to sheet notes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/DifferentMethods/netwrok-server"&gt;netwrok-server&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10 Stars, 1 Fork
NetWrok is a Python-3 asyncio MOG server using websockets.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Zulko/vapory"&gt;vapory&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;9 Stars, 2 Fork
Photo-realistic 3D rendering with Python and POV-Ray&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/rfyiamcool/batch_keys_api"&gt;batch_keys_api&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;7 Stars, 0 Fork
simple id_rsa.pub batch mamage and web api&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/yyx990803/semi-sublime"&gt;semi-sublime&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5 Stars, 0 Fork
Sublime Text 3 plugin for Semi&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Uncleleech/relevant-xkcd-stats"&gt;relevant-xkcd-stats&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5 Stars, 1 Fork
Reddit stats for mentioning relevant xkcd links&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bitbanger/namegen"&gt;namegen&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 Stars, 0 Fork
Statistical trigram name generator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/ericwhyne/http-ricochet"&gt;http-ricochet&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork
A simple proxy web service in 19 lines of Python code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/cathook/shrvim"&gt;shrvim&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork
It's an vim plugin that allows users using vim like google doc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/cjhutto/vaderSentiment"&gt;vaderSentiment&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork
VADER Sentiment Analysis. VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media, and works well on texts from other domains.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jaythegenius48/FacesInSelfie"&gt;FacesInSelfie&lt;/a&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork
In this project we have used Instagram API and programming languages like python, R (for visulization) and find human faces.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/yashsavani/rechorder"&gt;rechorder&lt;/a&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3 Stars, 0 Fork
Using Artificial Intelligence with machine learning to predict the next note in a real time MIDI playback. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/botherder?tab=repositories"&gt;Claudio Guarnieri&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;aka Nex is Hacker, security researcher and human rights advocate. His projects on sypware detection, binary analysis, memory forensics are worth looking into for anyone who is cares about security.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Claudio" src="https://avatars0.githubusercontent.com/u/1032671?v=3&amp;amp;s=100" /&gt;&lt;/p&gt;
&lt;h1 id="_4"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141207 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141209 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 8</title><link href="http://weekly.pychina.org/importpython/importpython-8.html" rel="alternate"></link><published>2014-11-13T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-11-13:importpython/importpython-8.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue8.html"&gt;issue8&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.businessinsider.in/Google-Is-Using-A-Super-Cryptic-Method-To-Recruit-New-Developers/articleshow/45129652.cms"&gt;Google super-cryptic challenge to recruit new developers.&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reported that searching for terms like "python lambda syntax" and "mutex lock" brings up an invite to compete some challenge questions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.redturtle.it/2014/11/12/scrapy/"&gt;Scraping cheap airline tickets&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It all started with a bet long time ago. One of my friends couldn't believe that it is actually possible nowadays to travel around the world with low-cost airlines.I think I won. With some python help and many hours of coding I was able to find all the necessary tickets and stay below the price criterion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.rht.com/humor-disturb-python/"&gt;Do Not Disturb.&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python: A little misunderstanding can create the ultimate "do not disturb" sign.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pbpython.com/excel-diff-pandas.html"&gt;Using Pandas To Create an Excel Diff&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am going to walk through a real world example of how to use pandas to automate a process that could be very difficult to do in Excel. My business problem is that I have two Excel files that are structured similarly but have different data and I would like to easily understand what has changed between the two files. Basically, I want an Excel diff tool.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/ofermend/IPython-notebooks/blob/master/blog-part-1.ipynb"&gt;Data Science with Hadoop - predicting airline delays.&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every year approximately 20% of airline flights are delayed or cancelled, resulting in significant costs to both travellers and airlines. As our example use-case, we will build a supervised learning model that predicts airline delay from historial flight data and weather information.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://thinkster.io/brewer/angular-django-tutorial/"&gt;Building Web Applications with Django and AngularJS&lt;/a&gt;  »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial you will build a simplified Google+ clone called "Not Google Plus" with Django and AngularJS.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.bfontaine.net/2014/11/11/a-python-toolbox/"&gt;A Python Toolbox&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"In this post I'll share some tools I use to ease and speed-up my workflow, either in the Python code or in the development environment."&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/github/fonnesbeck/Bios366/blob/master/notebooks/Section6_4-Support-Vector-Machines.ipynb"&gt;Supervised Learning: Support Vector Machines&lt;/a&gt;  »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The support vector machine (SVM) is a classification method that attempts to find a hyperplane that separates classes of observations in feature space. In contrast to some other classifications methods we have seen (e.g. Bayesian), the SVM does not invoke a probability model for classification; instead, we aim for the direct caclulation of a separating hyperplane. &lt;/p&gt;
&lt;h2 id="_2"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/pierrrrrrre/PyGeoIpMap"&gt;PyGeoIpMap&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;55 Stars, 6 Watch, 8 Fork
Python script to show where IP addresses are coming from by plotting them on a World map.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/dstl/ideaworks"&gt;ideaworks&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;55 Stars, 12 Watch, 6 Fork
Ideaworks is a free and open source web application that allows a group of people to collate, comment on and rate ideas. The application also allows staff users to create projects, small packages of work that have developed from the ideas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/alfredolainez/news-media-topics"&gt;news-media-topics&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 Stars, 2 Watch.
Finding current topics in news media via networks of words.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/coleifer/sqlite-browser"&gt;sqlite-browser&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;40 Stars, 4 Watch, 3 Fork
Web-based SQLite database browser written in Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Twangist/log_calls"&gt;log calls&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;39 Stars, 3 Watch, 2 Fork
Debugging and profiling decorator that prints or logs caller name(s), args+values, execution time, and more. Eliminates reams of boilerplate code.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/shoyer/cyordereddict"&gt;cyordereddict&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;35 Stars, 2 Watch, 3 Fork
Cython implementation of OrderedDict.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/Inconditus/hackit"&gt;hackit&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;13 Stars, 4 Watch.
A Reddit interface for Facebook.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/aligajani/bello-text-miner"&gt;bello text miner&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;4 Stars, 1 Watch, 1 Fork.
Bello is a lightweight text mining library for Python 3. It allows a text mining enthusiast like you to get up and running with analysing the corpus of your choice. Text mining is fun and we want beginners to not be put away by the high learning curve.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/invisiblehands/django-supasurvey"&gt;django-supasurvey&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1 Stars, 2 Watch.
This is a survey tool. We use it for survey applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/grupotaric/httptestserver"&gt;httptestserver&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 Stars, 4 Watch.
HTTP(s) python integrated server for testing. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_3"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/kennethreitz/status/532203660491886593"&gt;Pip part of 2.7 »&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 2.7 will now ship with Pip pre-installed, like Python 3! - Kenneth Reitz.&lt;/p&gt;
&lt;h2 id="_4"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/eliben?tab=repositories"&gt;Eli Bendersky&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;is a author of pycparser - Complete C99 parser in pure Python along with pss is a power-tool for searching inside source code files. His blogpost on Python are worth reading - http://eli.thegreenplace.net/tag/python. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Bendersky" src="https://avatars1.githubusercontent.com/u/1130906?v=3&amp;amp;s=100" /&gt;&lt;/p&gt;
&lt;h1 id="_5"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141207 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141207 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 7</title><link href="http://weekly.pychina.org/importpython/importpython-7.html" rel="alternate"></link><published>2014-11-06T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-11-06:importpython/importpython-7.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue7.html"&gt;issue7&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://morepypy.blogspot.in/2014/11/pypy-io-improvements.html"&gt;PyPy IO的改进&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PyPy是一个速度快,兼容性好,替代Python(2.7.8和3.2.5)的实现. 相对于标准的Python解释器,它有几个优势. 例如:更好的IO实现和垃圾回收机制. 快来瞧瞧Cpython VS PyPy的比较吧～&lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.toptal.com/python/interview-questions"&gt;六大Python面试问题(原来又增加了一条～)&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So...你懂Python编程,是吧!那来看看这些小的代码片段,预测一下输出的结果吧. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://charlesleifer.com/blog/encrypted-sqlite-databases-with-python-and-sqlcipher/"&gt;使用Python和SQLCipher加密SQLite&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SQLite是一个独立的,不需要服务和配置,并且还支持事务的数据库引擎. 它却没有提供对数据文件加密的功能,那么这就有SQLCipher的用武之地了. 这篇文章就是向我们介绍如何去使用它. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://codecondo.com/blogs-for-python-developers/"&gt;11个Python开发者必读博客&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python开发者必须博客摘要. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mysliderule.com/search?term=python"&gt;Python在线课程综合列表 / MOOCs&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySlideRule在线课程列表 / MOOCs.有许多免费,收费的课程可以选择. &lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alexandrevicenzi/fluentmail"&gt;fluentmail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;34 Stars, 3 Watch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;轻量级邮件发送库. 接口流畅,漂亮. 值得参考,观摩. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/google/nogotofail"&gt;nogotofail&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;893 Stars, 124 Watch, 93 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nogotofail是Google的一个网络安全测试工具. 旨在帮助开发人员和安全研究人员发现和修复TLS/SSL的弱连接,设备和程序之间敏感的明文传输,提供一个灵活的,可伸缩的,功能强大的方式. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/yhat/db.py"&gt;db.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;122 Stars, 13 Watch, 8 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;db.py让我们与数据库交互更加简单了. 可以更容易的查询表,列,视图等. 非常好用户交互,信息展示,并提供易于使用的辅助功能. 支持多数主流数据库:PostgreSQL,MySQL,SQLite,Oracle,MS SQL Server...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tdryer/hangups"&gt;hangups&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;179 Stars, 20 Watch, 15 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hangups是Google HOA的一个第三方即时客户端. 它包含一个Python的库和一个基于文本的用户界面. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tobgu/pyrsistent"&gt;Pyrsistent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;95 Stars, 7 Watch, 3 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pyrsistent是一个持久化集合类(由一些称为功能的数据结构组成),在某种意义上说是不可变的. 
所有方法的数据结构在发生改变时都会拷贝一个包含更新信息的新副本,原始结构不变. 了解多种编程语言的程序员接触过函数式编程的一定要瞧瞧Pyrsistent. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kennethreitz/procs"&gt;Procs&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;140 Stars, 16 Watch, 4 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kenneth Reitz尝试提供了一个类似于Python Subprocess模块功能的高层次抽象API. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pyob.oxyry.com/"&gt;Oxyry Python Obfuscator&lt;/a&gt; 
    -&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用Obfuscation来混淆python源码,可以将符号名称重命名,包括变量,函数,imports,类,参数,类的私有方法. &lt;/p&gt;
&lt;h2 id="_4"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/dabeaz/status/529606665986142209"&gt;Twitter tweets on GIL and Unicode&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GIL在python中就像Ebola病毒一样. 理所当然的它可能会影响到你,你的代码可能在百万次之后死于UnicodeError - David Beazley(Python book author, software developer, and teacher).&lt;/p&gt;
&lt;h2 id="_5"&gt;社区&lt;/h2&gt;
&lt;p&gt;~ Community&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://inventwithpython.com/blog/2014/11/03/call-for-translators-for-3rd-edition-of-invent-with-python/"&gt;呼吁广大蟒人翻译"Invent with Python"第三版&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"Invent Your Own Computer Games with Python"是一本在年轻人中非常受欢迎的书. 在该书第三版开始,他们希望能将这本书翻译成更多的语言,欢迎有经验的志愿翻译者参与. 如果你掌握一门外语,想提供帮助. 请联系 al@inventwithpython.com. &lt;/p&gt;
&lt;h2 id="_6"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;p&gt;&lt;img alt="Paulus" src="https://avatars2.githubusercontent.com/u/1444314?v=2&amp;amp;s=100" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/balloob"&gt;Paulus Schoutsen&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_7"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141207 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141207 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 6</title><link href="http://weekly.pychina.org/importpython/importpython-6.html" rel="alternate"></link><published>2014-10-30T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-10-30:importpython/importpython-6.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue6.html"&gt;issue6&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kracekumar.com/post/100897281440/fluent-interface-in-python"&gt;python Fluent 接口&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fluent interface is an implementation of an object oriented API that aims to provide more readable code. A fluent interface is normally implemented by using method cascading (concretely method chaining) to relay the instruction context of a subsequent call. Kracekumar explains with simple code snippets How to implement the same with simple code snippets ?.&lt;/p&gt;
&lt;p&gt;Fluent 接口是一种面向对象的API实现,目标是让代码可读性更高. 一个fluent通常是通过使用方法级联(具体的方法链)来接替后续的指令上下文调用来实现的. Kracekumar 解释了怎么使用简单的代码来实现简单的代码?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python.dzone.com/articles/pros-and-cons-lambda"&gt;Lambda的利弊&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;lambda 的好处是什么?为什么我们需要 lambda ? 利弊在哪儿 ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://tech.marksblogg.com/ip-address-lookups-in-python.html"&gt;使用Python查找IP - Mark Litwintschik&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MaxMind数据库提供了一个IP映射允许范围广泛的应用程序包括内容个性化,欺诈检测,广告定位,交通分析,合规,地理定位,地理防御和数字版权管理. Mark向我们展示了怎样在python中使用. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nbviewer.ipython.org/urls/gist.github.com/ChrisBeaumont/5758381/raw/descriptor_writeup.ipynb"&gt;详解 Python 描述符 - Chris Beaumont &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过代码详细的解释了 Python 描述符的使用. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html"&gt;Python import 系统的陷阱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 的 import 系统是强大的,同时也是复杂的. Nick Coghlan 详细的解释了 Python 3.3.x 中 import 是怎么样工作的. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.crumpington.com/blog/2014/10-19-high-performance-python-extensions-part-1.html"&gt;高性能的Python扩展 1,2,3 部分&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Crumpington Consulting LLC 公司的一系列博客 , 专注于使用NumPy API为Python编写高性能的C扩展模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kevinmcalear.com/thoughts/building-hater-news/"&gt;使用机器学习找出仇敌&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kevin McAlear  使用 Python,机器学习来找出不断提出负面新闻的评论家.  利用了pandas, numpy.&lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/np1/mps-youtube"&gt;mps-youtube&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;355 Stars, 31 Forks, 41 Watch&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基于终端的 YouTube播放器和下载器. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/slawekj/wolf"&gt;wolf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;371 Stars, 51 Watch, 44 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;外汇交易平台. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/faif/python-patterns"&gt;python-patterns&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;4029 Stars, 768 Watch, 1036 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;收集了 Python 常用的设计模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dutc/didyoumean"&gt;did you mean&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;84 Stars, 2 Watch, 6 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"你是什么意思?" 根据属性提供良好的错误提示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/josephmisiti/awesome-machine-learning#python"&gt;Awesome-Machine-Learning - Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3469 Stars, 345 Watch, 503 Fork&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一系列很棒的 机器学习框架,类库 和软件. 都是基于python的. &lt;/p&gt;
&lt;h2 id="_4"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://plus.google.com/+Importpythongoogle/posts/9FLi6bnfgix"&gt;Python Wear 的新生 »&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;读这个就对了.  看一看,她是很可爱的,代码很pythonic . &lt;/p&gt;
&lt;h2 id="_5"&gt;播了&lt;/h2&gt;
&lt;p&gt;~ Podcast/Vidoes&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/s16h/py-must-watch"&gt;Python 必看视频&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_6"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/asciimoo?tab=repositories"&gt;&lt;img alt="Adam Tauber" src="https://avatars2.githubusercontent.com/u/20240?v=2&amp;amp;s=100" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adam Tauber&lt;/p&gt;
&lt;h1 id="_7"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141205 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141205 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 5</title><link href="http://weekly.pychina.org/importpython/importpython-5.html" rel="alternate"></link><published>2014-10-23T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-10-23:importpython/importpython-5.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue5.html"&gt;issue5&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.7/releases/1.7.1/"&gt;Django 1.7.1 发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django1.7.1 修复了1.7 版本中的几个bug. &lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/101268/hidden-features-of-python#"&gt;Python 隐藏的特性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python 编程语言有哪些鲜为人知而又十分有用的特性呢? 6年前发布在 stackoverflow 上的这个问题,非常有必要读一读. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://engineroom.trackmaven.com/blog/first-monthly-challenge-elasticsearch/"&gt;通过Python使用Elasticsearch &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elasticsearch 是一个极为强大的搜索和分析引擎. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://asyncio.org/"&gt;Python Async IO 资源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整合了大量的关于python3.4 asyncio 的演讲,类库,资源. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://kracekumar.com/post/100399630630/python-global-keyword"&gt;Python 全局变量&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用简单的代码片段来解释全局变量是如何工作的?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://codecondo.com/best-python-ide-for-developers/"&gt;Python 最好的IDE 集合&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拥有一个好的代码编辑器(集成开发环境)真的可以改变你的开发速度,因为它能把工作项目完全整合起来. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.codementor.io/organize-python-online"&gt;大量的python在线学习教程&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://blog.miguelgrinberg.com/post/video-streaming-with-flask"&gt;Flask 处理视频流&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个篇文章着眼于流媒体,一个有趣的功能是让 Flask 应用可以把一个很大的 response 在一段很长的时间内切分成小块来响应. &lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pravj/Doga"&gt;Doga&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;194 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更好用的 HTTP log 监控控制台. Trivia Doga 是以印度漫画超级英雄人物来命名的. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://harelba.github.io/q/"&gt;q - Text as Data&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;338 Stars, Trending for 1 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;q 是一个可以直接在 CSVs/TSVs(任何其他表格形式的文本文件)文件上执行类似 SQL 查询的命令行工具. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/docker/fig"&gt;fig&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3294 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用Docker建立快速,隔离的开发环境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/landscapeio/prospector"&gt;prospector&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;241 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;检查 Python 源码,并提供类型,classes定位,方法等信息. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pixie-lang/pixie"&gt;Pixie&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;249 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A small fast, native lisp with "magical" powers.
一个小巧,快速,充满魔法力量的原始lisp. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sampsyo/beets"&gt;beets&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3247 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beets 是一个面向具有强迫症音乐极客的多媒体管理系统. beets 的目标是让你的音乐收藏变得一劳永逸. 
它可以自动分类和导入媒体信息,提供了一系列编辑和访问音乐的工具. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ngageoint/gamification-server"&gt;Gamification Server&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;43 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在网页或者app中追踪游戏元素(徽章,点,标记)的服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/mitsuhiko/logbook"&gt;Logbook&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;635 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个很酷的logging库,用来替换Python 内置logging库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ufoym/cropman"&gt;cropman&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;281 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;图像面部自动截取(看github的例子还挺准)&lt;/p&gt;
&lt;h2 id="_4"&gt;播了&lt;/h2&gt;
&lt;p&gt;~ Podcast&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.reddit.com/r/django/comments/2k2gz5/strategies_on_automated_django_deployment/"&gt;Django 自动化部署攻略»&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;讨论了现有的Django自动化部署方案.  在Reddit上&lt;/p&gt;
&lt;h2 id="_5"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选
&lt;img alt="start" src="https://avatars2.githubusercontent.com/u/2022803?v=2&amp;amp;s=100" /&gt;
Victor Felder&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141204 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141204 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;li&gt;150127 &lt;a href="http://orangleliu.info"&gt;orangleliu&lt;/a&gt; 补译&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 4</title><link href="http://weekly.pychina.org/importpython/importpython-4.html" rel="alternate"></link><published>2014-10-16T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-10-16:importpython/importpython-4.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue4.html"&gt;issue4&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pytools.codeplex.com/releases/view/109707"&gt;Visual Studio的Python工具2.1版本发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python Tools for Visual Studio (PTVS)是一个Visual Studio的开源插件,用来支持Python语言的开发. 
PTVS 拥有一系列的功能,包括CPython/IronPython,编辑,智能提示,交互式调试,性能分析,Microsoft Azure,Ipython 和支持跨平台调试. &lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.astro.up.pt/~sousasag/Python_For_Astronomers/Python_qr.pdf"&gt;PDF版Python快速参考手册&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于Python开发新手非常方面和有帮助的参考.  打印一份,好好利用吧&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://lgiordani.com/blog/2014/10/14/decorators-and-metaclasses/"&gt;Python装饰器和元类高级用法&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;告诉你如何使用元类和装饰器来创建强大的class,这些class可以通过添加装饰器方法被继承和定制.  Python3 的代码. (对大家提升非常有用啊)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dlo.me/archives/2014/09/08/pythonrc/"&gt;让你的Python Shell 大不相同&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你知道什么是 .pythonrc 吗? 阅读和定制你的Python shell.  是一个非常好的每日 python 生产力 hack.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mobify.com/blog/http-requests-are-hard/"&gt;Python处理失败的HTTP请求指南&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当你通过HTTP向远程服务器请求信息的时候会发生很多错误:请求超时, 服务器宕机, 或者是政府切断了海底光缆. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-the-django-one-click-install-image"&gt;怎样使用Django一键安装镜像&lt;/a&gt; »&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在寻找新主机在部署你的新Django web应用?DigitalOcean 是性价比最好的之一,这里有一份他们的Django VPS镜像快速使用手册. 
使用时注意配置好Django,Gunicorn,Nginx. &lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pritunl/pritunl"&gt;pritunl&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;338 Stars, Trending for 1 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;企业级VPN服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/django-fobi/"&gt;fobi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;5 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;django-fobi(后来就叫fobi)是一个个定制化的, 模块化的,对开发者友好的Django应用构建器. 
fobi可以让你用直观的桌面(GUI)方式建立Django forms,保存或者用邮件发布你的数据. API允许构建自己的表单元素和表单处理器(处理所提交的表单数据的机制)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/PierreQuentel/PyDbLite"&gt;PyDbLite&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;4 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速的,纯Python的内存数据库引擎. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/asciinema/asciinema-cli"&gt;asciinema-cli&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;329 Stars, Trending for 2 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;asciinema.org 服务的命令行记录器. Screencasting 命令行. 
查看demo -https://asciinema.org/ 看看吧,非常有用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jiaaro/pydub"&gt;pydub&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;845 Stars, Trending for 3 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用简单和高级的接口操纵声音&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://paulocheque.github.io/django-smart-autoregister/"&gt;Django Smart Autoregister&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;19 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它是一个Django 工具,可以使用一些好的模式来自动配置django 应用中的ModelAdmin类. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/DanMcInerney/search-google/blob/master/search-google.py"&gt;Scrap Google Results using selenium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用来拆解google搜索结果或者指定不拆解的小脚本,注意Google会对请求频率异常的IP进行封锁. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rakanalh/django-pushy"&gt;Django-pushy.&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;49 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用celery 提供Python / Django app 推送通告的功能. 这个app的主要用途是上帮助你发送推送通知到一定规模的用户. 
如果你有很多设备注册keys,django-pushy 可以把这些keys拆分成小组,然后并行发送,使得整个推送更快. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://engineeringblog.yelp.com/2014/10/introducing-pyleus.html"&gt;Pyleus: An Open-source Framework for Building Storm Topologies in Pure Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pyleus是一个新的开源框架,旨在为Storm(另一个开源Yelp project,对于Hadoop).  可以让开发者使用纯Python操作大规模数据,快速迭代,更多的时间来解决业务相关问题,更少的时间关心底层的平台. &lt;/p&gt;
&lt;h2 id="_4"&gt;社区儿&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.djangoproject.com/weblog/2014/oct/10/call-volunteers-djangocon-us-2015/"&gt;US 2015 DjangoCon 招募志愿者 »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;"如果你乐于助人,请加入DjangoCon组织的mailing list - https://groups.google.com/group/djangocon-organizers 让大家知道你是多么热心"&lt;/p&gt;
&lt;h2 id="_5"&gt;讨论&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reddit.com/r/Python/comments/2j0rl3/problems_with_teaching_python_in_school/"&gt;在学校教学Python遇到的问题 »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个老师分享了他每天在学校教学Python的挑战. reddit上很有教育的讨论. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/hashtag/PyConIE?src=hash"&gt;#PyConIE »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pycon Ireland @pyconireland 举办了他们的 2014 Pycon.  上tweets看看他们做了啥吧&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150123 来自 &lt;code&gt;PR&lt;/code&gt; &lt;a href="https://gitcafe.com/CPyUG/weekly/commit/87d20fa44e701ae2eac84439811f54fab6b75a20"&gt;87d20fa4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;141204 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;li&gt;150126 &lt;a href="http://orangleliu.info"&gt;orangleliu&lt;/a&gt; 补译&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 3</title><link href="http://weekly.pychina.org/importpython/importpython-3.html" rel="alternate"></link><published>2014-10-10T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-10-10:importpython/importpython-3.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;h2 id="hi"&gt;Hi&lt;/h2&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue3.html"&gt;issue3&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.python.org/downloads/release/python-342/"&gt;Python 3.4.2 发布&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python3.4.2修复了3.4.1中很多bug,并且还有其他的一些提升. 对于OS X系统的用户有个新特性:OS X的installers 是一个单独的安装文件包 并且兼容OS X Gatekeeper安全特性.  &lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.richwareham.com/articles/2014/09/29/little-planet-projection"&gt;小星球投影&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A Little Planet Panorma using Python and Scikit Image.
一个使用Python和Scikit Image 的小星球Panorma(有点没懂)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://speakerdeck.com/alangpierce/python-puzzlers/"&gt;Python谜题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;包含了6个谜题,揭示了Python语言编程中的一些陷阱和古怪.  每个谜题中,给你了一些Python代码,你的任务就是指出代码运行之后会发生什么. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://makkalot.github.io/posts/2014/Jul/13/django-auth-workflow/"&gt;Django 身份验证流程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;简要的综述了Django用户认证的流程. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.dabapps.com/blog/django-models-and-encapsulation/"&gt;Django 模型,封装和数据完整性&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As codebases grow it becomes difficult to make any cast-iron guarantees that you really are enforcing application-level data integrity.
随着代码库的增长就变得难有保证,你就强制应用级的数据完整性. &lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/riccardoscalco/Pykov"&gt;Pykov&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;163 Stars, Trending for 2 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pykov 是一个有限马尔可夫链的小模块&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/clowwindy/shadowsocks"&gt;Shadowsocks&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;3201 Stars, Trending for 2 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;快速的隧道代理助你翻越防火长城&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vandersonmota/t_dict"&gt;t_dict&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;32 Stars, Trending for 1 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Traversable Python Dictionaries. (有点不明白)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/aantonop/bitcoinbook/tree/develop/code"&gt;Mastering Bitcon Book's Code -&lt;/a&gt; &lt;ul&gt;
&lt;li&gt;492 Stars, Trending for 1 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Mastering Bitcoin是一个面向开发者的书.  早期的草稿放在gitub上,源码是用Python写的. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/grantjenks/sorted_containers"&gt;Sorted Containers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;182 Stars, Trending for 1 Day&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python可排序的容器类型:SortedList, SortedDict, and SortedSet使用纯python编写,但是速度跟用C实现一样快&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/web-i/ripple"&gt;Ripple&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1 Stars&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python的一个meta web 框架&lt;/p&gt;
&lt;h2 id="_4"&gt;播了&lt;/h2&gt;
&lt;p&gt;~ Podcast&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.binpress.com/blog/2014/10/07/binpress-podcast-episode-14-glyph-lefkowitz-twisted/"&gt;Glyph Lefkowitz ,Twisted的发明者&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Glyph 解释了为什么开源项目的创造者要对项目的用户负责, 为什么他既欣赏同时又批评开源社区 和为什么开源世界应该看到自由软件的根源. 
他还阐述了他接管Python IRC频道来促进Twisted项目,这个项目怎么样诞生,为什么会有一个光明的未来或者更好. &lt;/p&gt;
&lt;h2 id="_5"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mail.python.org/pipermail/python-dev/2014-October/136607.html"&gt;Victor Stinner »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Windows可用于Python的编译器的现状&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/olasitarska/status/520256058334650368"&gt;Ola Sitarska »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;380位女性和女生参加了在华沙的  @DjangoGirls&lt;/p&gt;
&lt;h2 id="_6"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/karan"&gt;&lt;img alt="karan" src="https://avatars0.githubusercontent.com/u/3261985?v=2&amp;amp;s=100" /&gt;
&lt;/a&gt;
Karan Goel&lt;/p&gt;
&lt;h2 id="_7"&gt;将来之书&lt;/h2&gt;
&lt;p&gt;Effective Python&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.effectivepython.com/"&gt;&lt;img alt="Effective Python" src="http://www.effectivepython.com/images/cover.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_8"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150123 来自&lt;code&gt;PR&lt;/code&gt; &lt;a href="https://gitcafe.com/CPyUG/weekly/commit/85a2f73fd5bb091748c88394801a6a2bd6f2e030"&gt;85a2f73f&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;141204 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;li&gt;150126 &lt;a href="http://orangleliu.info"&gt;orangleliu&lt;/a&gt; 补译&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 2</title><link href="http://weekly.pychina.org/importpython/importpython-2.html" rel="alternate"></link><published>2014-10-02T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-10-02:importpython/importpython-2.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;大家好,&lt;/h2&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/issue2.html"&gt;importpython-2&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.thehumangeo.com/2014/09/23/supercharging-your-reddit-api-access/"&gt;访问Reddit的API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解释了怎么用PRAW来使用它们的API访问Reddit(Python Reddit API 封装)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.indiegogo.com/projects/multiple-template-engines-for-django"&gt;Django多模板引擎&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django支持多个模板引擎的众筹活动.  Jinja2将会是模板.  由Aymeric Augustin发起. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.twilio.com/blog/2014/10/upgrading-your-django-reusable-app-to-support-django-1-7.html"&gt;更新你的可重用Djanog APP到Django1.7版本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Django项目从1.6以及以下版本升级到1.7的一个指南. 重点在数据迁移. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://sharq.io/"&gt;Sharq - 基于Redis的限制速率的队列系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态创建新队列和实时限制更新速率,零配置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mail.python.org/pipermail/distutils-sig/2014-September/024885.html"&gt;微软 Visual C++ 编译版Python2.7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;微软发布了一个Pyhton2.7的编译包,它可以让大家在windows上更容易的建立和发布C扩展模块&lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/taigaio/taiga-back"&gt;Taiga&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;518 Stars, Trending for 2 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记住scrum的web型项目管理工具, 建立在Django和AngularJS(后端代码)上. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/goagent/goagent"&gt;GoAgent&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;11 Stars, Trending for 1 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GAE代理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jonathanslenders/python-prompt-toolkit"&gt;Python Prompt Toolkit&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;763 Stars, Trending for 4 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用Python建立交互式命令行的库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/odoo/odoo"&gt;Odoo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1329 Stars, Trending for 2 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Odoo (原来的OpenERP). 帮助你做生意的开源APP.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/inboxapp/inbox"&gt;inbox&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;1622 Stars, Trending for 5 Days&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下一代邮件平台&lt;/p&gt;
&lt;h2 id="_4"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/gvanrossum/status/517418015613538304"&gt;Guido van Rossum »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PY2(pyhton2) 的使用者: 做你喜欢的东西并开始使用 "from _&lt;em&gt;future_&lt;/em&gt; import print_function"&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://9gag.com/gag/aKgj6M3?ref=tp"&gt;哈利·波特 和 Python »&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些该看或者不该看的&lt;/p&gt;
&lt;h2 id="_5"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jonathanslenders"&gt;&lt;img alt="jonathanslenders" src="https://avatars1.githubusercontent.com/u/216638?v=2&amp;amp;s=48" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/JakeWharton"&gt;&lt;img alt="JakeWharton" src="https://avatars0.githubusercontent.com/u/66577?v=2&amp;amp;s=48" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/feross"&gt;&lt;img alt="feross" src="https://avatars1.githubusercontent.com/u/121766?v=2&amp;amp;s=48" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ValdikSS"&gt;&lt;img alt="ValdikSS" src="https://avatars3.githubusercontent.com/u/3054729?v=2&amp;amp;s=48" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_6"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;150123 来自 &lt;a href="https://gitcafe.com/CPyUG/weekly/commit/635e235eb1b42c3f43d62ff73c5c48a89eb6854c"&gt;635e235e&lt;/a&gt; 的 &lt;code&gt;PR&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;141202 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;li&gt;150126 &lt;a href="http://orangleliu.info"&gt;orangleliu&lt;/a&gt; 补译&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 1 ~ 试发布</title><link href="http://weekly.pychina.org/importpython/importpython-1.html" rel="alternate"></link><published>2014-09-25T23:32:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2014-09-25:importpython/importpython-1.html</id><summary type="html">&lt;p&gt;&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/newsletter/archive/"&gt;Import Python Weekly Newsletter Archive&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="_1"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;Issue One was a pure text based newsletter. Will be converting the format. Will update as soon as it is done.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;141202 用时 .57分钟完成翻译.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;141202 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry><entry><title>蠎加载 Issue tpl</title><link href="http://weekly.pychina.org/importpython/importpython-tpl.html" rel="alternate"></link><published>2000-01-03T00:00:00+08:00</published><author><name>Zoom.Quiet</name></author><id>tag:weekly.pychina.org,2000-01-03:importpython/importpython-tpl.html</id><summary type="html">&lt;p&gt;ImportPython
&lt;img alt="importpython-barnner.png" src="http://zoomq.qiniudn.com/ZQCollection/snap/importpython-barnner.png?imageView2/2/h/80" /&gt;&lt;/p&gt;
&lt;p&gt;原文: &lt;a href="http://importpython.com/static/files/???.html"&gt;???&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="_1"&gt;发了&lt;/h2&gt;
&lt;p&gt;~ Just Out&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;h2 id="_2"&gt;该读&lt;/h2&gt;
&lt;p&gt;~ 文章, Blog, 教程...&lt;/p&gt;
&lt;h2 id="_3"&gt;代码&lt;/h2&gt;
&lt;p&gt;~ 包/模块/库/片段...&lt;/p&gt;
&lt;h2 id="_4"&gt;播了&lt;/h2&gt;
&lt;p&gt;~ Podcast&lt;/p&gt;
&lt;h2 id="_5"&gt;曰了&lt;/h2&gt;
&lt;p&gt;~ Tweets&lt;/p&gt;
&lt;h2 id="_6"&gt;本周之星&lt;/h2&gt;
&lt;p&gt;~ 一周 Python 程序员之选&lt;/p&gt;
&lt;h2 id="_7"&gt;将来之书&lt;/h2&gt;
&lt;h1 id="_8"&gt;是也乎&lt;/h1&gt;
&lt;p&gt;~ 参考: &lt;a href="importpython-why"&gt;为毛又一个蠎周刊?&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;141204 用时 .57分钟完成翻译.&lt;/li&gt;
&lt;li&gt;141204 &lt;a href="http://zoomquiet.io"&gt;Zoom.Quiet&lt;/a&gt; 用时7分钟完成格式化.&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Weekly"></category><category term="ImportPython"></category><category term="Zh"></category></entry></feed>